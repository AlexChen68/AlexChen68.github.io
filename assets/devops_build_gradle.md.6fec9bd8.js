import{_ as a,o as e,c as r,Q as l}from"./chunks/framework.01af844e.js";const m=JSON.parse('{"title":"Gradle 入门教程","description":"","frontmatter":{"title":"Gradle 入门教程","date":"2023-11-10T00:00:00.000Z","order":2},"headers":[],"relativePath":"devops/build/gradle.md","filePath":"devops/build/gradle.md","lastUpdated":1701689478000}'),o={name:"devops/build/gradle.md"},d=l('<h1 id="gradle-入门教程" tabindex="-1">Gradle 入门教程 <a class="header-anchor" href="#gradle-入门教程" aria-label="Permalink to &quot;Gradle 入门教程&quot;">​</a></h1><h2 id="什么是-gradle" tabindex="-1">什么是 Gradle？ <a class="header-anchor" href="#什么是-gradle" aria-label="Permalink to &quot;什么是 Gradle？&quot;">​</a></h2><p>Gradle 是一个基于 Apache Ant 和 Apache Maven 概念的项目自动化构建开源工具。它使用一种基于 Groovy 的特定领域语言 (DSL) 来声明项目设置，也增加了基于 Kotlin 语言的 kotlin-based DSL，抛弃了基于 XML 的各种繁琐配置。</p><ol><li>gradle 类似于 maven，是一个集项目 jar 包管理、依赖管理、项目打包等操作为一体的工具。</li><li>gradle 不同于 maven 的地方在于，取消 maven 笨重的 xml 配置，以独特简便的 groovy 语言代替大量繁琐的 xml 配置项。</li><li>拥有自己脚本语言的 gradle 更加灵活，我们可以在项目构建的时候通过 groovy 语言，去灵活的创建任务，依据自己的需求对项目进行构建，相比于 maven 来说，使用 groovy 进行构建的 gradle，扩展性和灵活性更高。</li></ol><h2 id="下载-gradle" tabindex="-1">下载 Gradle <a class="header-anchor" href="#下载-gradle" aria-label="Permalink to &quot;下载 Gradle&quot;">​</a></h2><p>下载地址：<a href="https://groovy.apache.org/download.html" target="_blank" rel="noreferrer">https://groovy.apache.org/download.html</a></p>',6),t=[d];function n(i,s,h,c,_,p){return e(),r("div",null,t)}const v=a(o,[["render",n]]);export{m as __pageData,v as default};
