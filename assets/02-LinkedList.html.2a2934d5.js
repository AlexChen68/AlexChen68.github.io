import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,b as n,d as a,f as c,e,r as l}from"./app.abaa51aa.js";const i={},u=c(`<h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p><code>LinkedList</code> \u540C\u65F6\u5B9E\u73B0\u4E86 <code>List</code> \u63A5\u53E3\u548C <code>Deque</code> \u63A5\u53E3\uFF0C\u5B83\u65E2\u53EF\u4EE5\u5F53\u6210\u987A\u5E8F\u5BB9\u5668\uFF0C\u53C8\u53EF\u4EE5\u4F5C\u4E3A\u53CC\u7AEF\u961F\u5217\u4F7F\u7528\uFF0C\u540C\u65F6\u8FD8\u53EF\u4EE5\u770B\u4F5C\u4E00\u4E2A\u6808\uFF08Stack\uFF09\u3002\u6808\u548C\u961F\u5217\u8FD8\u6709\u4E00\u4E2A\u66F4\u597D\u7684\u9009\u62E9\u662F <code>ArrayDeque</code>\uFF0C\u5B83\u6709\u6BD4 <code>LinkedList</code> \u66F4\u597D\u7684\u6027\u80FD\u3002(\u672C\u6587\u57FA\u4E8E JDK1.8)</p><h2 id="\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u56FE" aria-hidden="true">#</a> \u7C7B\u56FE</h2><p><img src="https://cdn.jsdelivr.net/gh/AlexChen68/images@master/blog/java/linkedlist_class.png" alt="LinkedList\u7C7B\u56FE" title=":size=60%" loading="lazy"></p><p><code>LinkedList</code> \u5B9E\u73B0\u4E86\u56DB\u4E2A\u63A5\u53E3\uFF1A</p><ul><li><code>java.util.List</code> List \u63A5\u53E3</li><li><code>java.io.Serializable</code> \u5E8F\u5217\u5316\u63A5\u53E3</li><li><code>java.lang.Cloneable</code> \u53EF\u514B\u9686\u63A5\u53E3</li><li><code>java.util.Deque</code> \u53CC\u7AEF\u961F\u5217\u63A5\u53E3</li></ul><p>\u53E6\u5916\uFF0C<code>LinkedList</code> \u7EE7\u627F\u4E86 <code>java.util.AbstractSequentialList</code> \u62BD\u8C61\u7C7B\uFF0C\u5B83\u662F <code>AbstracList</code> \u7684\u5B50\u7C7B\uFF0C\u5B9E\u73B0\u4E86\u53EA\u80FD<strong>\u8FDE\u7EED</strong>\u8BBF\u95EE\u201C\u6570\u636E\u5B58\u50A8\u201D \u7B49\u968F\u673A\u64CD\u4F5C\u7684\u65B9\u6CD5\uFF0C\u5B98\u65B9\u63A8\u8350\u5BF9\u4E8E\u652F\u6301\u968F\u673A\u8BBF\u95EE\u6570\u636E\u7684\u7EE7\u627F <code>AbstractList</code> \u62BD\u8C61\u7C7B\uFF0C\u4E0D\u652F\u6301\u7684\u7EE7\u627F <code>AbstractSequentialList</code> \u62BD\u8C61\u7C7B\u3002</p><h2 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h2><p>LinkedList \u6709\u4E09\u4E2A\u88AB <code>transient</code> \u4FEE\u9970\u7684\u5C5E\u6027\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">transient</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// \u5934\u7ED3\u70B9</span>
<span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>

<span class="token comment">// \u5C3E\u7ED3\u70B9</span>
<span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Node&lt;E&gt;</code> \u4E3A\u5185\u90E8\u7C7B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5143\u7D20</span>
    <span class="token class-name">E</span> item<span class="token punctuation">;</span>
    <span class="token comment">// \u524D\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token comment">// \u540E\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>

    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5BF9\u4E8E\u7B2C\u4E00\u4E2A\u8282\u70B9\u6765\u8BF4\uFF0Cprev \u4E3A null\uFF1B</li><li>\u5BF9\u4E8E\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u6765\u8BF4\uFF0Cnext \u4E3A null\uFF1B</li><li>\u5176\u4F59\u7684\u8282\u70B9\u5462\uFF0Cprev \u6307\u5411\u524D\u4E00\u4E2A\uFF0Cnext \u6307\u5411\u540E\u4E00\u4E2A\u3002</li></ul><h2 id="\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6309\u7167\u96C6\u5408\u7684\u8FED\u4EE3\u5668\u8FD4\u56DE\u7684\u987A\u5E8F\u6784\u9020\u4E00\u4E2A\u5305\u542B\u6307\u5B9A\u96C6\u5408\u5143\u7D20\u7684\u5217\u8868</span>
<span class="token keyword">public</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u96C6\u5408 c \u7684\u5143\u7D20\u5168\u90E8\u6DFB\u52A0\u5230\u94FE\u8868\u4E2D</span>
    <span class="token function">addAll</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u94FE\u8868\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u64CD\u4F5C" aria-hidden="true">#</a> \u94FE\u8868\u64CD\u4F5C</h2><blockquote><p>\u5728 LinkedList \u5185\u90E8\uFF0C\u63D0\u4F9B\u4E86\u5728\u94FE\u8868\u5934\u90E8\u3001\u4E2D\u95F4\u4EE5\u53CA\u5C3E\u90E8\u64CD\u4F5C\u6570\u636E\u7684\u57FA\u672C\u65B9\u6CD5\uFF0C\u4F8B\u5982 <code>linkFirst</code>\u3001<code>linkBefore</code>\u3001<code>linkLast</code> \u7B49\u7B49\uFF0C\u518D\u901A\u8FC7\u8FD9\u4E9B\u57FA\u672C\u65B9\u6CD5\u7684\u8C03\u7528\uFF0C\u6765\u5B9E\u73B0\u6EE1\u8DB3\u4E0D\u540C\u6570\u636E\u7ED3\u6784\u5B9A\u4E49\u7684\u64CD\u4F5C\u3002</p></blockquote><h3 id="\u6DFB\u52A0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u5143\u7D20" aria-hidden="true">#</a> \u6DFB\u52A0\u5143\u7D20</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u94FE\u63A5 e \u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">linkFirst</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u5934\u7ED3\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u65B0\u7ED3\u70B9\uFF0Cprev \u6307\u5411 null\uFF0Cnext \u6307\u5411\u5F53\u524D\u5934\u7ED3\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u7ED3\u70B9\u4F5C\u4E3A\u65B0\u7684\u5934\u7ED3\u70B9</span>
    first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u539F\u5934\u7ED3\u70B9\u4E3A null\uFF0C\u5219\u539F\u94FE\u8868\u4E3A\u7A7A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token comment">// \u65B0\u7ED3\u70B9\u4E5F\u662F\u5C3E\u7ED3\u70B9</span>
        last <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token comment">// \u539F\u5934\u7ED3\u70B9\u7684 prev \u6307\u5411\u65B0\u7ED3\u70B9</span>
        f<span class="token punctuation">.</span>prev <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5728\u975E\u7A7A\u8282\u70B9 succ \u4E4B\u524D\u63D2\u5165\u5143\u7D20 e</span>
<span class="token keyword">void</span> <span class="token function">linkBefore</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> succ<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// succ \u4E0D\u53EF\u4EE5\u4E3A\u7A7A</span>
    <span class="token comment">// \u83B7\u53D6 succ \u7684 \u524D\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> succ<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u65B0\u7ED3\u70B9\uFF0Cprev \u6307\u5411 succ \u7684\u524D\u4E00\u4E2A\u7ED3\u70B9\uFF0Cnext \u6307\u5411 succ</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> e<span class="token punctuation">,</span> succ<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// succ \u7684 prev \u6307\u5411\u65B0\u7ED3\u70B9</span>
    succ<span class="token punctuation">.</span>prev <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD succ \u662F\u4E0D\u662F\u5934\u7ED3\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token comment">// succ \u662F\u5934\u7ED3\u70B9\uFF0C\u5934\u7ED3\u70B9\u6307\u5411\u65B0\u7ED3\u70B9</span>
        first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token comment">// succ \u524D\u4E00\u4E2A\u7ED3\u70B9\u7684 next \u6307\u5411\u65B0\u7ED3\u70B9</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5728\u94FE\u8868\u672B\u5C3E\u6DFB\u52A0\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">linkLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u5C3E\u7ED3\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u65B0\u7ED3\u70B9\uFF0Cpre \u5F53\u524D\u7684\u5C3E\u7ED3\u70B9\uFF0Cnext \u4E3A null</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u7ED3\u70B9\u79F0\u4E3A\u5C3E\u7ED3\u70B9</span>
    last <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD\u539F\u6765\u7684\u5C3E\u7ED3\u70B9\u662F\u5426\u4E3A null\uFF0C\u5373\u5224\u65AD\u6574\u4E2A\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token comment">// \u94FE\u8868\u4E3A\u7A7A\uFF0C\u65B0\u52A0\u5165\u7684\u7ED3\u70B9\u662F\u7B2C\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u5934\u7ED3\u70B9\u4E5F\u6307\u5411\u5B83</span>
        first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token comment">// \u94FE\u8868\u4E0D\u4E3A\u7A7A\uFF0C\u524D\u5E8F\u7ED3\u70B9\u7684 next \u6307\u5411\u65B0\u52A0\u5165\u7684\u7ED3\u70B9</span>
        l<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u5143\u7D20" aria-hidden="true">#</a> \u5220\u9664\u5143\u7D20</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5220\u9664\u975E\u7A7A\u7684\u5934\u7ED3\u70B9 f</span>
<span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">unlinkFirst</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert f == first &amp;&amp; f != null;</span>
    <span class="token keyword">final</span> <span class="token class-name">E</span> element <span class="token operator">=</span> f<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6 f \u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> f<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token comment">// \u5C06 f \u7ED3\u70B9\u5C5E\u6027\u7F6E\u4E3A null\uFF0C\u5E2E\u52A9 GC</span>
    f<span class="token punctuation">.</span>item <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    f<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// help GC</span>
    <span class="token comment">// \u5934\u7ED3\u70B9\u6307\u5411 f \u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
    first <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u4E3A null\uFF0C\u8868\u793A\u94FE\u8868\u7A7A\u4E86\uFF0C\u5219\u5C3E\u7ED3\u70B9\u4E5F\u7F6E\u4E3A null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token comment">// \u5426\u5219\uFF0C\u5C06\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u7684 prev \u7F6E\u4E3A null\uFF0C\u8868\u793A\u5176\u524D\u9762\u6CA1\u6709\u7ED3\u70B9</span>
        next<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    size<span class="token operator">--</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5220\u9664\u975E\u7A7A\u7684\u7ED3\u70B9 x</span>
<span class="token class-name">E</span> <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert x != null;</span>
    <span class="token keyword">final</span> <span class="token class-name">E</span> element <span class="token operator">=</span> x<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token comment">// \u5206\u522B\u83B7\u53D6 x \u7684 prev \u7ED3\u70B9\u548C next \u7ED3\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>

    <span class="token comment">// \u524D\u9762\u6CA1\u7ED3\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prev <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        first <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u524D\u9762\u7ED3\u70B9\u548C\u540E\u9762\u7ED3\u70B9\u94FE\u63A5</span>
        prev<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u540E\u9762\u6CA1\u7ED3\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        last <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u540E\u9762\u7ED3\u70B9\u548C\u524D\u9762\u7ED3\u70B9\u94FE\u63A5</span>
        next<span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    x<span class="token punctuation">.</span>item <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    size<span class="token operator">--</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5220\u9664\u975E\u7A7A\u7684\u5C3E\u7ED3\u70B9 l</span>
<span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">unlinkLast</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert l == last &amp;&amp; l != null;</span>
    <span class="token keyword">final</span> <span class="token class-name">E</span> element <span class="token operator">=</span> l<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5C3E\u7ED3\u70B9\u7684\u524D\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev <span class="token operator">=</span> l<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token comment">// \u5C3E\u7ED3\u70B9\u5C5E\u6027\u7F6E\u4E3A null\uFF0C\u5E2E\u52A9 GC</span>
    l<span class="token punctuation">.</span>item <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    l<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// help GC</span>
    <span class="token comment">// \u524D\u4E00\u4E2A\u7ED3\u70B9\u6210\u4E3A\u65B0\u7684\u5C3E\u7ED3\u70B9</span>
    last <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u524D\u9762\u7ED3\u70B9\u4E3A null\uFF0C\u8868\u793A\u94FE\u8868\u7A7A\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prev <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        first <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token comment">// \u65B0\u5C3E\u7ED3\u70B9\u7684 next \u7F6E\u4E3A null</span>
        prev<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    size<span class="token operator">--</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u8BE2\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u5143\u7D20" aria-hidden="true">#</a> \u67E5\u8BE2\u5143\u7D20</h3><ol><li>\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7D22\u5F15\u5904\u7684\uFF08\u975E\u7A7A\uFF09\u8282\u70B9</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert isElementIndex(index);</span>

    <span class="token comment">// \u5982\u679C index \u5C0F\u4E8E size \u7684\u4E00\u534A\uFF0C\u5C31\u6B63\u5E8F\u904D\u5386\uFF0C\u83B7\u5F97\u7B2C index \u4E2A\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C index \u5927\u4E8E size \u7684\u4E00\u534A\uFF0C\u5C31\u5012\u5E8F\u904D\u5386\uFF0C\u83B7\u5F97\u7B2C index \u4E2A\u8282\u70B9</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> last<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> index<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u96C6\u5408\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u64CD\u4F5C" aria-hidden="true">#</a> \u96C6\u5408\u64CD\u4F5C</h2><blockquote><p>\u5F53 LinkedList \u4F5C\u4E3A List \u4F7F\u7528\u65F6\u5E38\u7528\u7684\u65B9\u6CD5</p></blockquote><h3 id="\u6DFB\u52A0\u5143\u7D20-1" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u5143\u7D20-1" aria-hidden="true">#</a> \u6DFB\u52A0\u5143\u7D20</h3><ol><li>\u5C06\u6307\u5B9A\u5143\u7D20\u9644\u52A0\u5230\u6B64\u5217\u8868\u7684\u672B\u5C3E</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">linkLast</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5728\u6B64\u5217\u8868\u4E2D\u7684\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u6307\u5B9A\u5143\u7D20</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkPositionIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> size<span class="token punctuation">)</span>
        <span class="token function">linkLast</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">linkBefore</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u6309\u7167\u6307\u5B9A\u96C6\u5408\u7684\u8FED\u4EE3\u5668\u8FD4\u56DE\u7684\u987A\u5E8F</li></ol><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">addAll</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="4"><li>\u5C06\u6307\u5B9A\u96C6\u5408\u4E2D\u7684\u6240\u6709\u5143\u7D20\u63D2\u5165\u6B64\u5217\u8868\uFF0C\u4ECE\u6307\u5B9A\u4F4D\u7F6E\u5F00\u59CB</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkPositionIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5C06 c \u8F6C\u4E3A Object \u6570\u7EC4 a</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> numNew <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numNew <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// \u83B7\u5F97\u7B2C index \u4F4D\u7F6E\u7684\u8282\u70B9 succ \uFF0C\u548C\u5176\u524D\u4E00\u4E2A\u8282\u70B9 pred</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> pred<span class="token punctuation">,</span> succ<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        succ <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        pred <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        succ <span class="token operator">=</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pred <span class="token operator">=</span> succ<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u904D\u5386 a \u6570\u7EC4\uFF0C\u521B\u5EFA\u7ED3\u70B9\u4F9D\u6B21\u6DFB\u52A0\u5230 pred \u540E\u9762</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> o <span class="token operator">:</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span> <span class="token class-name">E</span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> o<span class="token punctuation">;</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C pred \u4E3A null \uFF0C\u8BF4\u660E first \u4E5F\u4E3A null \uFF0C\u5219\u76F4\u63A5\u5C06 first \u6307\u5411\u65B0\u8282\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token comment">// pred \u4E0B\u4E00\u4E2A\u6307\u5411\u65B0\u8282\u70B9</span>
            pred<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
        <span class="token comment">// \u4FEE\u6539 pred \u6307\u5411\u65B0\u8282\u70B9</span>
        pred <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4FEE\u6539 succ \u548C pred \u7684\u6307\u5411</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>succ <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        last <span class="token operator">=</span> pred<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> succ<span class="token punctuation">;</span>
        succ<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    size <span class="token operator">+=</span> numNew<span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664\u5143\u7D20-1" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u5143\u7D20-1" aria-hidden="true">#</a> \u5220\u9664\u5143\u7D20</h3><ol><li>\u79FB\u9664\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkElementIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u4ECE\u6B64\u5217\u8868\u4E2D\u5220\u9664\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u6307\u5B9A\u5143\u7D20\uFF08\u5982\u679C\u5B58\u5728\uFF09</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE\u5934\u904D\u5386\uFF0C\u5339\u914D\u5230\u503C\u4E3A null \u7684\u5143\u7D20\u540E\u5220\u9664 </span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>item <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">unlink</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE\u5934\u904D\u5386\uFF0C\u5339\u914D\u5230\u503C\u4E3A o \u7684\u5143\u7D20\u540E\u5220\u9664 </span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">unlink</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u66F4\u65B0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0\u5143\u7D20" aria-hidden="true">#</a> \u66F4\u65B0\u5143\u7D20</h3><ol><li>\u5C06\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20\u66FF\u6362\u4E3A\u6307\u5B9A\u5143\u7D20</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token function">checkElementIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u627E\u5230\u7D22\u5F15\u4E3A index \u7684\u7ED3\u70B9\uFF0C\u8FDB\u884C\u66FF\u6362</span>
   <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">E</span> oldVal <span class="token operator">=</span> x<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
   x<span class="token punctuation">.</span>item <span class="token operator">=</span> element<span class="token punctuation">;</span>
   <span class="token keyword">return</span> oldVal<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u8BE2\u5143\u7D20-1" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u5143\u7D20-1" aria-hidden="true">#</a> \u67E5\u8BE2\u5143\u7D20</h3><ol><li>\u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkElementIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u5143\u7D20\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u7D22\u5F15</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>item <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> index<span class="token punctuation">;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> index<span class="token punctuation">;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u5143\u7D20\u6700\u540E\u4E00\u6B21\u51FA\u73B0\u7684\u7D22\u5F15</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> size<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE\u5C3E\u7ED3\u70B9\u904D\u5386\uFF0C\u7B2C\u4E00\u6B21\u5339\u914D\u5230\u503C\u4E3A null \u7684\u5143\u7D20\u540E\u7ED3\u675F</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> last<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            index<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>item <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> index<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE\u5C3E\u7ED3\u70B9\u904D\u5386\uFF0C\u7B2C\u4E00\u6B21\u5339\u914D\u5230\u503C\u4E3A o \u7684\u5143\u7D20\u540E\u7ED3\u675F</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> last<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            index<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> index<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u5982\u679C\u6B64\u5217\u8868\u5305\u542B\u6307\u5B9A\u5143\u7D20\uFF0C\u5219\u8FD4\u56DEtrue</li></ol><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="5"><li>\u6E05\u9664\u5217\u8868</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Clearing all of the links between nodes is &quot;unnecessary&quot;, but:</span>
    <span class="token comment">// - helps a generational GC if the discarded nodes inhabit</span>
    <span class="token comment">//   more than one generation</span>
    <span class="token comment">// - is sure to free memory even if there is a reachable Iterator</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>item <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    first <span class="token operator">=</span> last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F6C\u4E3A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u4E3A\u6570\u7EC4" aria-hidden="true">#</a> \u8F6C\u4E3A\u6570\u7EC4</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA Object \u6570\u7EC4</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4ECE\u5934\u7ED3\u70B9\u5F00\u59CB\u904D\u5386\uFF0C\u6BCF\u4E2A\u7ED3\u70B9\u7684\u503C\u5199\u5165\u6570\u7EC4</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
        result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token comment">// \u8FD4\u56DE\u6570\u7EC4</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C a \u6570\u7EC4\u7A7A\u95F4\u4E0D\u8DB3\uFF0C\u7ED9\u91CD\u65B0\u5206\u914D a \u6570\u7EC4\u7A7A\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> size<span class="token punctuation">)</span>
        a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Array</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>
                            a<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> a<span class="token punctuation">;</span>
    <span class="token comment">// \u987A\u5E8F\u904D\u5386\u94FE\u8868\uFF0C\u590D\u5236\u5230 a \u4E2D</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
        result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C a \u7A7A\u95F4\u6709\u5269\u4F59\uFF0C\u624B\u52A8\u7F6E\u4E3A null\uFF0C\u5E2E\u52A9 GC</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> size<span class="token punctuation">)</span>
        a<span class="token punctuation">[</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668</h3><p>\u83B7\u53D6 <code>iterator</code> \u8FED\u4EE3\u5668\uFF08\u901A\u8FC7\u7EE7\u627F <code>AbstractSequentialList</code> \u83B7\u5F97\uFF09\uFF0C\u5B9E\u9645\u8FD8\u662F\u83B7\u53D6 <code>listIterator</code> \u8FED\u4EE3\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// AbstractSequentialList.java</span>
<span class="token keyword">public</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// AbstractList.java</span>
<span class="token keyword">public</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// AbstractSequentialList.java</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>listIterator</code> \u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// LinkedList.java</span>

<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">ListItr</span> <span class="token keyword">implements</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u6700\u540E\u8FD4\u56DE\u7684\u8282\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> lastReturned<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u4E0B\u4E00\u4E2A\u8282\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u4E0B\u4E00\u4E2A\u8BBF\u95EE\u5143\u7D20\u7684\u4F4D\u7F6E\uFF0C\u4ECE\u4E0B\u6807 0 \u5F00\u59CB\u3002
     *
     * \u4E3B\u8981\u7528\u4E8E <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">nextIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> \u4E2D\uFF0C\u5224\u65AD\u662F\u5426\u904D\u5386\u7ED3\u675F
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> nextIndex<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u8FED\u4EE3\u5668\u65F6\uFF0C\u6570\u7EC4\u4FEE\u6539\u6B21\u6570\u3002
     *
     * \u5728\u8FED\u4EE3\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u4F1A\u629B\u51FA ConcurrentModificationException \u5F02\u5E38\u3002
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>

    <span class="token class-name">ListItr</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// assert isPositionIndex(index);</span>
        <span class="token comment">// \u83B7\u5F97\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
        next <span class="token operator">=</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> size<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u4F4D\u7F6E</span>
        nextIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nextIndex <span class="token operator">&lt;</span> size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6821\u9A8C\u662F\u5426\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u904D\u5386\u5230\u7ED3\u5C3E\uFF0C\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// lastReturned \u6307\u5411\uFF0C\u8BB0\u5F55\u6700\u540E\u8BBF\u95EE\u8282\u70B9</span>
        lastReturned <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token comment">// next \u6307\u5411\uFF0C\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
        next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token comment">// \u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u4F4D\u7F6E + 1</span>
        nextIndex<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8FD4\u56DE lastReturned</span>
        <span class="token keyword">return</span> lastReturned<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasPrevious</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nextIndex <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">previous</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6821\u9A8C\u662F\u5426\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u904D\u5386\u5230\u7ED3\u5C3E\uFF0C\u629B\u51FA NoSuchElementException \u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasPrevious</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4FEE\u6539 lastReturned \u548C next \u7684\u6307\u5411\u3002\u6B64\u65F6\uFF0ClastReturned \u548C next \u662F\u76F8\u7B49\u7684\u3002</span>
        lastReturned <span class="token operator">=</span> next <span class="token operator">=</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> last <span class="token operator">:</span> next<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
        <span class="token comment">// \u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u4F4D\u7F6E - 1</span>
        nextIndex<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8FD4\u56DE lastReturned</span>
        <span class="token keyword">return</span> lastReturned<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">nextIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nextIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">previousIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nextIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6821\u9A8C\u662F\u5426\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C lastReturned \u4E3A\u7A7A\uFF0C\u629B\u51FA IllegalStateException \u5F02\u5E38\uFF0C\u56E0\u4E3A\u65E0\u6CD5\u79FB\u9664\u4E86\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastReturned <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u83B7\u5F97 lastReturned \u7684\u4E0B\u4E00\u4E2A</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> lastNext <span class="token operator">=</span> lastReturned<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token comment">// \u79FB\u9664 lastReturned \u8282\u70B9</span>
        <span class="token function">unlink</span><span class="token punctuation">(</span>lastReturned<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6B64\u5904\uFF0C\u4F1A\u5206\u6210\u4E24\u79CD\u60C5\u51B5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> lastReturned<span class="token punctuation">)</span> <span class="token comment">// \u8BF4\u660E\u53D1\u751F\u8FC7\u8C03\u7528 \`#previous()\` \u65B9\u6CD5\u7684\u60C5\u51B5\uFF0Cnext \u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u800C nextIndex \u662F\u65E0\u9700\u66F4\u6539\u7684</span>
            next <span class="token operator">=</span> lastNext<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            nextIndex<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// nextIndex \u51CF\u4E00\u3002</span>

        <span class="token comment">// \u8BBE\u7F6E lastReturned \u4E3A\u7A7A</span>
        lastReturned <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// \u589E\u52A0\u6570\u7EC4\u4FEE\u6539\u6B21\u6570</span>
        expectedModCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C lastReturned \u4E3A\u7A7A\uFF0C\u629B\u51FA IllegalStateException \u5F02\u5E38\uFF0C\u56E0\u4E3A\u65E0\u6CD5\u4FEE\u6539\u4E86\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastReturned <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6821\u9A8C\u662F\u5426\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4FEE\u6539 lastReturned \u7684 item \u4E3A e</span>
        lastReturned<span class="token punctuation">.</span>item <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6821\u9A8C\u662F\u5426\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E lastReturned \u4E3A\u7A7A</span>
        lastReturned <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6B64\u5904\uFF0C\u4F1A\u5206\u6210\u4E24\u79CD\u60C5\u51B5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u5982\u679C next \u5DF2\u7ECF\u904D\u5386\u5230\u5C3E\uFF0C\u5219 e \u4F5C\u4E3A\u65B0\u7684\u5C3E\u8282\u70B9\uFF0C\u8FDB\u884C\u63D2\u5165\u3002\u7B97\u662F\u6027\u80FD\u4F18\u5316</span>
            <span class="token function">linkLast</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token comment">// \u63D2\u5165\u5230 next \u7684\u524D\u9762</span>
            <span class="token function">linkBefore</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// nextIndex \u52A0\u4E00\u3002</span>
        nextIndex<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// \u589E\u52A0\u6570\u7EC4\u4FEE\u6539\u6B21\u6570</span>
        expectedModCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">forEachRemaining</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u5269\u4F59\u94FE\u8868</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>modCount <span class="token operator">==</span> expectedModCount <span class="token operator">&amp;&amp;</span> nextIndex <span class="token operator">&lt;</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6267\u884C action \u903B\u8F91</span>
            action<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// lastReturned \u6307\u5411 next</span>
            lastReturned <span class="token operator">=</span> next<span class="token punctuation">;</span>
            <span class="token comment">//  next \u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
            next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token comment">// nextIndex \u52A0\u4E00\u3002</span>
            nextIndex<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6821\u9A8C\u662F\u5426\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53CC\u7AEF\u961F\u5217\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u53CC\u7AEF\u961F\u5217\u64CD\u4F5C" aria-hidden="true">#</a> \u53CC\u7AEF\u961F\u5217\u64CD\u4F5C</h2><p><code>LinkedList</code> \u5B9E\u73B0\u4E86 <code>Deque</code> \u63A5\u53E3\uFF08\u652F\u6301\u4E24\u7AEF\u5143\u7D20\u63D2\u5165\u548C\u79FB\u9664\u7684\u7EBF\u6027\u96C6\u5408\uFF09\uFF0C\u8BE5\u63A5\u53E3\u5B9A\u4E49\u4E86\u8BBF\u95EE\u53CC\u7AEF\u961F\u5217\u4E24\u7AEF\u5143\u7D20\u7684\u65B9\u6CD5\u3002</p><p>\u8BE5\u63A5\u53E3\u5B9A\u4E49\u4E86\u8BBF\u95EE\u53CC\u7AEF\u961F\u5217\u4E24\u7AEF\u5143\u7D20\u7684\u65B9\u6CD5\u3002\u63D0\u4F9B\u4E86\u63D2\u5165\u3001\u5220\u9664\u548C\u68C0\u67E5\u5143\u7D20\u7684\u65B9\u6CD5\u3002\u8FD9\u4E9B\u65B9\u6CD5\u4E2D\u7684\u6BCF\u4E00\u4E2A\u90FD\u4EE5\u4E24\u79CD\u5F62\u5F0F\u5B58\u5728\uFF1A\u4E00\u79CD\u5728\u64CD\u4F5C\u5931\u8D25\u65F6\u629B\u51FA\u5F02\u5E38\uFF0C\u53E6\u4E00\u79CD\u8FD4\u56DE\u7279\u6B8A\u503C\uFF08 null \u6216 false \uFF0C\u5177\u4F53\u53D6\u51B3\u4E8E\u64CD\u4F5C\uFF09\u3002\u540E\u4E00\u79CD\u5F62\u5F0F\u7684\u63D2\u5165\u64CD\u4F5C\u662F\u4E13\u95E8\u4E3A\u5BB9\u91CF\u53D7\u9650\u7684 <code>Deque</code> \u5B9E\u73B0\u800C\u8BBE\u8BA1\u7684\uFF1B\u5728\u5927\u591A\u6570\u5B9E\u73B0\u4E2D\uFF0C\u63D2\u5165\u64CD\u4F5C\u4E0D\u4F1A\u5931\u8D25\u3002</p><p>Deque \u65B9\u6CD5\u603B\u7ED3\uFF1A</p><table><thead><tr><th></th><th>\u5934\u90E8\u64CD\u4F5C\uFF08\u629B\u5F02\u5E38\uFF09</th><th>\u5934\u90E8\u64CD\u4F5C\uFF08\u7279\u6B8A\u503C\uFF09</th><th>\u5C3E\u90E8\u64CD\u4F5C\uFF08\u629B\u5F02\u5E38\uFF09</th><th>\u5C3E\u90E8\u64CD\u4F5C\uFF08\u7279\u6B8A\u503C\uFF09</th></tr></thead><tbody><tr><td>\u63D2\u5165</td><td>addFirst(e)</td><td>offerFirst(e)</td><td>addLast(e)</td><td>offerLast(e)</td></tr><tr><td>\u5220\u9664</td><td>removeFirst()</td><td>pollFirst()</td><td>removeLast()</td><td>pollLast()</td></tr><tr><td>\u68C0\u67E5</td><td>getFirst()</td><td>peekFirst()</td><td>getLast()</td><td>peekLast()</td></tr></tbody></table><p>\u8BE5\u63A5\u53E3\u6269\u5C55\u4E86 <code>Queue</code> \u63A5\u53E3\u3002\u5F53\u53CC\u7AEF\u961F\u5217\u7528\u4F5C\u961F\u5217\u65F6\uFF0C\u4F1A\u4EA7\u751F FIFO\uFF08\u5148\u8FDB\u5148\u51FA\uFF09\u884C\u4E3A\u3002\u5143\u7D20\u5728\u53CC\u7AEF\u961F\u5217\u7684\u672B\u5C3E\u6DFB\u52A0\u5E76\u4ECE\u5F00\u5934\u5220\u9664\uFF0C\u4ECE <code>Queue</code> \u63A5\u53E3\u7EE7\u627F\u7684\u65B9\u6CD5\u4E0E <code>Deque</code> \u65B9\u6CD5\u5B8C\u5168\u7B49\u4EF7\uFF0C\u5982\u4E0B\u8868\u6240\u793A\uFF1A</p><table><thead><tr><th>Queue \u65B9\u6CD5</th><th>Deque \u65B9\u6CD5</th></tr></thead><tbody><tr><td>add(e)</td><td>addLast(e)</td></tr><tr><td>offer(e)</td><td>offerLast(e)</td></tr><tr><td>remove()</td><td>removeFirst()</td></tr><tr><td>poll()</td><td>pollFirst()</td></tr><tr><td>element()</td><td>getFirst()</td></tr><tr><td>peek()</td><td>peekFirst()</td></tr></tbody></table><p>\u53CC\u7AEF\u961F\u5217\u4E5F\u53EF\u4EE5\u7528\u4F5C LIFO\uFF08\u540E\u8FDB\u5148\u51FA\uFF09\u5806\u6808\u3002\u5E94\u4F18\u5148\u4F7F\u7528\u6B64\u63A5\u53E3\u800C\u4E0D\u662F\u65E7\u7684 <code>Stack</code> \u7C7B\u3002\u5F53\u53CC\u7AEF\u961F\u5217\u7528\u4F5C\u5806\u6808\u65F6\uFF0C\u4ECE\u53CC\u7AEF\u961F\u5217\u7684\u5F00\u5934\u63A8\u9001\u548C\u5F39\u51FA\u5143\u7D20\u3002 <code>Stack</code> \u65B9\u6CD5\u5B8C\u5168\u7B49\u540C\u4E8E <code>Deque</code> \u65B9\u6CD5\uFF0C\u5982\u4E0B\u8868\u6240\u793A\uFF1A</p><table><thead><tr><th>Stack \u65B9\u6CD5</th><th>Deque \u65B9\u6CD5</th></tr></thead><tbody><tr><td>push(e)</td><td>addFirst(e)</td></tr><tr><td>pop()</td><td>removeFirst()</td></tr><tr><td>peek()</td><td>peekFirst()</td></tr></tbody></table><p>\u8BF7\u6CE8\u610F\uFF0C\u5F53\u53CC\u7AEF\u961F\u5217\u7528\u4F5C\u961F\u5217\u6216\u5806\u6808\u65F6\uFF0C peek\u65B9\u6CD5\u540C\u6837\u6709\u6548\uFF1B\u5728\u4EFB\u4F55\u4E00\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5143\u7D20\u90FD\u662F\u4ECE\u53CC\u7AEF\u961F\u5217\u7684<strong>\u5F00\u5934</strong>\u5F00\u59CB\u63D2\u5165\u7684\u3002</p><h3 id="\u6DFB\u52A0\u5143\u7D20-2" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u5143\u7D20-2" aria-hidden="true">#</a> \u6DFB\u52A0\u5143\u7D20</h3><ol><li>\u6DFB\u52A0\u5143\u7D20\u5230\u961F\u5217\u5934\uFF08\u6216\u5165\u6808\uFF09</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//--- Deque Interface ---</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addFirst</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">linkFirst</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">offerFirst</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">addFirst</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//--- Stack Interface ---</span>
<span class="token comment">// \u5165\u6808</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">addFirst</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u6DFB\u52A0\u5143\u7D20\u5230\u961F\u5217\u5C3E\u90E8</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//--- Deque Interface ---</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">linkLast</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">offerLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">addLast</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//--- Queue Interface ---</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">linkLast</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">offer</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664\u5143\u7D20-2" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u5143\u7D20-2" aria-hidden="true">#</a> \u5220\u9664\u5143\u7D20</h3><ol><li>\u4ECE\u961F\u5217\u5934\u90E8\u5220\u9664\u5143\u7D20\uFF08\u6216\u51FA\u6808\uFF09</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//--- Deque Interface ---</span>
<span class="token comment">// \u68C0\u7D22\u5E76\u5220\u9664\u6B64\u53CC\u7AEF\u961F\u5217\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u3002\u6B64\u65B9\u6CD5\u4E0EpollFirst\u7684\u4E0D\u540C\u4E4B\u5904\u4EC5\u5728\u4E8E\u5982\u679C\u6B64\u53CC\u7AEF\u961F\u5217\u4E3A\u7A7A\uFF0C\u5B83\u5C06\u5F15\u53D1\u5F02\u5E38</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">unlinkFirst</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u68C0\u7D22\u5E76\u5220\u9664\u6B64\u5217\u8868\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEnull </span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">pollFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">unlinkFirst</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//--- Queue Interface ---</span>
<span class="token comment">// \u68C0\u7D22\u5E76\u5220\u9664\u6B64\u961F\u5217\u7684\u5934\u90E8\uFF0C\u5982\u679C\u6B64\u961F\u5217\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEnull </span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">unlinkFirst</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u68C0\u7D22\u5E76\u5220\u9664\u6B64\u961F\u5217\u7684\u5934\u90E8\u3002\u6B64\u65B9\u6CD5\u4E0Epoll\u7684\u4E0D\u540C\u4E4B\u5904\u4EC5\u5728\u4E8E\u5982\u679C\u6B64\u961F\u5217\u4E3A\u7A7A\uFF0C\u5B83\u5C06\u5F15\u53D1\u5F02\u5E38</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//--- Stack Interface ---</span>
<span class="token comment">// \u4ECE\u6B64\u5217\u8868\u8868\u793A\u7684\u5806\u6808\u4E2D\u5F39\u51FA\u4E00\u4E2A\u5143\u7D20\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5220\u9664\u5E76\u8FD4\u56DE\u6B64\u5217\u8868\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u3002</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u4ECE\u961F\u5217\u5C3E\u90E8\u5220\u9664\u5143\u7D20</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//--- Deque Interface ---</span>
<span class="token comment">// \u79FB\u9664\u5E76\u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E3A\u7A7A\uFF0C\u5219\u629B\u5F02\u5E38</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">unlinkLast</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u68C0\u7D22\u5E76\u5220\u9664\u6B64\u5217\u8868\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEnull </span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">pollLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">unlinkLast</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u8BE2\u5143\u7D20-2" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u5143\u7D20-2" aria-hidden="true">#</a> \u67E5\u8BE2\u5143\u7D20</h3><ol><li>\u4ECE\u961F\u5217\u5934\u90E8\uFF08\u6808\u9876\uFF09\u83B7\u53D6\u5143\u7D20\u4F46\u4E0D\u5220\u9664</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//--- Deque Interface ---</span>
<span class="token comment">// \u68C0\u7D22\u4F46\u4E0D\u5220\u9664\u6B64\u5217\u8868\u7684\u5934\u90E8\uFF08\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF09\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E3A\u7A7A\uFF0C\u5219\u629B\u5F02\u5E38</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> f<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u68C0\u7D22\u4F46\u4E0D\u5220\u9664\u6B64\u5217\u8868\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEnull </span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">peekFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> f<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

<span class="token comment">//--- Stack Interface ---</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">element</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// also stack interface</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> f<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u4ECE\u961F\u5217\u5C3E\u90E8\u83B7\u53D6\u5143\u7D20\u4F46\u4E0D\u5220\u9664</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E3A\u7A7A\uFF0C\u5219\u629B\u5F02\u5E38</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">getLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> l<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u68C0\u7D22\u4F46\u4E0D\u5220\u9664\u6B64\u5217\u8868\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEnull</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">peekLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> l<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#\u5E8F\u5217\u5316" aria-hidden="true">#</a> \u5E8F\u5217\u5316</h2><ol><li>\u5E8F\u5217\u5316</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5199\u5165\u975E\u9759\u6001\u5C5E\u6027\u3001\u975E transient \u5C5E\u6027</span>
    s<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5199\u5165 size</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u904D\u5386\u5199\u5165\u5143\u7D20\u7684\u6570\u636E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
        s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u53CD\u5E8F\u5217\u5316</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectInputStream</span> s<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u975E\u9759\u6001\u5C5E\u6027\u3001\u975E transient \u5C5E\u6027</span>
    s<span class="token punctuation">.</span><span class="token function">defaultReadObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BFB\u53D6 size</span>
    <span class="token keyword">int</span> size <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u904D\u5386\u8BFB\u53D6\u5168\u90E8\u6570\u636E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token function">linkLast</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,92),k={href:"https://www.iocoder.cn/",target:"_blank",rel:"noopener noreferrer"},d=e("\u828B\u9053\u6E90\u7801"),r={href:"https://tobebetterjavaer.com/collection/gailan.html",target:"_blank",rel:"noopener noreferrer"},v=e("Java \u7A0B\u5E8F\u5458\u8FDB\u9636\u4E4B\u8DEF"),m={href:"https://pdai.tech/md/java/collection/java-collection-all.html",target:"_blank",rel:"noopener noreferrer"},b=e("Java\u5168\u6808\u77E5\u8BC6\u4F53\u7CFB");function w(y,f){const s=l("ExternalLinkIcon");return t(),o("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[d,a(s)])]),n("li",null,[n("a",r,[v,a(s)])]),n("li",null,[n("a",m,[b,a(s)])])])])}const h=p(i,[["render",w],["__file","02-LinkedList.html.vue"]]);export{h as default};
