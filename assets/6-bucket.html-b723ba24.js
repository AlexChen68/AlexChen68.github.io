const e=JSON.parse(`{"key":"v-994f8806","path":"/advance/algo/sort/6-bucket.html","title":"6. 桶排序","lang":"zh-CN","frontmatter":{"title":"6. 桶排序","index":false,"article":false,"tag":["排序算法"],"date":"2023-04-03T00:00:00.000Z","description":"简介 假设待排序的数组 a 中共有 N 个整数，并且已知数组 a 中数据的范围[0, MAX)。在桶排序时，创建容量为 MAX 的桶数组 r，并将桶数组元素都初始化为 0；将容量为 MAX 的桶数组中的每一个单元都看作一个\\"桶\\"。在排序时，逐个遍历数组 a，将数组 a 的值，作为\\"桶数组 r\\"的下标。当 a 中数据被读取时，就将桶的值加 1。例如，读取到数组 a[3]=5，则将 r[5]的值 +1。 排序步骤 假设 a={8,2,3,4,3,6,6,3,9}, max=10。此时，将数组 a 的所有数据都放到需要为 0-9 的桶中。如下图：","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/sort/6-bucket.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"6. 桶排序"}],["meta",{"property":"og:description","content":"简介 假设待排序的数组 a 中共有 N 个整数，并且已知数组 a 中数据的范围[0, MAX)。在桶排序时，创建容量为 MAX 的桶数组 r，并将桶数组元素都初始化为 0；将容量为 MAX 的桶数组中的每一个单元都看作一个\\"桶\\"。在排序时，逐个遍历数组 a，将数组 a 的值，作为\\"桶数组 r\\"的下标。当 a 中数据被读取时，就将桶的值加 1。例如，读取到数组 a[3]=5，则将 r[5]的值 +1。 排序步骤 假设 a={8,2,3,4,3,6,6,3,9}, max=10。此时，将数组 a 的所有数据都放到需要为 0-9 的桶中。如下图："}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-08T05:19:11.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2023-04-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-08T05:19:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"6. 桶排序\\",\\"description\\":\\"简介 假设待排序的数组 a 中共有 N 个整数，并且已知数组 a 中数据的范围[0, MAX)。在桶排序时，创建容量为 MAX 的桶数组 r，并将桶数组元素都初始化为 0；将容量为 MAX 的桶数组中的每一个单元都看作一个\\\\\\"桶\\\\\\"。在排序时，逐个遍历数组 a，将数组 a 的值，作为\\\\\\"桶数组 r\\\\\\"的下标。当 a 中数据被读取时，就将桶的值加 1。例如，读取到数组 a[3]=5，则将 r[5]的值 +1。 排序步骤 假设 a={8,2,3,4,3,6,6,3,9}, max=10。此时，将数组 a 的所有数据都放到需要为 0-9 的桶中。如下图：\\"}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"排序步骤","slug":"排序步骤","link":"#排序步骤","children":[]},{"level":2,"title":"演示动画","slug":"演示动画","link":"#演示动画","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"复杂度分析","slug":"复杂度分析","link":"#复杂度分析","children":[]}],"git":{"createdTime":1680719082000,"updatedTime":1694150351000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":5}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"advance/algo/sort/6-bucket.md","localizedDate":"2023年4月3日","excerpt":"<h2> 简介</h2>\\n<p>假设待排序的数组 a 中共有 N 个整数，并且已知数组 a 中数据的范围[0, MAX)。在桶排序时，创建容量为 MAX 的桶数组 r，并将桶数组元素都初始化为 0；将容量为 MAX 的桶数组中的每一个单元都看作一个\\"桶\\"。在排序时，逐个遍历数组 a，将数组 a 的值，作为\\"桶数组 r\\"的下标。当 a 中数据被读取时，就将桶的值加 1。例如，读取到数组 a[3]=5，则将 r[5]的值 +1。</p>\\n<h2> 排序步骤</h2>\\n<p>假设 a={8,2,3,4,3,6,6,3,9}, max=10。此时，将数组 a 的所有数据都放到需要为 0-9 的桶中。如下图：</p>","autoDesc":true}`);export{e as data};
