import{_ as t,o as e,c as a,Q as o}from"./chunks/framework.419948d5.js";const H=JSON.parse('{"title":"HTTP 和 HTTPS","description":"","frontmatter":{"title":"HTTP 和 HTTPS","date":"2023-05-19T00:00:00.000Z","order":2},"headers":[],"relativePath":"deploy/network/http.md","filePath":"deploy/network/http.md","lastUpdated":1699559446000}'),T={name:"deploy/network/http.md"},l=o('<h1 id="http-和-https" tabindex="-1">HTTP 和 HTTPS <a class="header-anchor" href="#http-和-https" aria-label="Permalink to &quot;HTTP 和 HTTPS&quot;">​</a></h1><h2 id="http-协议" tabindex="-1">HTTP 协议 <a class="header-anchor" href="#http-协议" aria-label="Permalink to &quot;HTTP 协议&quot;">​</a></h2><h3 id="http-协议简介" tabindex="-1">HTTP 协议简介 <a class="header-anchor" href="#http-协议简介" aria-label="Permalink to &quot;HTTP 协议简介&quot;">​</a></h3><p>HTTP 协议，全称超文本传输协议（Hypertext Transfer Protocol）。</p><p>顾名思义，HTTP 协议就是用来规范超文本的传输，超文本，也就是网络上的包括文本在内的各式各样的消息，具体来说，主要是来规范浏览器和服务器端的行为的。</p><p>并且，HTTP 是一个无状态（stateless）协议，也就是说服务器不维护任何有关客户端过去所发请求的消息。这其实是一种懒政，有状态协议会更加复杂，需要维护状态（历史信息），而且如果客户或服务器失效，会产生状态的不一致，解决这种不一致的代价更高。</p><div class="tip custom-block"><p class="custom-block-title">优点：</p><p>扩展性强、速度快、跨平台支持性好。</p></div><h3 id="http-协议通信过程" tabindex="-1">HTTP 协议通信过程 <a class="header-anchor" href="#http-协议通信过程" aria-label="Permalink to &quot;HTTP 协议通信过程&quot;">​</a></h3><p>HTTP 是应用层协议，它以 TCP（传输层）作为底层协议，默认端口为 <code>80</code>,通信过程主要如下：</p><ol><li>服务器在 80 端口等待客户的请求。</li><li>浏览器发起到服务器的 TCP 连接（创建套接字 Socket）。</li><li>服务器接收来自浏览器的 TCP 连接。</li><li>浏览器（HTTP 客户端）与 Web 服务器（HTTP 服务器）交换 HTTP 消息。</li><li>关闭 TCP 连接。</li></ol><h2 id="https-协议" tabindex="-1">HTTPS 协议 <a class="header-anchor" href="#https-协议" aria-label="Permalink to &quot;HTTPS 协议&quot;">​</a></h2><h3 id="https-协议简介" tabindex="-1">HTTPS 协议简介 <a class="header-anchor" href="#https-协议简介" aria-label="Permalink to &quot;HTTPS 协议简介&quot;">​</a></h3><p>HTTPS 协议（Hyper Text Transfer Protocol Secure），是 HTTP 的加强安全版本。</p><p>HTTPS 是基于 HTTP 的，也是用 TCP 作为底层协议，并额外使用 <code>SSL/TLS 协议</code> 用作加密和安全认证。默认端口号是 <code>443</code>。</p><p>HTTPS 协议中，SSL 通道通常使用基于密钥的加密算法，密钥长度通常是 40 比特或 128 比特。</p><div class="tip custom-block"><p class="custom-block-title">优点：</p><p>保密性好、信任度高。</p></div><blockquote><p>bilibili 上面有一个非常不错讲解 Https 的视频： <a href="https://www.bilibili.com/video/BV1uY4y1D7Ng" target="_blank" rel="noreferrer">https 技术鉴赏</a></p></blockquote>',17),r=[l];function i(p,s,h,c,d,P){return e(),a("div",null,r)}const _=t(T,[["render",i]]);export{H as __pageData,_ as default};
