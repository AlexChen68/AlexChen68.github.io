const e=JSON.parse(`{"key":"v-5a882a1c","path":"/advance/algo/sort/bubble.html","title":"冒泡排序","lang":"zh-CN","frontmatter":{"title":"冒泡排序","category":"算法","tag":["排序算法"],"date":"2022-09-27T00:00:00.000Z","description":"冒泡排序 从头遍历数列，从前往后依次的比较相邻两个数的大小，如果前者比后者大，则交换它们的位置，遍历一次后，可最大的元素就在数列的末尾； 重复上述操作，每一次遍历可以得到子数列的最大值放到该子数列的末尾，直到整个数列都有序为止。 因为每一次遍历，都能够获取到子数列的最大值并放到末尾，就像冒泡一样，因此叫做冒泡排序。 冒泡排序的优化： 增加一个标志位，记录本次遍历是否发生元素交换，如果没有交换，则表示数组已经是有序的了，无需再继续后面的遍历。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/sort/bubble.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"冒泡排序"}],["meta",{"property":"og:description","content":"冒泡排序 从头遍历数列，从前往后依次的比较相邻两个数的大小，如果前者比后者大，则交换它们的位置，遍历一次后，可最大的元素就在数列的末尾； 重复上述操作，每一次遍历可以得到子数列的最大值放到该子数列的末尾，直到整个数列都有序为止。 因为每一次遍历，都能够获取到子数列的最大值并放到末尾，就像冒泡一样，因此叫做冒泡排序。 冒泡排序的优化： 增加一个标志位，记录本次遍历是否发生元素交换，如果没有交换，则表示数组已经是有序的了，无需再继续后面的遍历。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-02T17:16:52.000Z"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2022-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-02T17:16:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"冒泡排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-02T17:16:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":2,"title":"演示动画","slug":"演示动画","link":"#演示动画","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"复杂度分析","slug":"复杂度分析","link":"#复杂度分析","children":[]}],"git":{"createdTime":1680444375000,"updatedTime":1680455812000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":2}]},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"advance/algo/sort/bubble.md","localizedDate":"2022年9月27日","excerpt":"<h2> 冒泡排序 </h2>\\n<ol>\\n<li>从头遍历数列，从前往后依次的<strong>比较相邻两个数的大小</strong>，如果前者比后者大，则交换它们的位置，遍历一次后，可最大的元素就在数列的末尾；</li>\\n<li>重复上述操作，每一次遍历可以得到子数列的最大值放到该子数列的末尾，直到整个数列都有序为止。</li>\\n</ol>\\n<p>因为每一次遍历，都能够获取到子数列的最大值并放到末尾，就像冒泡一样，因此叫做冒泡排序。</p>\\n<p><strong>冒泡排序的优化</strong>：</p>\\n<p>增加一个标志位，记录本次遍历是否发生元素交换，如果没有交换，则表示数组已经是有序的了，无需再继续后面的遍历。</p>","autoDesc":true}`);export{e as data};
