import{_ as e,W as a,X as l,a1 as c}from"./framework-ea95e8eb.js";const i={},d=c('<h2 id="什么是浏览器的热更新" tabindex="-1"><a class="header-anchor" href="#什么是浏览器的热更新" aria-hidden="true">#</a> 什么是浏览器的热更新</h2><p>浏览器的热更新，指的是: 在本地开发的同时打开浏览器进行预览，当代码文件发生变化时，浏览器自动更新页面内容的技术 自动更新，表现上分为：</p><ul><li>自动刷新整个页面</li><li>页面整体无刷新而只更新页面的部分内容</li></ul><h2 id="webpack-中的热更新配置" tabindex="-1"><a class="header-anchor" href="#webpack-中的热更新配置" aria-hidden="true">#</a> webpack 中的热更新配置</h2><p>四种更新模式：</p><ul><li><p>一切依赖手动</p></li><li><p>Watch 模式</p></li><li><p>Live Reload</p><p>在开发调试过程中会在网页中进行一些操作：</p><p>例如输入了一些表单数据想要调试错误提示的样式、打开了一个弹窗想要调试其中按钮的位置，切换回编辑 器，修改样式文件进行保存，网页刷新后回到了初始化的状态，不得不再次重复操作才能确认改动后的效果。</p></li><li><p>模块热替换 (Hot Module Replacement)</p></li></ul><p><img src="https://cdn.staticaly.com/gh/AlexChen68/OSS@master/blog/frontend/webpack热更新原理.png" alt="webpack 中的热更新原理" loading="lazy"></p><h2 id="webpack-中的打包流程" tabindex="-1"><a class="header-anchor" href="#webpack-中的打包流程" aria-hidden="true">#</a> webpack 中的打包流程</h2><ul><li><code>module</code>: 指在模块化编程中我们把应用程序分割成的独立功能的代码模块</li><li><code>chunk</code>: 指模块间按照引用关系组合成的代码块，一个 chunk 中可以包含多个 module</li><li><code>chunk group</code>: 指通过配置入口点 (entry point) 区分的块组，一个 chunk group 中可包含一到多个 chunk</li><li><code>bundling</code>: webpack 打包的过程</li><li><code>asset/bundle</code>: 打包产物</li></ul><p><img src="https://cdn.staticaly.com/gh/AlexChen68/OSS@master/blog/frontend/webpack打包流程" alt="webpack 中的打包流程" loading="lazy"></p>',10),o=[d];function t(n,p){return a(),l("div",null,o)}const h=e(i,[["render",t],["__file","2-reload.html.vue"]]);export{h as default};
