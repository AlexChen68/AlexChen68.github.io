const e=JSON.parse(`{"key":"v-f48d0040","path":"/frontend/build/2-reload.html","title":"浏览器热更新","lang":"zh-CN","frontmatter":{"title":"浏览器热更新","category":"前端工程化","date":"2023-04-12T00:00:00.000Z","description":"什么是浏览器的热更新 浏览器的热更新，指的是: 在本地开发的同时打开浏览器进行预览，当代码文件发生变化时，浏览器自动更新页面内容的技术 自动更新，表现上分为： 自动刷新整个页面 页面整体无刷新而只更新页面的部分内容 webpack 中的热更新配置 四种更新模式： 一切依赖手动 Watch 模式 Live Reload 在开发调试过程中会在网页中进行一些操作： 例如输入了一些表单数据想要调试错误提示的样式、打开了一个弹窗想要调试其中按钮的位置，切换回编辑\\t器，修改样式文件进行保存，网页刷新后回到了初始化的状态，不得不再次重复操作才能确认改动后的效果。 模块热替换 (Hot Module Replacement)","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/frontend/build/2-reload.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"浏览器热更新"}],["meta",{"property":"og:description","content":"什么是浏览器的热更新 浏览器的热更新，指的是: 在本地开发的同时打开浏览器进行预览，当代码文件发生变化时，浏览器自动更新页面内容的技术 自动更新，表现上分为： 自动刷新整个页面 页面整体无刷新而只更新页面的部分内容 webpack 中的热更新配置 四种更新模式： 一切依赖手动 Watch 模式 Live Reload 在开发调试过程中会在网页中进行一些操作： 例如输入了一些表单数据想要调试错误提示的样式、打开了一个弹窗想要调试其中按钮的位置，切换回编辑\\t器，修改样式文件进行保存，网页刷新后回到了初始化的状态，不得不再次重复操作才能确认改动后的效果。 模块热替换 (Hot Module Replacement)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-12T01:56:11.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-04-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-12T01:56:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浏览器热更新\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-12T01:56:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"什么是浏览器的热更新","slug":"什么是浏览器的热更新","link":"#什么是浏览器的热更新","children":[]},{"level":2,"title":"webpack 中的热更新配置","slug":"webpack-中的热更新配置","link":"#webpack-中的热更新配置","children":[]},{"level":2,"title":"webpack 中的打包流程","slug":"webpack-中的打包流程","link":"#webpack-中的打包流程","children":[]}],"git":{"createdTime":1681264571000,"updatedTime":1681264571000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":1.31,"words":392},"filePathRelative":"frontend/build/2-reload.md","localizedDate":"2023年4月12日","excerpt":"<h2> 什么是浏览器的热更新</h2>\\n<p>浏览器的热更新，指的是:\\n在本地开发的同时打开浏览器进行预览，当代码文件发生变化时，浏览器自动更新页面内容的技术\\n自动更新，表现上分为：</p>\\n<ul>\\n<li>自动刷新整个页面</li>\\n<li>页面整体无刷新而只更新页面的部分内容</li>\\n</ul>\\n<h2> webpack 中的热更新配置</h2>\\n<p>四种更新模式：</p>\\n<ul>\\n<li>\\n<p>一切依赖手动</p>\\n</li>\\n<li>\\n<p>Watch 模式</p>\\n</li>\\n<li>\\n<p>Live Reload</p>\\n<p>在开发调试过程中会在网页中进行一些操作：</p>\\n<p>例如输入了一些表单数据想要调试错误提示的样式、打开了一个弹窗想要调试其中按钮的位置，切换回编辑\\t器，修改样式文件进行保存，网页刷新后回到了初始化的状态，不得不再次重复操作才能确认改动后的效果。</p>\\n</li>\\n<li>\\n<p>模块热替换 (Hot Module Replacement)</p>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
