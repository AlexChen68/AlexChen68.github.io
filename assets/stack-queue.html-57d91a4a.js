const e=JSON.parse(`{"key":"v-16a09ca7","path":"/advance/ds/stack-queue.html","title":"线性表 - 栈和队列","lang":"zh-CN","frontmatter":{"title":"线性表 - 栈和队列","category":"数据结构","date":"2023-04-01T00:00:00.000Z","description":"栈和队列概述 栈：先入后出（LIFO） 队列：先入先出（FIFO） 栈和队列是以底层容器完成其所有的工作，对外提供统一的接口，底层容器是可插拔的（也就是说我们可以控制使用哪种容器来实现栈和队列的功能）。 常用的栈和队列的实现 ArrayDeque LinkedList 它们都实现了 Stack 和 Queue 接口。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/ds/stack-queue.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"线性表 - 栈和队列"}],["meta",{"property":"og:description","content":"栈和队列概述 栈：先入后出（LIFO） 队列：先入先出（FIFO） 栈和队列是以底层容器完成其所有的工作，对外提供统一的接口，底层容器是可插拔的（也就是说我们可以控制使用哪种容器来实现栈和队列的功能）。 常用的栈和队列的实现 ArrayDeque LinkedList 它们都实现了 Stack 和 Queue 接口。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-12T01:56:11.000Z"}],["meta",{"property":"article:published_time","content":"2023-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-12T01:56:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线性表 - 栈和队列\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-12T01:56:11.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"栈和队列概述","slug":"栈和队列概述","link":"#栈和队列概述","children":[]},{"level":2,"title":"常用的栈和队列的实现","slug":"常用的栈和队列的实现","link":"#常用的栈和队列的实现","children":[]}],"git":{"createdTime":1680370152000,"updatedTime":1681264571000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":2}]},"readingTime":{"minutes":0.4,"words":121},"filePathRelative":"advance/ds/stack-queue.md","localizedDate":"2023年4月1日","excerpt":"<h2> 栈和队列概述</h2>\\n<ul>\\n<li><strong>栈</strong>：先入后出（LIFO）</li>\\n<li><strong>队列</strong>：先入先出（FIFO）</li>\\n</ul>\\n<p>栈和队列是以底层容器完成其所有的工作，对外提供统一的接口，底层容器是可插拔的（也就是说我们可以控制使用哪种容器来实现栈和队列的功能）。</p>\\n<h2> 常用的栈和队列的实现</h2>\\n<ul>\\n<li>ArrayDeque</li>\\n<li>LinkedList</li>\\n</ul>\\n<p>它们都实现了 <code>Stack</code> 和 <code>Queue</code> 接口。</p>","autoDesc":true}`);export{e as data};
