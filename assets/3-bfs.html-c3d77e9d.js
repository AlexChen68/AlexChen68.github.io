const e=JSON.parse(`{"key":"v-1e0a2d56","path":"/advance/algo/search/3-bfs.html","title":"广度优先搜索","lang":"zh-CN","frontmatter":{"title":"广度优先搜索","category":"算法","date":"2023-06-07T00:00:00.000Z","description":"什么是广度优先搜索？ BFS：广度优先搜索的搜索过程有点像一层一层地进行遍历，每层遍历都以上一层遍历的结果作为起点，遍历一个距离能访问到的所有节点。需要注意的是，遍历过的节点不能再次被遍历。 BFS 常常用来求解无权图的最短路径问题。 在程序实现 BFS 时需要考虑以下问题： 队列：用来存储每一轮遍历得到的节点； 标记：对于遍历过的节点，应该将它标记，防止重复遍历。 代码框架","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/search/3-bfs.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"广度优先搜索"}],["meta",{"property":"og:description","content":"什么是广度优先搜索？ BFS：广度优先搜索的搜索过程有点像一层一层地进行遍历，每层遍历都以上一层遍历的结果作为起点，遍历一个距离能访问到的所有节点。需要注意的是，遍历过的节点不能再次被遍历。 BFS 常常用来求解无权图的最短路径问题。 在程序实现 BFS 时需要考虑以下问题： 队列：用来存储每一轮遍历得到的节点； 标记：对于遍历过的节点，应该将它标记，防止重复遍历。 代码框架"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-07T09:31:54.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-06-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-07T09:31:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"广度优先搜索\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-07T09:31:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"什么是广度优先搜索？","slug":"什么是广度优先搜索","link":"#什么是广度优先搜索","children":[]},{"level":2,"title":"代码框架","slug":"代码框架","link":"#代码框架","children":[]}],"git":{"createdTime":1686130314000,"updatedTime":1686130314000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":1.02,"words":306},"filePathRelative":"advance/algo/search/3-bfs.md","localizedDate":"2023年6月7日","excerpt":"<h2> 什么是广度优先搜索？</h2>\\n<blockquote>\\n<p>BFS：广度优先搜索的搜索过程有点像一层一层地进行遍历，每层遍历都以上一层遍历的结果作为起点，遍历一个距离能访问到的所有节点。需要注意的是，遍历过的节点不能再次被遍历。</p>\\n</blockquote>\\n<p>BFS 常常用来<strong>求解无权图的最短路径问题。</strong></p>\\n<p>在程序实现 BFS 时需要考虑以下问题：</p>\\n<ul>\\n<li>队列：用来存储每一轮遍历得到的节点；</li>\\n<li>标记：对于遍历过的节点，应该将它标记，防止重复遍历。</li>\\n</ul>\\n<h2> 代码框架</h2>","autoDesc":true}`);export{e as data};
