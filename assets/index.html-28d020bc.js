import{_ as i,W as a,X as t,Y as l,Z as e,a1 as r,a0 as p,C as n}from"./framework-07dc8c78.js";const c={},s={href:"https://baike.baidu.com/item/%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84/9663235",target:"_blank",rel:"noopener noreferrer"},d=p('<p>数据结构的三个方面：数据逻辑结构、数据存储结构、数据运算（即算法）</p><h2 id="数据的逻辑结构" tabindex="-1"><a class="header-anchor" href="#数据的逻辑结构" aria-hidden="true">#</a> 数据的逻辑结构</h2><h3 id="线性结构" tabindex="-1"><a class="header-anchor" href="#线性结构" aria-hidden="true">#</a> 线性结构</h3><blockquote><p>线性结构就是表中各个结点具有线性关系。如果从数据结构的语言来描述，线性结构应该包括如下几点：</p><ol><li><p>线性结构是非空集。</p></li><li><p>线性结构有且仅有一个开始结点和一个终端结点。</p></li><li><p>线性结构所有结点都最多只有一个直接前驱结点和一个直接后继结点。</p></li></ol></blockquote><p>线性结构可细分为：</p><ul><li>线性表 <ul><li>顺序表</li><li>链表</li></ul></li><li>栈</li><li>队列</li><li>串</li></ul><p>线性表和数组的区别:从概念上来看，线性表是一种抽象数据类型；数组是一种具体的数据结构。线性表与数组的逻辑结构是不一样的，线性表是元素之间具有1对1的线性关系的数据元素的集合，而数组是一组数据元素到数组下标的一一映射。</p><h3 id="非线性结构" tabindex="-1"><a class="header-anchor" href="#非线性结构" aria-hidden="true">#</a> 非线性结构</h3><blockquote><p>非线性结构就是表中各个结点之间具有多个对应关系。如果从数据结构的语言来描述，非线性结构应该包括如下几点：</p><p>1、非线性结构是非空集。</p><p>2、非线性结构的一个结点可能有多个直接前驱结点和多个直接后继结点。</p><p>在实际应用中，数组、广义表、树结构和图结构等数据结构都属于非线性结构。</p></blockquote><h2 id="数据的存储结构" tabindex="-1"><a class="header-anchor" href="#数据的存储结构" aria-hidden="true">#</a> 数据的存储结构</h2><ul><li><p>顺序</p><blockquote><p>指采用一组物理上连续的存储单元来依次存放所有的数据元素。<strong>因此我们只需要存储数据元素，不需要存储这些数据元素之间的关系</strong></p></blockquote></li><li><p>链接</p><blockquote><p>每一数据元素均使用一个结点来存储，并且每个结点的存储空间是单独分配的，因此这些不一定连续。<strong>我们不仅需要存储数据元素，而且还要存储数据元素之间的逻辑关系（将结点分为两部分，一部分存储数据元素本身，称为数据域；一部分存储下一个结点的地址，称为指针域。）</strong></p></blockquote></li><li><p>索引</p><blockquote><p>在索引存储结构中，不仅需要存储所有数据元素（称为主数据表），<strong>还需要建立附加的索引表。<strong>每个数据元素都由一个</strong>唯一</strong>的关键字来标识，由该关键字和对应的数据元素的地址构成一个索引项，存入索引表</p></blockquote></li><li><p>散列</p><blockquote><p>哈希存储结构是指依据数据元素的关键字，通过事先设计好的<strong>哈希函数计算出一个值</strong>，再将其作为该数据的存储地址。</p></blockquote></li></ul><h2 id="数据运算" tabindex="-1"><a class="header-anchor" href="#数据运算" aria-hidden="true">#</a> 数据运算</h2><ol><li><p>检索：检索就是在数据结构里查找满足一定条件的节点。一般是给定一个某字段的值，找具有该字段值的节点。</p></li><li><p>插入：往数据结构中增加新的节点。</p></li><li><p>删除：把指定的结点从数据结构中去掉。</p></li><li><p>更新：改变指定节点的一个或多个字段的值。</p></li><li><p>排序：把节点按某种指定的顺序重新排列。例如递增或递减。</p></li></ol>',13);function h(u,b){const o=n("ExternalLinkIcon");return a(),t("div",null,[l("p",null,[e("数据结构(data structure)是带有结构特性的数据元素的集合，它研究的是数据的"),l("a",s,[e("逻辑结构"),r(o)]),e("和数据的物理结构以及它们之间的相互关系，并对这种结构定义相适应的运算，设计出相应的算法，并确保经过这些运算以后所得到的新结构仍保持原来的结构类型。简而言之，数据结构是相互之间存在一种或多种特定关系的数据元素的集合，即带“结构”的数据元素的集合。“结构”就是指数据元素之间存在的关系，分为逻辑结构和存储结构。")]),d])}const k=i(c,[["render",h],["__file","index.html.vue"]]);export{k as default};
