const e=JSON.parse(`{"key":"v-ebd4ca5c","path":"/java/collection/map-linkedhashmap.html","title":"Map - LinkedHashMap 源码分析","lang":"zh-CN","frontmatter":{"title":"Map - LinkedHashMap 源码分析","date":"2022-09-30T00:00:00.000Z","tag":"Collection","category":"Java Collection","order":7,"description":"概述 HashMap 是哈希表的无序实现，LinkedHashMap 在 HashMap 的基础之上，提供了顺序访问的特性。而这里的顺序，包括两种： 按照 key-value 的插入顺序进行访问; 按照 key-value 的访问顺序进行访问（LRU 算法）。 类图","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/java/collection/map-linkedhashmap.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"Map - LinkedHashMap 源码分析"}],["meta",{"property":"og:description","content":"概述 HashMap 是哈希表的无序实现，LinkedHashMap 在 HashMap 的基础之上，提供了顺序访问的特性。而这里的顺序，包括两种： 按照 key-value 的插入顺序进行访问; 按照 key-value 的访问顺序进行访问（LRU 算法）。 类图"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T19:58:12.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:tag","content":"Collection"}],["meta",{"property":"article:published_time","content":"2022-09-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-02T19:58:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Map - LinkedHashMap 源码分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-02T19:58:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"类图","slug":"类图","link":"#类图","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"内部类","slug":"内部类","link":"#内部类","children":[]},{"level":2,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":2,"title":"添加键值对","slug":"添加键值对","link":"#添加键值对","children":[]},{"level":2,"title":"回调操作","slug":"回调操作","link":"#回调操作","children":[{"level":3,"title":"访问回调","slug":"访问回调","link":"#访问回调","children":[]},{"level":3,"title":"添加回调","slug":"添加回调","link":"#添加回调","children":[]},{"level":3,"title":"删除回调","slug":"删除回调","link":"#删除回调","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1680340044000,"updatedTime":1685735892000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":2}]},"readingTime":{"minutes":4.71,"words":1412},"filePathRelative":"java/collection/map-linkedhashmap.md","localizedDate":"2022年9月30日","excerpt":"<h2> 概述</h2>\\n<p><code>HashMap</code> 是哈希表的无序实现，<code>LinkedHashMap</code> 在 <code>HashMap</code> 的基础之上，提供了顺序访问的特性。而这里的顺序，包括两种：</p>\\n<ol>\\n<li>按照 key-value 的插入顺序进行访问;</li>\\n<li>按照 key-value 的访问顺序进行访问（LRU 算法）。</li>\\n</ol>\\n<h2> 类图</h2>\\n<p><img src=\\"https://cdn.staticaly.com/gh/AlexChen68/OSS@master/blog/java/linkedhashmap_class.png\\" alt=\\"LinkedHashMap 类图\\" title=\\":size=60%\\" loading=\\"lazy\\"></p>","autoDesc":true}`);export{e as data};
