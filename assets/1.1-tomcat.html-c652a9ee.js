const e=JSON.parse(`{"key":"v-a859dc66","path":"/devops/deploy/1.1-tomcat.html","title":"Tomcat 入门","lang":"zh-CN","frontmatter":{"title":"Tomcat 入门","date":"2023-02-20T00:00:00.000Z","icon":"tomcat","category":"middleware","tag":"tomcat","description":"什么是 Web 容器？ 早期的 web 应用主要应用于浏览静态网页，HTTP 服务器 (比如 Apache、Nginx) 向浏览器返回静态 HTML，浏览器负责解析 HTML，将结果呈现给用户。 随着互联网发展，我们已不满足于仅仅浏览静态网页，还希望通过一些交互操作来获取动态结果，因此也就需要一些扩展机制能够让 Http 服务器调用服务端程序。 于是 Sun 公司推出了 Servlet 容器。可以把 servlet 简单理解为运行在服务端的 java 小程序，但是 servlet 没有 main 方法，不能独立运行，因此必须把它部署到 serlet 容器，由容器来实例化并调用 servlet。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/devops/deploy/1.1-tomcat.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"Tomcat 入门"}],["meta",{"property":"og:description","content":"什么是 Web 容器？ 早期的 web 应用主要应用于浏览静态网页，HTTP 服务器 (比如 Apache、Nginx) 向浏览器返回静态 HTML，浏览器负责解析 HTML，将结果呈现给用户。 随着互联网发展，我们已不满足于仅仅浏览静态网页，还希望通过一些交互操作来获取动态结果，因此也就需要一些扩展机制能够让 Http 服务器调用服务端程序。 于是 Sun 公司推出了 Servlet 容器。可以把 servlet 简单理解为运行在服务端的 java 小程序，但是 servlet 没有 main 方法，不能独立运行，因此必须把它部署到 serlet 容器，由容器来实例化并调用 servlet。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-16T11:44:10.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:tag","content":"tomcat"}],["meta",{"property":"article:published_time","content":"2023-02-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-16T11:44:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Tomcat 入门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-16T11:44:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"什么是 Web 容器？","slug":"什么是-web-容器","link":"#什么是-web-容器","children":[]},{"level":2,"title":"Tomcat 简介","slug":"tomcat-简介","link":"#tomcat-简介","children":[]},{"level":2,"title":"Tomcat 的安装","slug":"tomcat-的安装","link":"#tomcat-的安装","children":[]},{"level":2,"title":"启动 Tomcat","slug":"启动-tomcat","link":"#启动-tomcat","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1684237450000,"updatedTime":1684237450000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":3.3,"words":991},"filePathRelative":"devops/deploy/1.1-tomcat.md","localizedDate":"2023年2月20日","excerpt":"<h2> 什么是 Web 容器？</h2>\\n<p>早期的 web 应用主要应用于浏览静态网页，HTTP 服务器 (比如 Apache、Nginx) 向浏览器返回静态 HTML，浏览器负责解析 HTML，将结果呈现给用户。</p>\\n<p>随着互联网发展，我们已不满足于仅仅浏览静态网页，还希望通过一些交互操作来获取动态结果，因此也就需要一些扩展机制能够让 Http 服务器调用服务端程序。</p>\\n<p>于是 Sun 公司推出了 Servlet 容器。可以把 servlet 简单理解为运行在服务端的 java 小程序，但是 servlet 没有 main 方法，不能独立运行，因此必须把它部署到 serlet 容器，由容器来实例化并调用 servlet。</p>","autoDesc":true}`);export{e as data};
