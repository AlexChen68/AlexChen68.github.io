import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.01af844e.js";const d=JSON.parse('{"title":"字符串的扩展","description":"","frontmatter":{"title":"字符串的扩展","date":"2023-05-13T00:00:00.000Z"},"headers":[],"relativePath":"frontend/es6/2.1-string.md","filePath":"frontend/es6/2.1-string.md","lastUpdated":1701996129000}'),p={name:"frontend/es6/2.1-string.md"},o=l(`<h2 id="字符的-unicode-表示法" tabindex="-1">字符的 Unicode 表示法 <a class="header-anchor" href="#字符的-unicode-表示法" aria-label="Permalink to &quot;字符的 Unicode 表示法&quot;">​</a></h2><p>ES6 加强了对 Unicode 的支持，允许采用<code>\\uxxxx</code> 形式表示一个字符，其中 <code>xxxx</code> 表示字符的 Unicode 码点。但是，这种表示法只限于码点在<code>\\u0000</code>~<code>\\uFFFF</code>之间的字符。超出这个范围的字符，必须用两个双字节的形式表示，或者将码点放入<strong>大括号</strong>。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\u0061</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;a&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\uD842\\uDFB7</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;𠮷&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\u{20BB7}</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;𠮷&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u0061</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;a&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\uD842\\uDFB7</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;𠮷&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u{20BB7}</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;𠮷&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>JavaScript 共有 6 种方法可以表示一个字符。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\z</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\172</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\x7A</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\u007A</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\u{7A}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\z</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\172</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\x7A</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\u007A</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\u{7A}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="字符串的遍历器接口" tabindex="-1">字符串的遍历器接口 <a class="header-anchor" href="#字符串的遍历器接口" aria-label="Permalink to &quot;字符串的遍历器接口&quot;">​</a></h2><p>ES6 为字符串添加了遍历器接口（详见《Iterator》一章），使得字符串可以被<code>for...of</code>循环遍历。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> codePoint </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;foo&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(codePoint)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;f&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;o&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;o&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> codePoint </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;foo&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(codePoint)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;f&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;o&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;o&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="json-stringify" tabindex="-1">JSON.stringify() <a class="header-anchor" href="#json-stringify" aria-label="Permalink to &quot;JSON.stringify()&quot;">​</a></h2><p>如果遇到<code>0xD800</code>到<code>0xDFFF</code>之间的单个码点，或者不存在的配对形式，它会返回转义字符串，留给应用自己决定下一步的处理。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\u{D834}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &quot;&quot;\\\\uD834&quot;&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\uDF06\\uD834</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &quot;&quot;\\\\udf06\\\\ud834&quot;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\u{D834}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// &quot;&quot;\\\\uD834&quot;&quot;</span></span>
<span class="line"><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\uDF06\\uD834</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// &quot;&quot;\\\\udf06\\\\ud834&quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="模板字符串" tabindex="-1">模板字符串 <a class="header-anchor" href="#模板字符串" aria-label="Permalink to &quot;模板字符串&quot;">​</a></h2><p>传统的 JavaScript 语言，通常需要使用 <code>&quot;&quot;</code> 和 <code>+</code> 来拼接字符串，ES6 引入了模板字符串解决这个问题。</p><p>模板字符串（template string）是增强版的字符串，用反引号 [\`] 标识。它可以当作普通字符串使用，也可以用来定义多行字符串，或者在字符串中嵌入变量。具体规则如下：</p><ol><li>用反引号包围模板字符串；</li><li>用 <code>\${}</code> 包围变量，表示从变量取值，填充到字符串中；</li><li>如果在模板字符串中需要使用反引号，则前面要用反斜杠转义。</li><li>如果使用模板字符串表示<strong>多行</strong>字符串，所有的空格和缩进都会被保留在输出之中，想消除的话可以使用 <code>trim()</code> 消除它。</li></ol><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 字符串中嵌入变量</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Bob&quot;</span><span style="color:#E1E4E8;">, time </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;today&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#9ECBFF;">\`Hello \${</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}, how are you \${</span><span style="color:#E1E4E8;">time</span><span style="color:#9ECBFF;">}?\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 字符串中嵌入变量</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Bob&quot;</span><span style="color:#24292E;">, time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;today&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#032F62;">\`Hello \${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}, how are you \${</span><span style="color:#24292E;">time</span><span style="color:#032F62;">}?\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>大括号内部可以放入任意的 <code>JavaScript</code> 表达式，可以进行运算，以及引用对象属性。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">x</span><span style="color:#9ECBFF;">} + \${</span><span style="color:#E1E4E8;">y</span><span style="color:#9ECBFF;">} = \${</span><span style="color:#E1E4E8;">x</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">y</span><span style="color:#9ECBFF;">}\`</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;1 + 2 = 3&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">x</span><span style="color:#9ECBFF;">} + \${</span><span style="color:#E1E4E8;">y</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">*</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">} = \${</span><span style="color:#E1E4E8;">x</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">y</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">*</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">}\`</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;1 + 4 = 5&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {x: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, y: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">obj</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">x</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">obj</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">y</span><span style="color:#9ECBFF;">}\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">x</span><span style="color:#032F62;">} + \${</span><span style="color:#24292E;">y</span><span style="color:#032F62;">} = \${</span><span style="color:#24292E;">x</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> </span><span style="color:#24292E;">y</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;1 + 2 = 3&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">x</span><span style="color:#032F62;">} + \${</span><span style="color:#24292E;">y</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">*</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">} = \${</span><span style="color:#24292E;">x</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> </span><span style="color:#24292E;">y</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">*</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;1 + 4 = 5&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {x: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, y: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">obj</span><span style="color:#032F62;">.</span><span style="color:#24292E;">x</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> </span><span style="color:#24292E;">obj</span><span style="color:#032F62;">.</span><span style="color:#24292E;">y</span><span style="color:#032F62;">}\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>模板字符串之中也能调用函数。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fn</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello World&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">\`foo \${</span><span style="color:#B392F0;">fn</span><span style="color:#9ECBFF;">()</span><span style="color:#9ECBFF;">} bar\`</span></span>
<span class="line"><span style="color:#6A737D;">// foo Hello World bar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fn</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello World&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">\`foo \${</span><span style="color:#6F42C1;">fn</span><span style="color:#032F62;">()</span><span style="color:#032F62;">} bar\`</span></span>
<span class="line"><span style="color:#6A737D;">// foo Hello World bar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,20),e=[o];function c(t,r,y,i,E,F){return n(),a("div",null,e)}const b=s(p,[["render",c]]);export{d as __pageData,b as default};
