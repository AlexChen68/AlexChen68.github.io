const e=JSON.parse(`{"key":"v-a0503190","path":"/advance/ds/1.4-string.html","title":"线性表 - 字符串","lang":"zh-CN","frontmatter":{"title":"线性表 - 字符串","category":"数据结构","date":"2023-04-07T00:00:00.000Z","description":"字符串概述 字符串是若干字符组成的有限序列，也可以理解为是一个字符数组，但是很多语言对字符串做了特殊的规定。 Java 中的字符串通过 final 类 String 实现，底层是 char 数组。 更多关于 Java String 的内容，可以参考 Java String 详解。 常用算法解法 双指针法 反转字符串 KMP 匹配算法 字符串匹配之 KMP 算法","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/ds/1.4-string.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"线性表 - 字符串"}],["meta",{"property":"og:description","content":"字符串概述 字符串是若干字符组成的有限序列，也可以理解为是一个字符数组，但是很多语言对字符串做了特殊的规定。 Java 中的字符串通过 final 类 String 实现，底层是 char 数组。 更多关于 Java String 的内容，可以参考 Java String 详解。 常用算法解法 双指针法 反转字符串 KMP 匹配算法 字符串匹配之 KMP 算法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-12T02:04:45.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-04-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-12T02:04:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线性表 - 字符串\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-12T02:04:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"字符串概述","slug":"字符串概述","link":"#字符串概述","children":[]},{"level":2,"title":"常用算法解法","slug":"常用算法解法","link":"#常用算法解法","children":[]},{"level":2,"title":"字符串匹配之 KMP 算法","slug":"字符串匹配之-kmp-算法","link":"#字符串匹配之-kmp-算法","children":[{"level":3,"title":"部分匹配表（前缀表）","slug":"部分匹配表-前缀表","link":"#部分匹配表-前缀表","children":[]},{"level":3,"title":"求解 next 数组","slug":"求解-next-数组","link":"#求解-next-数组","children":[]},{"level":3,"title":"使用 next 数组进行模式匹配","slug":"使用-next-数组进行模式匹配","link":"#使用-next-数组进行模式匹配","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1683857085000,"updatedTime":1683857085000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":3.75,"words":1125},"filePathRelative":"advance/ds/1.4-string.md","localizedDate":"2023年4月7日","excerpt":"<h2> 字符串概述</h2>\\n<p>字符串是若干字符组成的有限序列，也可以理解为是一个字符数组，但是很多语言对字符串做了特殊的规定。</p>\\n<p>Java 中的字符串通过 final 类 String 实现，底层是 char 数组。</p>\\n<p>更多关于 Java String 的内容，可以参考 <a href=\\"/java/basic/string\\">Java String 详解</a>。</p>\\n<h2> 常用算法解法</h2>\\n<ol>\\n<li>双指针法</li>\\n<li>反转字符串</li>\\n<li>KMP 匹配算法</li>\\n</ol>\\n<h2> 字符串匹配之 KMP 算法</h2>","autoDesc":true}`);export{e as data};
