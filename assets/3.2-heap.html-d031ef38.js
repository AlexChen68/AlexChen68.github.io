const e=JSON.parse(`{"key":"v-28cb7188","path":"/advance/algo/sort/3.2-heap.html","title":"堆排序","lang":"zh-CN","frontmatter":{"title":"堆排序","category":"算法","tag":["排序算法"],"date":"2023-04-03T00:00:00.000Z","description":"简介 堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。堆排序可以说是一种利用堆的概念来排序的选择排序。分为两种方法： 大顶堆（最大堆）：每个节点的值都大于或等于其子节点的值，在堆排序算法中用于升序排列； 小顶堆（最小堆）：每个节点的值都小于或等于其子节点的值，在堆排序算法中用于降序排列； 堆排序的平均时间复杂度为 Ο(nlogn)。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/sort/3.2-heap.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"堆排序"}],["meta",{"property":"og:description","content":"简介 堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。堆排序可以说是一种利用堆的概念来排序的选择排序。分为两种方法： 大顶堆（最大堆）：每个节点的值都大于或等于其子节点的值，在堆排序算法中用于升序排列； 小顶堆（最小堆）：每个节点的值都小于或等于其子节点的值，在堆排序算法中用于降序排列； 堆排序的平均时间复杂度为 Ο(nlogn)。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-05T18:24:42.000Z"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2023-04-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-05T18:24:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"堆排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-05T18:24:42.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"排序步骤","slug":"排序步骤","link":"#排序步骤","children":[]},{"level":2,"title":"演示动画","slug":"演示动画","link":"#演示动画","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"复杂度分析","slug":"复杂度分析","link":"#复杂度分析","children":[]}],"git":{"createdTime":1680719082000,"updatedTime":1680719082000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":1.91,"words":572},"filePathRelative":"advance/algo/sort/3.2-heap.md","localizedDate":"2023年4月3日","excerpt":"<h2> 简介</h2>\\n<p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：<strong>即子结点的键值或索引总是小于（或者大于）它的父节点</strong>。堆排序可以说是一种利用堆的概念来排序的选择排序。分为两种方法：</p>\\n<ul>\\n<li>大顶堆（最大堆）：每个节点的值都大于或等于其子节点的值，在堆排序算法中用于<em>升序</em>排列；</li>\\n<li>小顶堆（最小堆）：每个节点的值都小于或等于其子节点的值，在堆排序算法中用于<em>降序</em>排列；</li>\\n</ul>\\n<p>堆排序的平均时间复杂度为 Ο(nlogn)。</p>","autoDesc":true}`);export{e as data};
