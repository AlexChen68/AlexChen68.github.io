import{_ as p,W as c,X as l,Z as n,$ as s,a0 as a,a1 as i,C as e}from"./framework-ea95e8eb.js";const u={},r=n("h2",{id:"题目链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#题目链接","aria-hidden":"true"},"#"),s(" 题目链接")],-1),d={href:"https://leetcode.cn/problems/max-consecutive-ones/",target:"_blank",rel:"noopener noreferrer"},k={id:"题目描述",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#题目描述","aria-hidden":"true"},"#",-1),v=i(`<p>给定一个二进制数组 <code>nums</code> ，计算其中最大连续 <code>1</code> 的个数。</p><p><strong>示例 1：</strong></p><div class="language-text" data-ext="text"><pre class="language-text"><code>输入：nums = [1,1,0,1,1,1]
输出：3
解释：开头的两位和最后的三位都是连续 1 ，所以最大连续 1 的个数是 3.
</code></pre></div><p><strong>示例 2:</strong></p><div class="language-text" data-ext="text"><pre class="language-text"><code>输入：nums = [1,0,1,1,0,1]
输出：2
</code></pre></div><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>遍历二进制数组，记录最大连续个数，在遇到 0 或者遍历完成后仍是 1 时，更新最大连续个数。</p><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findMaxConsecutiveOnes</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> maxCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                maxCount <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> maxCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        maxCount <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> maxCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> maxCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h2><ul><li>时间复杂度：O(n)，其中 n 是数组的长度。需要遍历数组一次。</li><li>空间复杂度：O(1)。</li></ul>`,11);function h(_,b){const t=e("ExternalLinkIcon"),o=e("Badge");return c(),l("div",null,[r,n("ul",null,[n("li",null,[n("a",d,[s("485. 最大连续 1 的个数"),a(t)])])]),n("h2",k,[m,s(" 题目描述 "),a(o,{text:"简单",type:"tip"})]),v])}const g=p(u,[["render",h],["__file","485-最大连续 1 的个数.html.vue"]]);export{g as default};
