const e=JSON.parse(`{"key":"v-175e1f9a","path":"/frontend/tool/1.2-babel.html","title":"Babel 转码器","lang":"zh-CN","frontmatter":{"title":"Babel 转码器","category":null,"date":"2023-05-15T00:00:00.000Z","description":"简介 ES6 的某些高级语法在浏览器环境甚至是 Node.js 环境中无法执行。 Babel 是一个广泛使用的转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行执行。 这意味着，你可以现在就用 ES6 编写程序，而不用担心现有环境是否支持。下面是一个例子： // 转码前 input.map(item =&gt; item + 1); // 转码后 input.map(function (item) { return item + 1; });","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/frontend/tool/1.2-babel.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"Babel 转码器"}],["meta",{"property":"og:description","content":"简介 ES6 的某些高级语法在浏览器环境甚至是 Node.js 环境中无法执行。 Babel 是一个广泛使用的转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行执行。 这意味着，你可以现在就用 ES6 编写程序，而不用担心现有环境是否支持。下面是一个例子： // 转码前 input.map(item =&gt; item + 1); // 转码后 input.map(function (item) { return item + 1; });"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T15:15:50.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-05-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-15T15:15:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Babel 转码器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-15T15:15:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"安装 babel","slug":"安装-babel","link":"#安装-babel","children":[]},{"level":2,"title":"Babel 配置","slug":"babel-配置","link":"#babel-配置","children":[]},{"level":2,"title":"使用命令转码","slug":"使用命令转码","link":"#使用命令转码","children":[]},{"level":2,"title":"自定义脚本","slug":"自定义脚本","link":"#自定义脚本","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1684163248000,"updatedTime":1684163750000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":2}]},"readingTime":{"minutes":2.28,"words":685},"filePathRelative":"frontend/tool/1.2-babel.md","localizedDate":"2023年5月15日","excerpt":"<h2> 简介</h2>\\n<p>ES6 的某些高级语法在浏览器环境甚至是 Node.js 环境中无法执行。</p>\\n<p>Babel 是一个广泛使用的转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行执行。</p>\\n<p>这意味着，你可以现在就用 ES6 编写程序，而不用担心现有环境是否支持。下面是一个例子：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 转码前</span>\\ninput<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item</span> <span class=\\"token operator\\">=&gt;</span> item <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 转码后</span>\\ninput<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> item <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
