import{_ as o,W as c,X as i,Y as n,a0 as s,Z as a,a1 as l,C as t}from"./framework-7c4b0f0a.js";const u={},r=n("h2",{id:"题目链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#题目链接","aria-hidden":"true"},"#"),s(" 题目链接")],-1),d={href:"https://leetcode.cn/problems/find-the-town-judge/description/",target:"_blank",rel:"noopener noreferrer"},k={id:"题目描述",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#题目描述","aria-hidden":"true"},"#",-1),m=l(`<p>小镇里有 n 个人，按从 1 到 n 的顺序编号。传言称，这些人中有一个暗地里是小镇法官。</p><p>如果小镇法官真的存在，那么：</p><ul><li>小镇法官不会信任任何人。</li><li>每个人（除了小镇法官）都信任这位小镇法官。</li></ul><p>只有一个人同时满足属性 1 和属性 2。 给你一个数组 trust，其中 trust[i] = [ai, bi] 表示编号为 ai 的人信任编号为 bi 的人。</p><p>如果小镇法官存在并且可以确定他的身份，请返回该法官的编号；否则，返回 -1。</p><p>示例：</p><div class="language-text" data-ext="text"><pre class="language-text"><code>输入：n = 3, trust = [[1,3],[2,3]]
输出：3
</code></pre></div><p>提示：</p><ul><li>1 &lt;= n &lt;= 1000</li><li>0 &lt;= trust.length &lt;= 104</li><li>trust[i].length == 2</li><li>trust 中的所有 trust[i] = [ai, bi] 互不相同</li><li>ai != bi</li><li>1 &lt;= ai, bi &lt;= n</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>计算各节点的<strong>入度</strong>和<strong>出度</strong>：</p><p>根据题意，在法官存在的情况下，法官不相信任何人，每个人（除了法官外）都信任法官，且只有一名法官。因此法官这个节点的入度是 n−1, 出度是 0。</p><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findJudge</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> trust<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 因为人的序号是从 1 到 n，因此使用长度为 n+1 的数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> degree <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">:</span> trust<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 信任别人则 -1</span>
            degree<span class="token punctuation">[</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token comment">// 被别人信任则 +1</span>
            degree<span class="token punctuation">[</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 被其他所有人信任且不信任其他人，会等于 n-1</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>degree<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h2><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(n)</li></ul>`,16);function h(b,_){const e=t("ExternalLinkIcon"),p=t("Badge");return c(),i("div",null,[r,n("ul",null,[n("li",null,[n("a",d,[s("997. 找到小镇的法官"),a(e)])])]),n("h2",k,[v,s(" 题目描述 "),a(p,{text:"简单",type:"tip"})]),m])}const f=o(u,[["render",h],["__file","997-找到小镇的法官.html.vue"]]);export{f as default};
