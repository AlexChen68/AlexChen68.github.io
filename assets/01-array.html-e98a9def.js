import{_ as o,W as i,X as s,Y as e,a1 as t,a2 as c,Z as a,a0 as d,C as l}from"./framework-07dc8c78.js";const h={},_=d('<h2 id="数组概述" tabindex="-1"><a class="header-anchor" href="#数组概述" aria-hidden="true">#</a> 数组概述</h2><p>数组是一种连续存储线性结构，元素类型相同，大小相等，数组是多维的，通过使用整型索引值来访问他们的元素，数组尺寸不能改变。</p><p>数组的<strong>优点</strong>:</p><ul><li>存取速度快</li></ul><p>数组的<strong>缺点</strong>:</p><ul><li>事先必须知道数组的长度</li><li>空间通常是有限制的</li><li>需要大块连续的内存块</li><li>插入删除元素的效率很低</li></ul><h2 id="java中的数组实现" tabindex="-1"><a class="header-anchor" href="#java中的数组实现" aria-hidden="true">#</a> Java中的数组实现</h2>',7),u=e("h2",{id:"相关算法题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#相关算法题","aria-hidden":"true"},"#"),a(" 相关算法题")],-1),p={href:"https://leetcode.cn/problems/two-sum/",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,"常用解法：",-1),m=e("ol",null,[e("li",null,"双指针"),e("li",null,"额外数组计数")],-1);function x(k,v){const n=l("RouterLink"),r=l("ExternalLinkIcon");return i(),s("div",null,[_,e("p",null,[t(n,{to:"/md/java/collection/list-arraylist.html"},{default:c(()=>[a("ArrayList 源码分析")]),_:1})]),u,e("ul",null,[e("li",null,[e("a",p,[a("001. 两数之和"),t(r)])])]),f,m])}const g=o(h,[["render",x],["__file","01-array.html.vue"]]);export{g as default};
