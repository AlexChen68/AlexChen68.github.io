import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as o,b as n,d as a,f as c,e as t,r as l}from"./app.b62ae7a7.js";const i={},u=c(`<h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p>ArrayList \uFF0C\u57FA\u4E8E <code>[]</code> \u6570\u7EC4\u5B9E\u73B0\u7684\uFF0C\u652F\u6301<strong>\u81EA\u52A8\u6269\u5BB9</strong>\u7684\u52A8\u6001\u6570\u7EC4\u3002</p><h2 id="\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u56FE" aria-hidden="true">#</a> \u7C7B\u56FE</h2><p><img src="https://cdn.jsdelivr.net/gh/AlexChen68/images@master/blog/java/arraylist_class.png" alt="ArrayList\u7C7B\u56FE" loading="lazy"></p><p><code>ArrayList</code> <strong>\u5B9E\u73B0</strong>\u4E86 4 \u4E2A\u63A5\u53E3\uFF0C\u5206\u522B\u662F\uFF1A</p><ul><li><code>java.lang.Cloneable</code> \u63A5\u53E3\uFF0C\u8868\u793A ArrayList \u652F\u6301\u514B\u9686\u3002</li><li><code>java.util.RandomAccess</code> \u63A5\u53E3\uFF0C\u8868\u793A ArrayList \u652F\u6301<strong>\u5FEB\u901F</strong>\u7684\u968F\u673A\u8BBF\u95EE\u3002</li><li><code>java.io.Serializable</code> \u63A5\u53E3\uFF0C\u8868\u793A ArrayList \u652F\u6301\u5E8F\u5217\u5316\u7684\u529F\u80FD\u3002</li><li><code>java.util.List</code> \u63A5\u53E3\uFF0C\u63D0\u4F9B\u6570\u7EC4\u7684\u6DFB\u52A0\u3001\u5220\u9664\u3001\u4FEE\u6539\u3001\u8FED\u4EE3\u904D\u5386\u7B49\u64CD\u4F5C\u3002</li></ul><p>\u540C\u65F6\u8FD8<strong>\u7EE7\u627F</strong>\u4E86 <code>java.util.AbstractList</code> \u62BD\u8C61\u7C7B\uFF0C<code>AbstractList</code> \u7C7B\u63D0\u4F9B\u4E86\u4E00\u4E9B\u96C6\u5408\u7684\u9ED8\u8BA4\u5B9E\u73B0\u3002</p><h2 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h2><p>\u7C7B\u5C5E\u6027</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u9ED8\u8BA4\u521D\u59CB\u5BB9\u91CF</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_CAPACITY</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment">// \u7528\u4E8E\u7A7A\u5B9E\u4F8B\u7684\u5171\u4EAB\u7A7A\u6570\u7EC4\u5B9E\u4F8B\uFF08\u6570\u7EC4\u4E0D\u6307\u5B9A\u5BB9\u91CF\u65F6\u4F7F\u7528\uFF09</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">EMPTY_ELEMENTDATA</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7528\u4E8E\u9ED8\u8BA4\u5927\u5C0F\u7684\u7A7A\u5B9E\u4F8B\u7684\u5171\u4EAB\u7A7A\u6570\u7EC4\u5B9E\u4F8B\u3002\u6211\u4EEC\u5C06\u5176\u4E0E EMPTY_ELEMENTDATA \u533A\u5206\u5F00\u6765\uFF0C\u4EE5\u4E86\u89E3\u6DFB\u52A0\u7B2C\u4E00\u4E2A\u5143\u7D20\u65F6\u8981\u81A8\u80C0\u591A\u5C11</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">DEFAULTCAPACITY_EMPTY_ELEMENTDATA</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u8981\u5206\u914D\u7684\u6570\u7EC4\u7684\u6700\u5927\u5927\u5C0F\u3002\u4E00\u4E9B VM \u5728\u6570\u7EC4\u4E2D\u4FDD\u7559\u4E00\u4E9B\u6807\u9898\u5B57\u3002\u5C1D\u8BD5\u5206\u914D\u66F4\u5927\u7684\u6570\u7EC4\u53EF\u80FD\u4F1A\u5BFC\u81F4 OutOfMemoryError\uFF1A\u8BF7\u6C42\u7684\u6570\u7EC4\u5927\u5C0F\u8D85\u8FC7 VM \u9650\u5236</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAX_ARRAY_SIZE</span> <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span> <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u4F8B\u5C5E\u6027</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5B58\u50A8 ArrayList \u5143\u7D20\u7684\u6570\u7EC4\u7F13\u51B2\u533A\u3002 ArrayList \u7684\u5BB9\u91CF\u5C31\u662F\u8FD9\u4E2A\u6570\u7EC4\u7F13\u51B2\u533A\u7684\u957F\u5EA6\u3002\u5F53\u6DFB\u52A0\u7B2C\u4E00\u4E2A\u5143\u7D20\u65F6\uFF0C\u4EFB\u4F55\u5177\u6709 elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA \u7684\u7A7A ArrayList \u90FD\u5C06\u6269\u5C55\u4E3A DEFAULT_CAPACITY\u3002</span>
<span class="token keyword">transient</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">;</span>

<span class="token comment">// ArrayList \u7684\u5927\u5C0F\uFF08\u5B83\u5305\u542B\u7684\u5143\u7D20\u6570\u91CF\uFF09</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h2><ol><li>\u65E0\u53C2\u6784\u9020\u65F6\uFF1A\u4F7F\u7528\u9ED8\u8BA4\u7A7A\u6570\u7EC4\u5C5E\u6027 <code>DEFAULTCAPACITY_EMPTY_ELEMENTDATA</code></li></ol><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token constant">DEFAULTCAPACITY_EMPTY_ELEMENTDATA</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="2"><li>\u6307\u5B9A\u5BB9\u91CF\u6784\u9020\uFF1A\u5982\u679C\u5BB9\u91CF\u5927\u4E8E 0\uFF0C\u76F4\u63A5\u521B\u5EFA\u6307\u5B9A\u5BB9\u91CF\u7684\u5BF9\u8C61\u6570\u7EC4\uFF1B\u5982\u679C\u521D\u59CB\u5316\u5BB9\u91CF\u4E3A 0 \u65F6\uFF0C\u4F7F\u7528 <code>EMPTY_ELEMENTDATA</code> \u7A7A\u6570\u7EC4\uFF0C\u5728\u5411\u96C6\u5408\u6DFB\u52A0\u5143\u7D20\u65F6\uFF0C\u518D\u8FDB\u884C\u6269\u5BB9\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521D\u59CB\u5316\u5BB9\u91CF\u5927\u4E8E 0 \u65F6\uFF0C\u521B\u5EFA Object \u6570\u7EC4</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>initialCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521D\u59CB\u5316\u5BB9\u91CF\u7B49\u4E8E 0 \u65F6\uFF0C\u4F7F\u7528 EMPTY_ELEMENTDATA \u5BF9\u8C61</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token constant">EMPTY_ELEMENTDATA</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal Capacity: &quot;</span> <span class="token operator">+</span> initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u6309\u7167\u96C6\u5408\u7684\u8FED\u4EE3\u5668\u8FD4\u56DE\u7684\u987A\u5E8F\u6784\u9020\u4E00\u4E2A\u5305\u542B\u6307\u5B9A\u96C6\u5408\u5143\u7D20\u7684\u5217\u8868\uFF1A</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5148\u5C06\u6307\u5B9A\u96C6\u5408\u8F6C\u6362\u4E3A Object \u6570\u7EC4\uFF08\u5B9E\u9645\u4E0A\u5728 JDK9\u4E4B\u524D\uFF0C\u6570\u7EC4 a \u7684\u5B9E\u9645\u7C7B\u578B\u4E3A\u539F\u96C6\u5408\u7684\u7C7B\u578B\uFF09</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>size <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7531\u4E8E a \u7684\u7C7B\u578B\u4E0D\u4E00\u81F4\uFF0C\u9700\u8981\u5148\u5224\u65AD\uFF1B\u4E0D\u4E00\u81F4\u65F6\u9700\u8981\u5148\u8F6C\u4E3A Object \u6570\u7EC4\u518D\u8D4B\u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            elementData <span class="token operator">=</span> a<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6307\u5B9A\u96C6\u5408\u4E3A\u7A7A\uFF0C\u4F7F\u7528\u7A7A\u6570\u7EC4</span>
        elementData <span class="token operator">=</span> <span class="token constant">EMPTY_ELEMENTDATA</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>ArrayList</code> \u672A\u6307\u5B9A\u5BB9\u91CF\u6216\u96C6\u5408\u65F6\uFF0C\u5176\u521D\u59CB\u5316\u5B8C\u6210\u540E\uFF0C\u5185\u90E8\u6570\u7EC4\u4E3A <code>DEFAULTCAPACITY_EMPTY_ELEMENTDATA</code>\u7A7A\u6570\u7EC4\uFF0C\u8FD9\u6837\u662F\u4E3A\u4E86\u8282\u7701\u5185\u5B58\uFF1B\u4E4B\u6240\u4EE5\u4F7F\u7528 <code>DEFAULTCAPACITY_EMPTY_ELEMENTDATA</code> \u548C <code>EMPTY_ELEMENTDATA</code> \u4E24\u4E2A\u7A7A\u6570\u7EC4\uFF0C\u662F\u4E3A\u4E86\u533A\u522B\u6269\u5BB9\uFF0C\u524D\u8005\u7528\u4E8E\u672A\u6307\u5B9A\u5BB9\u91CF\u65F6\u4F7F\u7528\uFF0C\u9996\u6B21\u6269\u5BB9\u65F6\u4F1A\u6269\u5BB9\u81F3 10\uFF0C\u800C\u540E\u8005\u7528\u4E8E\u6307\u5B9A\u5BB9\u91CF\u4E3A 0 \u65F6\u4F7F\u7528\uFF0C\u9996\u6B21\u6269\u5BB9\u65F6\u4F1A\u6309\u7167 <strong>1.5 \u500D</strong>\u6269\u5BB9\u4ECE 0 \u5F00\u59CB\u800C\u4E0D\u662F 10\u3002</p><h2 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h2><h3 id="\u6DFB\u52A0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u5143\u7D20" aria-hidden="true">#</a> \u6DFB\u52A0\u5143\u7D20</h3><ol><li>\u6DFB\u52A0\u5355\u4E2A\u5143\u7D20\u5230\u6570\u7EC4\u672B\u5C3E <code>add(E e)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// </span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount!!</span>
    elementData<span class="token punctuation">[</span>size<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u6DFB\u52A0\u5355\u4E2A\u5143\u7D20\u5230\u6307\u5B9A\u987A\u5E8F <code>add(int index, E element)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rangeCheckForAdd</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount!!</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> size <span class="token operator">-</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>System.arraycopy</code> \u65B9\u6CD5\uFF0C\u4F5C\u7528\u4E3A\u5C06\u6307\u5B9A\u6E90\u6570\u7EC4\u4E2D\u7684\u6570\u7EC4\u4ECE\u6307\u5B9A\u4F4D\u7F6E\u5F00\u59CB\u590D\u5236\u5230\u76EE\u6807\u6570\u7EC4\u7684\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u8FD9\u662F\u4E00\u4E2A <code>native</code> \u65B9\u6CD5\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">arraycopy</span><span class="token punctuation">(</span><span class="token class-name">Object</span> src<span class="token punctuation">,</span>  <span class="token keyword">int</span>  srcPos<span class="token punctuation">,</span> <span class="token class-name">Object</span> dest<span class="token punctuation">,</span> <span class="token keyword">int</span> destPos<span class="token punctuation">,</span><span class="token keyword">int</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5F53\u5411\u6570\u7EC4\u6DFB\u52A0\u5143\u7D20\u524D\uFF0C\u90FD\u6267\u884C\u4E86 <code>ensureCapacityInternal(int minCapacity)</code> \u65B9\u6CD5\uFF0C\u6765\u786E\u4FDD\u6570\u7EC4\u6709\u8DB3\u591F\u7684\u5BB9\u91CF\u5BB9\u7EB3\u65B0\u6DFB\u52A0\u7684\u5143\u7D20\uFF0C\u5177\u4F53\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8BA1\u7B97\u9700\u8981\u6269\u5BB9\u7684\u5BB9\u91CF</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">calculateCapacity</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">,</span> <span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u6570\u7EC4\u4E3A\u9ED8\u8BA4\u7A7A\u6570\u7EC4\uFF0C\u5373\u521D\u59CB\u5316\u65F6\u672A\u6307\u5B9A\u5BB9\u91CF\u65F6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData <span class="token operator">==</span> <span class="token constant">DEFAULTCAPACITY_EMPTY_ELEMENTDATA</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F85\u6269\u5BB9\u7684\u6700\u5C0F\u6570\u7EC4\u5BB9\u91CF \u548C \u9ED8\u8BA4\u5BB9\u91CF 10 \u4E24\u8005\u53D6\u5927\u8005</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_CAPACITY</span><span class="token punctuation">,</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5426\u5219\u6269\u5BB9\u81F3\u6307\u5B9A\u5BB9\u91CF</span>
    <span class="token keyword">return</span> minCapacity<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8BA1\u7B97\u9700\u8981\u6269\u5BB9\u7684\u5BB9\u91CF\u5E76\u6269\u5BB9</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span><span class="token function">calculateCapacity</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6267\u884C\u6570\u7EC4\u6269\u5BB9</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token comment">// overflow-conscious code</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">-</span> elementData<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">// \u6570\u7EC4\u6269\u5BB9</span>
        <span class="token function">grow</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u6570\u7EC4\u6269\u5BB9 <code>grow(int minCapacity)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u589E\u52A0\u5BB9\u91CF\u4EE5\u786E\u4FDD\u5B83\u81F3\u5C11\u53EF\u4EE5\u5BB9\u7EB3\u6700\u5C0F\u5BB9\u91CF\u53C2\u6570\u6307\u5B9A\u7684\u5143\u7D20\u6570\u91CF</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4FDD\u5B58\u65E7\u5BB9\u91CF</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u5BB9\u91CF = 1.5 \u500D\u65E7\u5BB9\u91CF</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6307\u5B9A\u5BB9\u91CF\u5927\u4E8E 1.5 \u500D\u65E7\u5BB9\u91CF\uFF0C\u5219\u6269\u5BB9\u81F3\u6307\u5B9A\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u8D85\u51FA\u6700\u5927\u53EF\u6269\u5BB9\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> <span class="token constant">MAX_ARRAY_SIZE</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
     <span class="token comment">// \u6269\u5BB9\u81F3\u6574\u578B\u6700\u5927\u503C \u6216 \u6700\u5927\u53EF\u6269\u5BB9\u91CF MAX_ARRAY_SIZE</span>
        newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// minCapacity is usually close to size, so this is a win:</span>
    <span class="token comment">// \u6269\u5BB9</span>
    elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8BA1\u7B97\u8D85\u5927\u6269\u5BB9\u5BB9\u91CF\uFF1A\u6700\u5C0F\u5BB9\u91CF\u8D85\u8FC7\u6700\u5927\u53EF\u6269\u5BB9\u91CF\uFF0C\u6269\u5BB9\u81F3\u6574\u578B\u6700\u5927\u503C\uFF0C\u5426\u5219\u6269\u5BB9\u81F3\u6700\u5927\u53EF\u6269\u5BB9\u91CF</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// overflow</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">OutOfMemoryError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">&gt;</span> <span class="token constant">MAX_ARRAY_SIZE</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span> <span class="token operator">:</span> <span class="token constant">MAX_ARRAY_SIZE</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u6279\u91CF\u6DFB\u52A0\u591A\u4E2A\u5143\u7D20 <code>addAll(Collection&lt;? extends E&gt; c)</code>\uFF0C\u5728\u660E\u786E\u77E5\u9053\u9700\u8981\u6DFB\u52A0\u591A\u5C11\u5143\u7D20\u7684\u524D\u63D0\u4E0B\uFF0C\u4F7F\u7528\u672C\u65B9\u6CD5\u53EF\u51CF\u5C11\u6269\u5BB9\u6B21\u6570\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token comment">// \u8F6C\u6210 a \u6570\u7EC4</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u5982\u679C a \u6570\u7EC4\u5927\u5C0F\u4E3A 0 \uFF0C\u8FD4\u56DE ArrayList \u6570\u7EC4\u65E0\u53D8\u5316</span>
    <span class="token keyword">int</span> numNew <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u6269\u5BB9\u81F3\u786E\u4FDD\u53EF\u4EE5\u5BB9\u7EB3\u6DFB\u52A0\u540E\u7684\u5143\u7D20</span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> numNew<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount</span>
    <span class="token comment">// \u5C06 a \u590D\u5236\u5230 elementData \u4ECE s \u5F00\u59CB\u4F4D\u7F6E</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> size<span class="token punctuation">,</span> numNew<span class="token punctuation">)</span><span class="token punctuation">;</span>
    size <span class="token operator">+=</span> numNew<span class="token punctuation">;</span>
    <span class="token keyword">return</span> numNew <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u6279\u91CF\u6DFB\u52A0\u591A\u4E2A\u5143\u7D20 <code>addAll(int index, Collection&lt;? extends E&gt; c)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6821\u9A8C\u4F4D\u7F6E\u662F\u5426\u5728\u6570\u7EC4\u8303\u56F4\u5185</span>
    <span class="token function">rangeCheckForAdd</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8F6C\u6210 a \u6570\u7EC4</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> numNew <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u6269\u5BB9\u81F3\u786E\u4FDD\u53EF\u4EE5\u5BB9\u7EB3\u6DFB\u52A0\u540E\u7684\u5143\u7D20</span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> numNew<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount</span>
	<span class="token comment">// \u5982\u679C\u63D2\u5165\u7684\u4F4D\u7F6E\u5DF2\u7ECF\u6709\u5143\u7D20\u4E86\uFF0C\u5219\u9700\u8981\u8BA1\u7B97\u9700\u8981\u632A\u52A8\u7684\u4F4D\u7F6E\u6570\uFF0C\u5E76\u5C06\u5176\u540E\u79FB</span>
    <span class="token keyword">int</span> numMoved <span class="token operator">=</span> size <span class="token operator">-</span> index<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numMoved <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
    	<span class="token comment">// \u540E\u79FB\u5E76\u63D2\u5165\u6570\u7EC4</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index <span class="token operator">+</span> numNew<span class="token punctuation">,</span>
                         numMoved<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u63D2\u5165\u6570\u7EC4</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span> numNew<span class="token punctuation">)</span><span class="token punctuation">;</span>
    size <span class="token operator">+=</span> numNew<span class="token punctuation">;</span>
    <span class="token keyword">return</span> numNew <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u5143\u7D20" aria-hidden="true">#</a> \u5220\u9664\u5143\u7D20</h3><ol><li>\u5220\u9664\u6307\u5B9A\u4F4D\u7F6E\u7684\u5355\u4E2A\u5143\u7D20 <code>remove(int index)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u79FB\u9664\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20\u3002\u5C06\u4EFB\u4F55\u540E\u7EED\u5143\u7D20\u5411\u5DE6\u79FB\u52A8\uFF08\u4ECE\u5B83\u4EEC\u7684\u7D22\u5F15\u4E2D\u51CF\u53BB 1\uFF09</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u68C0\u67E5\u7D22\u5F15\u662F\u5426\u8D85\u51FA\u6570\u7EC4\u8303\u56F4</span>
    <span class="token function">rangeCheck</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u6307\u5B9A\u4F4D\u7F6E\u5143\u7D20</span>
    <span class="token class-name">E</span> oldValue <span class="token operator">=</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5224\u65AD\u9700\u8981\u5DE6\u79FB\u7684\u5143\u7D20\u4E2A\u6570</span>
    <span class="token keyword">int</span> numMoved <span class="token operator">=</span> size <span class="token operator">-</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numMoved <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">// \u79FB\u52A8</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span>
                         numMoved<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u65B0\u7684\u672B\u5C3E\u7F6E\u4E3A null\uFF0C\u5E2E\u52A9 GC</span>
    elementData<span class="token punctuation">[</span><span class="token operator">--</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// clear to let GC do its work</span>
    <span class="token comment">// \u8FD4\u56DE\u5220\u9664\u7684\u5143\u7D20\u503C</span>
    <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5220\u9664\u5355\u4E2A\u6307\u5B9A\u5143\u7D20 <code>remove(Object o)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4ECE\u6B64\u5217\u8868\u4E2D\u5220\u9664\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u6307\u5B9A\u5143\u7D20\uFF08\u5982\u679C\u5B58\u5728\uFF09\u3002\u5982\u679C\u5217\u8868\u4E0D\u5305\u542B\u8BE5\u5143\u7D20\uFF0C\u5219\u5B83\u4E0D\u53D8</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5982\u679C\u8981\u5220\u9664\u7684\u5143\u7D20\u4E3A null\uFF0C\u4F7F\u7528 == \u5224\u65AD</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5220\u9664\u5143\u7D20</span>
                <span class="token function">fastRemove</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5982\u679C\u8981\u5220\u9664\u7684\u5143\u7D20\u4E0D\u4E3A null\uFF0C\u4F7F\u7528 equals \u5224\u65AD</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">fastRemove</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4ECE\u6570\u7EC4\u5220\u9664\u5143\u7D20</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fastRemove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> numMoved <span class="token operator">=</span> size <span class="token operator">-</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numMoved <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span>
                         numMoved<span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span><span class="token operator">--</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// clear to let GC do its work</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u5220\u9664\u6307\u5B9A\u96C6\u5408\u4E2D\u7684\u6240\u6709\u5143\u7D20 <code>removeAll(Collection&lt;?&gt; c)</code></li></ol><blockquote><p>\u6CE8\u610F\u5176\u4E2D\u7684 <code>complement</code> \u53C2\u6570\uFF0C\u5F53\u9700\u8981\u5220\u9664\u5143\u7D20\u65F6\uFF0C<code>complement</code> \u4E3A false\uFF0C\u8868\u793A\u5728\u96C6\u5408 c \u4E2D\uFF0C\u5C31\u4E0D\u6267\u884C\u540E\u7EED\u4EE3\u7801\uFF08\u4FDD\u7559\u5143\u7D20\uFF09\uFF1B\u5F53\u9700\u8981\u4FDD\u7559\u5143\u7D20\u65F6\uFF0C<code>complement</code> \u4E3A true\uFF0C\u8868\u793A\u5728\u96C6\u5408 c \u4E2D\uFF0C\u5C31\u6267\u884C\u540E\u7EED\u4EE3\u7801\uFF08\u4FDD\u7559\u5143\u7D20\uFF09\u3002</p><p>\u5728 <code>finally</code> \u5757\u4E2D\uFF0C \u5982\u679C contains \u65B9\u6CD5\u53D1\u751F\u5F02\u5E38\uFF0C\u5219\u5C06 es \u4ECE r \u4F4D\u7F6E\u7684\u6570\u636E\u5199\u5165\u5230 es \u4ECE w \u5F00\u59CB\u7684\u4F4D\u7F6E\u3002\u8FD9\u6837\uFF0C\u4FDD\u8BC1\u6211\u4EEC\u5269\u4F59\u672A\u904D\u5386\u5230\u7684\u5143\u7D20\uFF0C\u80FD\u591F\u632A\u5230\u4ECE\u4ECE w \u5F00\u59CB\u7684\u4F4D\u7F6E\uFF0C\u907F\u514D\u591A\u51FA\u6765\u4E00\u4E9B\u5143\u7D20\u3002\u6700\u540E\u5BF9\u79FB\u52A8\u540E\u7A7A\u51FA\u4F4D\u7F6E\u7684\u503C\u8BBE\u4E3A null\uFF0C\u5E2E\u52A9 GC</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4ECE\u6B64\u5217\u8868\u4E2D\u5220\u9664\u5305\u542B\u5728\u6307\u5B9A\u96C6\u5408\u4E2D\u7684\u6240\u6709\u5143\u7D20</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65AD\u8A00\u6307\u5B9A\u96C6\u5408\u4E0D\u4E3Anull</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">batchRemove</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6279\u91CF\u5220\u9664\u5143\u7D20</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">batchRemove</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">,</span> <span class="token keyword">boolean</span> complement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">;</span>
    <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> w <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> modified <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u904D\u5386\u6570\u7EC4\u5143\u7D20</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> r <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> r<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token comment">// \u7EE7\u7EED\u904D\u5386 elementData \u6570\u7EC4\uFF0C\u5982\u4F55\u7B26\u5408\u6761\u4EF6\uFF08\u7531\u4F20\u5165\u53C2\u6570 complement \u786E\u5B9A\uFF09\uFF0C\u5219\u8FDB\u884C\u79FB\u9664</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> complement<span class="token punctuation">)</span>
                <span class="token comment">// \u79FB\u9664\u7684\u65B9\u5F0F\uFF0C\u901A\u8FC7\u5C06\u5F53\u524D\u503C e \u5199\u5165\u5230 w \u4F4D\u7F6E\uFF0C\u7136\u540E w \u8DF3\u5230\u4E0B\u4E00\u4E2A\u4F4D\u7F6E\u3002</span>
                <span class="token comment">// \u4F8B\u5982\uFF1Acomplement \u4E3A false\uFF0C\u5373\u5F53\u524D\u5143\u7D20\u4E0D\u5728\u5F85\u5220\u9664\u5217\u8868\u91CC\u9762\uFF0C\u5219\u5F53\u524D\u5143\u7D20\u5199\u5165 w \u4F4D\u7F6E\uFF0Cw \u4EE3\u8868\u5269\u4F59\u5143\u7D20\u7684\u7D22\u5F15</span>
                <span class="token comment">// \u5982\u679C\u5F53\u524D\u5143\u7D20\u5728\u5F85\u5220\u9664\u5143\u7D20\u91CC\u9762\uFF0C\u5219\u4E0D\u4F1A\u6267\u884C\u4E0B\u9762\u8BED\u53E5\u770B\uFF0C\u5373\u8868\u793A\u5143\u7D20\u4E0D\u5728\u5B58\u5728\u4E8E elementData \u4E2D</span>
                elementData<span class="token punctuation">[</span>w<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> elementData<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u6301\u4E0E AbstractCollection \u7684\u884C\u4E3A\u517C\u5BB9\u6027\uFF0C\u5373\u4F7F c.contains() \u629B\u51FA\u5F02\u5E38</span>
        <span class="token comment">// \u5982\u679C contains \u65B9\u6CD5\u53D1\u751F\u5F02\u5E38\uFF0C\u5219\u5C06 elementData \u4ECE r \u4F4D\u7F6E\u7684\u6570\u636E\u5199\u5165\u5230 elementData \u4ECE w \u5F00\u59CB\u7684\u4F4D\u7F6E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> r<span class="token punctuation">,</span>
                             elementData<span class="token punctuation">,</span> w<span class="token punctuation">,</span>
                             size <span class="token operator">-</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
            w <span class="token operator">+=</span> size <span class="token operator">-</span> r<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C\u6709\u5143\u7D20\u88AB\u5220\u9664\u4E86</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">!=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5C06\u6570\u7EC4 [w, size-1) \u4F4D\u7F6E\u8D4B\u503C\u4E3A null,\u5E2E\u52A9 GC</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> w<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            modCount <span class="token operator">+=</span> size <span class="token operator">-</span> w<span class="token punctuation">;</span>
            <span class="token comment">// \u66F4\u6539 size \u5927\u5C0F\u4E3A w\uFF08\u5269\u4F59\u5143\u7D20\u4E2A\u6570\uFF09</span>
            size <span class="token operator">=</span> w<span class="token punctuation">;</span>
            modified <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> modified<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u5220\u9664\u4E00\u5B9A\u8303\u56F4\u7684\u5143\u7D20 <code>removeRange(int fromIndex, int toIndex)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4ECE\u6B64\u5217\u8868\u4E2D\u5220\u9664\u7D22\u5F15\u5728fromIndex \uFF08\u5305\u62EC\uFF09\u548CtoIndex \uFF08\u4E0D\u5305\u62EC\uFF09\u4E4B\u95F4\u7684\u6240\u6709\u5143\u7D20\u3002\u5C06\u4EFB\u4F55\u540E\u7EED\u5143\u7D20\u5411\u5DE6\u79FB\u52A8</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">removeRange</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> toIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97\u9700\u8981\u79FB\u52A8\u7684\u5143\u7D20\u4E2A\u6570</span>
    <span class="token keyword">int</span> numMoved <span class="token operator">=</span> size <span class="token operator">-</span> toIndex<span class="token punctuation">;</span>
    <span class="token comment">// \u79FB\u52A8\u6570\u7EC4</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> toIndex<span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> fromIndex<span class="token punctuation">,</span>
                     numMoved<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u7A7A\u51FA\u4F4D\u7F6E\u7684\u503C\u81F3\u4E3A null\uFF0C\u5E2E\u52A9 GC</span>
    <span class="token keyword">int</span> newSize <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token punctuation">(</span>toIndex<span class="token operator">-</span>fromIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> newSize<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    size <span class="token operator">=</span> newSize<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u627E\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u5143\u7D20" aria-hidden="true">#</a> \u67E5\u627E\u5143\u7D20</h3><ol><li>\u67E5\u627E\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20 <code>get(int index)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20\u3002</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD index \u662F\u5426\u8D8A\u754C</span>
    <span class="token function">rangeCheck</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DE\u6570\u7EC4\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20\uFF08\u7C7B\u578B\u8F6C\u6362\uFF09</span>
<span class="token class-name">E</span> <span class="token function">elementData</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u67E5\u627E\u67D0\u4E2A\u5143\u7D20\u9996\u6B21\u51FA\u73B0\u7684\u7D22\u5F15 <code>indexOf(Object o)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u5143\u7D20\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E0D\u5305\u542B\u8BE5\u5143\u7D20\uFF0C\u5219\u8FD4\u56DE -1</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u8981\u67E5\u627E\u7684\u5143\u7D20\u4E3A null\uFF0C\u4F7F\u7528 == \u5224\u65AD</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u8981\u67E5\u627E\u7684\u5143\u7D20\u4E0D\u4E3A null\uFF0C\u4F7F\u7528 equals \u5224\u65AD</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u672A\u67E5\u627E\u5230\uFF0C\u8FD4\u56DE -1</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u5224\u65AD\u96C6\u5408\u662F\u5426\u5305\u542B\u6307\u5B9A\u5143\u7D20 <code>contains(Object o)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5982\u679C\u6B64\u5217\u8868\u5305\u542B\u6307\u5B9A\u5143\u7D20\uFF0C\u5219\u8FD4\u56DEtrue</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 indexOf \u65B9\u6CD5\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u5219 indexOf \u7684\u7ED3\u679C\u5E94\u8BE5\u5927\u4E8E\u7B49\u4E8E 0</span>
    <span class="token keyword">return</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u67E5\u627E\u6307\u5B9A\u5143\u7D20\u6700\u540E\u51FA\u73B0\u7684\u4F4D\u7F6E <code>lastIndexOf(Object o)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8FD4\u56DE\u6B64\u5217\u8868\u4E2D\u6307\u5B9A\u5143\u7D20\u6700\u540E\u4E00\u6B21\u51FA\u73B0\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u6B64\u5217\u8868\u4E0D\u5305\u542B\u8BE5\u5143\u7D20\uFF0C\u5219\u8FD4\u56DE -1</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE\u6570\u7EC4\u672B\u5C3E\u5F00\u59CB\u904D\u5386\uFF0C\u5982\u679C\u8981\u67E5\u627E\u7684\u5143\u7D20\u4E3A null\uFF0C\u4F7F\u7528 == \u5224\u65AD</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE\u6570\u7EC4\u672B\u5C3E\u5F00\u59CB\u904D\u5386\uFF0C\u5982\u679C\u8981\u67E5\u627E\u7684\u5143\u7D20\u4E0D\u4E3A null\uFF0C\u4F7F\u7528 equals \u5224\u65AD</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u672A\u67E5\u627E\u5230\uFF0C\u8FD4\u56DE -1</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u66F4\u65B0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0\u5143\u7D20" aria-hidden="true">#</a> \u66F4\u65B0\u5143\u7D20</h3><p>\u8BBE\u7F6E\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20 <code>set(int index, E element)</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u68C0\u67E5 index \u662F\u5426\u8D8A\u754C</span>
    <span class="token function">rangeCheck</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u83B7\u5F97 index \u4F4D\u7F6E\u7684\u539F\u5143\u7D20</span>
    <span class="token class-name">E</span> oldValue <span class="token operator">=</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FEE\u6539 index \u4F4D\u7F6E\u4E3A\u65B0\u5143\u7D20</span>
    elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
    <span class="token comment">// \u8FD4\u56DE index \u4F4D\u7F6E\u7684\u539F\u5143\u7D20</span>
    <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6E05\u7A7A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6E05\u7A7A\u6570\u7EC4" aria-hidden="true">#</a> \u6E05\u7A7A\u6570\u7EC4</h3><p>\u6E05\u7A7A\u6570\u7EC4 <code>clear()</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6570\u7EC4\u5143\u7D20\u5168\u90E8\u7F6E\u4E3A null</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token comment">// \u4FEE\u6539 size \u4E3A 0</span>
    size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F6C\u6362\u4E3A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u4E3A\u6570\u7EC4" aria-hidden="true">#</a> \u8F6C\u6362\u4E3A\u6570\u7EC4</h3><ol><li>\u5C06 ArrayList \u8F6C\u6362\u6210 <code>Object</code> \u6570\u7EC4 <code>toArray()</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Arrays.java</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">copyOf</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> original<span class="token punctuation">,</span> <span class="token keyword">int</span> newLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">copyOf</span><span class="token punctuation">(</span>original<span class="token punctuation">,</span> newLength<span class="token punctuation">,</span> original<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u8FD8\u6709\u4E00\u4E2A\u53EF\u6CDB\u578B\u7684\u6570\u7EC4\u8F6C\u6362\u65B9\u6CD5 <code>toArray(T[] a)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> size<span class="token punctuation">)</span>
        <span class="token comment">// a \u6570\u7EC4\u957F\u5EA6\u4E0D\u591F\u65F6\uFF0C\u91CD\u65B0\u521B\u5EFA\u4E00\u4E2A\u65B0 T \u7C7B\u578B\u7684\u65B0\u6570\u7EC4\uFF0C\u5E76\u653E\u5165\u5168\u90E8\u96C6\u5408\u5143\u7D20</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> size<span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u957F\u5EA6\u8DB3\u591F\u65F6\uFF0C\u76F4\u63A5\u62F7\u8D1D\u8FDB a \u6570\u7EC4\u4E2D</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> size<span class="token punctuation">)</span>
        <span class="token comment">// \u5982\u679C a \u6570\u7EC4\u672A\u5168\u90E8\u586B\u5145\uFF0C\u5269\u4F59\u90E8\u5206\u8865\u5145 null\uFF0C \u5E2E\u52A9 GC</span>
        a<span class="token punctuation">[</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u76F8\u7B49" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u76F8\u7B49" aria-hidden="true">#</a> \u5224\u65AD\u76F8\u7B49</h3><p>\u7EE7\u627F\u81EA <code>AbstractList</code> \u7C7B\u91CD\u5199\u540E\u7684 <code>equals(Object o)</code> \u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u662F\u540C\u4E00\u4E2A\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u4E3A List \u7C7B\u578B\uFF0C\u76F4\u63A5\u4E0D\u76F8\u7B49</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">List</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> e1 <span class="token operator">=</span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> e2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u540C\u65F6\u4F7F\u7528\u8FED\u4EE3\u5668\u904D\u5386\u4E24\u4E2A\u96C6\u5408\uFF0C\u6BD4\u8F83\u5BF9\u5E94\u7684\u5143\u7D20</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e2<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">E</span> o1 <span class="token operator">=</span> e1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> o2 <span class="token operator">=</span> e2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4E0D\u540C\u65F6\u4E3A null\uFF0C\u6216\u8005\u4E0D\u76F8\u7B49\u65F6\u8FD4\u56DE false</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>o1<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">?</span> o2<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">:</span> o1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E24\u4E2A\u96C6\u5408\u5143\u7D20\u6570\u91CF\u5FC5\u987B\u76F8\u540C\uFF0C\u5373\u540C\u65F6\u904D\u5386\u5B8C\u6BD5</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> e2<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#\u5E8F\u5217\u5316" aria-hidden="true">#</a> \u5E8F\u5217\u5316</h3><ol><li>\u5E8F\u5217\u5316 <code>writeObject(java.io.ObjectOutputStream s)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u5F97\u5F53\u524D\u7684\u6570\u7EC4\u4FEE\u6539\u6B21\u6570</span>
    <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u5165\u975E\u9759\u6001\u5C5E\u6027\u3001\u975E transient \u5C5E\u6027</span>
    s<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5199\u5165 size \uFF0C\u4E3B\u8981\u4E3A\u4E86\u4E0E clone \u65B9\u6CD5\u7684\u517C\u5BB9</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u9010\u4E2A\u5199\u5165 elementData \u6570\u7EC4\u7684\u5143\u7D20\uFF0C\u53EA\u5199\u5165[0, size-1]\u7684\u5143\u7D20\uFF0C\u56E0\u4E3A\u5176\u6269\u5BB9\u540E\uFF0C\u6709\u4E00\u5B9A\u9884\u7559\u7A7A\u95F4</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	<span class="token comment">// \u5982\u679C\u4FEE\u6539\u6B21\u6570\u53D1\u751F\u53D8\u5316\uFF0C\u5219\u629B\u51FA\u5F02\u5E38</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u53CD\u5E8F\u5217\u5316 <code>readObject(java.io.ObjectInputStream s)</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectInputStream</span> s<span class="token punctuation">)</span> 
    <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5185\u90E8\u6570\u7EC4\u7F6E\u4E3A\u7A7A\u6570\u7EC4</span>
    elementData <span class="token operator">=</span> <span class="token constant">EMPTY_ELEMENTDATA</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BFB\u53D6\u975E\u9759\u6001\u719F\u6089\u3001\u975E transient \u5C5E\u6027</span>
    s<span class="token punctuation">.</span><span class="token function">defaultReadObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BFB\u53D6 size</span>
    s<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ignored</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E size \u5927\u5C0F\u6269\u5BB9</span>
        <span class="token keyword">int</span> capacity <span class="token operator">=</span> <span class="token function">calculateCapacity</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// unknown</span>
        <span class="token class-name">SharedSecrets</span><span class="token punctuation">.</span><span class="token function">getJavaOISAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">checkArray</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> capacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6269\u5BB9\u81F3\u786E\u4FDD\u53EF\u4EE5\u5BB9\u7EB3\u6DFB\u52A0\u540E\u7684\u5143\u7D20</span>
        <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u521B\u5EFA a \u6570\u7EC4\uFF0C\u4E0E elementData \u540C\u4E00\u6570\u7EC4</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> elementData<span class="token punctuation">;</span>
        <span class="token comment">// \u9010\u4E2A\u8BFB\u53D6\u6570\u7EC4\u5143\u7D20\u7684\u6570\u636E\uFF0C\u5199\u5165</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8D4B\u503C a\uFF0C\u5373\u8D4B\u503C elementData</span>
            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u514B\u9686" tabindex="-1"><a class="header-anchor" href="#\u514B\u9686" aria-hidden="true">#</a> \u514B\u9686</h3><p>\u514B\u9686\u6570\u7EC4 <code>clone()</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8C03\u7528\u7236\u7C7B\uFF0C\u8FDB\u884C\u514B\u9686</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u62F7\u8D1D\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u4E0D\u4F1A\u4E0E\u539F\u6570\u7EC4\u8FDB\u884C\u5171\u4EAB</span>
        v<span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u6570\u7EC4\u4FEE\u6539\u6B21\u6570\u4E3A 0</span>
        v<span class="token punctuation">.</span>modCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CloneNotSupportedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// this shouldn&#39;t happen, since we are Cloneable</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u521B\u5EFA\u5B50\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5B50\u6570\u7EC4" aria-hidden="true">#</a> \u521B\u5EFA\u5B50\u6570\u7EC4</h3><p>\u521B\u5EFA\u5B50\u6570\u7EC4 <code>subList(int fromIndex, int toIndex)</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8FD4\u56DE\u7C7B\u578B\u4E3A List</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">subList</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> toIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7D22\u5F15\u4E0B\u6807\u8D8A\u754C\u68C0\u67E5</span>
    <span class="token function">subListRangeCheck</span><span class="token punctuation">(</span>fromIndex<span class="token punctuation">,</span> toIndex<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A SubList \u5BF9\u8C61</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SubList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> fromIndex<span class="token punctuation">,</span> toIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// sublist \u662F ArrayList \u7684\u5185\u90E8\u7C7B\uFF0C\u5B83\u7EE7\u627F\u4E86 AbstractList </span>
<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">SubList</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">RandomAccess</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> parentOffset<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> offset<span class="token punctuation">;</span>
    <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token class-name">SubList</span><span class="token punctuation">(</span><span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">,</span>
            <span class="token keyword">int</span> offset<span class="token punctuation">,</span> <span class="token keyword">int</span> fromIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> toIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> parent<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parentOffset <span class="token operator">=</span> fromIndex<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>offset <span class="token operator">=</span> offset <span class="token operator">+</span> fromIndex<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> toIndex <span class="token operator">-</span> fromIndex<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>modCount <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>modCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u3002\u3002\u3002</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668</h3><ol><li>iterator \u8FED\u4EE3\u5668</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Itr \u4E3A ArrayList \u7684\u5185\u90E8\u7C7B</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Itr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>Itr</code> \u4E3A <code>ArrayList</code> \u7684\u5185\u90E8\u7C7B\uFF0C\u5B83\u7EE7\u627F\u4E86 <code>Iterator</code> \u63A5\u53E3\uFF0C\u5B9E\u73B0\u4E86\u8FED\u4EE3\u5668\u8BE5\u6709\u7684\u65B9\u6CD5</p></blockquote><p><code>Itr</code> \u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">Itr</span> <span class="token keyword">implements</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0B\u4E00\u4E2A\u8BBF\u95EE\u5143\u7D20\u7684\u4F4D\u7F6E\uFF0C\u4ECE\u4E0B\u6807 0 \u5F00\u59CB</span>
    <span class="token keyword">int</span> cursor<span class="token punctuation">;</span>
    <span class="token comment">// \u4E0A\u4E00\u6B21\u8BBF\u95EE\u5143\u7D20\u7684\u4F4D\u7F6E\uFF0C\u521D\u59CB\u5316\u65F6\u4E3A -1</span>
    <span class="token keyword">int</span> lastRet <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u8FED\u4EE3\u5668\u65F6\uFF0C\u6570\u7EC4\u4FEE\u6539\u6B21\u6570\uFF0C\u4FEE\u6539\u6B21\u6570\u4E0D\u4E00\u81F4\u65F6\uFF0C\u8868\u793A\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u4F1A\u629B\u5F02\u5E38</span>
    <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
    
    <span class="token class-name">Itr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token comment">// \u5224\u65AD\u662F\u5426\u8FD8\u53EF\u4EE5\u8FED\u4EE3</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// cursor \u5982\u679C\u7B49\u4E8E size \uFF0C\u8BF4\u660E\u5DF2\u7ECF\u5230\u6570\u7EC4\u672B\u5C3E\uFF0C\u65E0\u6CD5\u7EE7\u7EED\u8FED\u4EE3\u4E86</span>
        <span class="token keyword">return</span> cursor <span class="token operator">!=</span> size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u83B7\u53D6\u4E0B\u4E00\u4E2A\u5143\u7D20</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6821\u9A8C\u662F\u5426\u6570\u7EC4\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// i \u8BB0\u5F55\u5F53\u524D cursor \u7684\u4F4D\u7F6E</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> cursor<span class="token punctuation">;</span>
        <span class="token comment">// \u8D8A\u754C\u629B\u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">;</span>
        <span class="token comment">// \u5224\u65AD\u5982\u679C\u8D85\u8FC7 elementData \u5927\u5C0F\uFF0C\u8BF4\u660E\u53EF\u80FD\u88AB\u4FEE\u6539\u4E86\uFF0C\u629B\u51FA ConcurrentModificationException \u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// cursor \u52A0\u4E00\uFF0C\u6307\u5411\u4E0B\u4E00\u4E2A\u4F4D\u7F6E</span>
        cursor <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// lastRet \u6307\u5411\u5F53\u524D\u4F4D\u7F6E\uFF0C\u5E76\u8FD4\u56DE\u5F53\u524D\u5143\u7D20</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> elementData<span class="token punctuation">[</span>lastRet <span class="token operator">=</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5220\u9664\u5F53\u524D\u5143\u7D20</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C lastRet \u5C0F\u4E8E 0\uFF0C\u8BF4\u660E\u6CA1\u6709\u6307\u5411\u4EFB\u4F55\u5143\u7D20\uFF0C\u629B\u51FA IllegalStateException \u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastRet <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u68C0\u67E5\u6570\u7EC4\u662F\u5426\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5220\u9664 lastRet \u4F4D\u7F6E\u7684\u5143\u7D20</span>
            <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>lastRet<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u7531\u4E8E\u5F53\u524D\u5143\u7D20\u88AB\u5220\u9664\u4E86\uFF0C\u540E\u9762\u7684\u5143\u7D20\u524D\u79FB\u4E86\uFF0C\u56E0\u6B64\u6307\u9488\u4E5F\u9700\u8981\u524D\u79FB</span>
            cursor <span class="token operator">=</span> lastRet<span class="token punctuation">;</span>
            <span class="token comment">// \u5C06 lastRet \u7F6E\u4E3A -1\uFF01</span>
            lastRet <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8BB0\u5F55\u65B0\u7684\u6570\u7EC4\u7684\u4FEE\u6539\u6B21\u6570\uFF1A\u56E0\u4E3A\u6B64\u5904\u4FEE\u6539\u4E86\u6570\u7EC4\uFF0C\u5982\u679C\u4E0D\u4FEE\u6539\u4E0B\uFF0C\u540E\u7EED\u8FED\u4EE3\u80AF\u5B9A\u4F1A\u62A5\u9519</span>
            expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IndexOutOfBoundsException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6D88\u8D39\u5269\u4F59\u672A\u8FED\u4EE3\u7684\u5143\u7D20</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">forEachRemaining</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> consumer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8981\u6C42\u53C2\u6570\u975E\u7A7A</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>consumer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u83B7\u5F97\u5F53\u524D\u6570\u7EC4\u5927\u5C0F</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u5F53\u524D cursor</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> cursor<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4ECE\u5F85\u8FED\u4EE3\u7684\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u5BF9\u6BCF\u4E2A\u5143\u7D20\u8FDB\u884C\u51FD\u6570\u64CD\u4F5C</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> size <span class="token operator">&amp;&amp;</span> modCount <span class="token operator">==</span> expectedModCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            consumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> elementData<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// cursor = size</span>
        cursor <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token comment">// lastRet \u6307\u5411\u6570\u7EC4\u672B\u5C3E</span>
        lastRet <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// \u68C0\u67E5\u6570\u7EC4\u662F\u5426\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>ListIterator \u8FED\u4EE3\u5668</li></ol><blockquote><p><code>ListIterator</code> \u8FED\u4EE3\u5668 \u662F\u4E3A List \u8BBE\u8BA1\u7684\u529F\u80FD\u66F4\u5F3A\u5927\u7684\u8FED\u4EE3\u5668\uFF0C<code>ListIterator</code> \u7EE7\u627F\u4E86 <code>Itr</code> \uFF0C\u5E76\u63D0\u4F9B\u4E86\u66F4\u591A\u7684\u65B9\u6CD5\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// ArrayList.java</span>

<span class="token keyword">public</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rangeCheckForAdd</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ListItr</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ListItr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// ArrayList.java#ListItr</span>

<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">ListItr</span> <span class="token keyword">extends</span> <span class="token class-name">Itr</span> <span class="token keyword">implements</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">ListItr</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cursor <span class="token operator">=</span> index<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u662F\u5426\u6709\u524D\u4E00\u4E2A</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasPrevious</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> cursor <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4E0B\u4E00\u4E2A\u4F4D\u7F6E</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">nextIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> cursor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u524D\u4E00\u4E2A\u4F4D\u7F6E</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">previousIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> cursor <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u524D\u4E00\u4E2A\u5143\u7D20</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">previous</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u68C0\u67E5\u6570\u7EC4\u662F\u5426\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// i \u6307\u5411</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> cursor <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// cursor \u6307\u5411\u4E0A\u4E00\u4E2A\u4F4D\u7F6E</span>
        cursor <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token comment">// lastRet \u6307\u5411\u5F53\u524D\u4F4D\u7F6E\uFF0C\u8FD4\u56DE\u5F53\u524D\u4F4D\u7F6E\u7684\u5143\u7D20</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> elementData<span class="token punctuation">[</span>lastRet <span class="token operator">=</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BBE\u7F6E\u5F53\u524D\u5143\u7D20</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastRet <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u68C0\u67E5\u6570\u7EC4\u662F\u5426\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8D4B\u503C</span>
            <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>lastRet<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IndexOutOfBoundsException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6DFB\u52A0\u5143\u7D20\u5230\u5F53\u524D\u4F4D\u7F6E</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u68C0\u67E5\u6570\u7EC4\u662F\u5426\u53D1\u751F\u4E86\u53D8\u5316</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6DFB\u52A0\u5143\u7D20\u5230\u5F53\u524D\u4F4D\u7F6E</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> cursor<span class="token punctuation">;</span>
            <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// cursor \u6307\u5411\u4E0B\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u56E0\u4E3A\u5F53\u524D\u4F4D\u7F6E\u6DFB\u52A0\u4E86\u65B0\u7684\u5143\u7D20\uFF0C\u6240\u4EE5\u9700\u8981\u540E\u632A</span>
            cursor <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// lastRet \u6807\u8BB0\u4E3A -1 \uFF0C\u56E0\u4E3A\u5F53\u524D\u5143\u7D20\u5E76\u672A\u8BBF\u95EE</span>
            lastRet <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IndexOutOfBoundsException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,91),k={href:"https://www.iocoder.cn/",target:"_blank",rel:"noopener noreferrer"},r=t("\u828B\u9053\u6E90\u7801"),d={href:"https://tobebetterjavaer.com/collection/gailan.html",target:"_blank",rel:"noopener noreferrer"},v=t("Java \u7A0B\u5E8F\u5458\u8FDB\u9636\u4E4B\u8DEF"),m={href:"https://pdai.tech/md/java/collection/java-collection-all.html",target:"_blank",rel:"noopener noreferrer"},b=t("Java\u5168\u6808\u77E5\u8BC6\u4F53\u7CFB");function y(w,f){const s=l("ExternalLinkIcon");return p(),o("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[r,a(s)])]),n("li",null,[n("a",d,[v,a(s)])]),n("li",null,[n("a",m,[b,a(s)])])])])}const x=e(i,[["render",y],["__file","01-ArrayList.html.vue"]]);export{x as default};
