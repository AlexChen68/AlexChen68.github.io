const e=JSON.parse(`{"key":"v-57993282","path":"/md/advance/algo/domain/in-place.html","title":"原地算法（In-Place Algorithm）","lang":"zh-CN","frontmatter":{"title":"原地算法（In-Place Algorithm）","date":"2023-02-21T00:00:00.000Z","category":["算法"],"description":"原地算法（In-Place Algorithm） 原地算法：在计算机科学中，一个原地算法（in-place algorithm）是一种使用小的，固定数量的额外之空间来转换资料的算法。当算法执行时，输入的资料通常会被要输出的部分覆盖掉。不是原地算法有时候称为非原地（not-in-place）或不得其所（out-of-place）。 通俗的说法：就是一个算法，除了可以运用输入数据本身已开辟的空间外，就只可以用极小的辅助空间来进行运算了，一般 额外空间复杂度为 O (1)，也就是一个变量。(特殊情况除外) 例如：LeetCode 26题","head":[["meta",{"property":"og:url","content":"https://AlexChen68.github.com/blog/md/advance/algo/domain/in-place.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"原地算法（In-Place Algorithm）"}],["meta",{"property":"og:description","content":"原地算法（In-Place Algorithm） 原地算法：在计算机科学中，一个原地算法（in-place algorithm）是一种使用小的，固定数量的额外之空间来转换资料的算法。当算法执行时，输入的资料通常会被要输出的部分覆盖掉。不是原地算法有时候称为非原地（not-in-place）或不得其所（out-of-place）。 通俗的说法：就是一个算法，除了可以运用输入数据本身已开辟的空间外，就只可以用极小的辅助空间来进行运算了，一般 额外空间复杂度为 O (1)，也就是一个变量。(特殊情况除外) 例如：LeetCode 26题"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-20T17:26:35.000Z"}],["meta",{"property":"article:published_time","content":"2023-02-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-20T17:26:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原地算法（In-Place Algorithm）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-20T17:26:35.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"原地算法（In-Place Algorithm）","slug":"原地算法-in-place-algorithm","link":"#原地算法-in-place-algorithm","children":[]}],"git":{"createdTime":1676913995000,"updatedTime":1676913995000,"contributors":[{"name":"AlexChen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":0.67,"words":202},"filePathRelative":"md/advance/algo/domain/in-place.md","localizedDate":"2023年2月21日","excerpt":"<h2> 原地算法（In-Place Algorithm）</h2>\\n<p>原地算法：在计算机科学中，一个原地算法（in-place algorithm）是一种使用小的，固定数量的额外之空间来转换资料的算法。当算法执行时，输入的资料通常会被要输出的部分覆盖掉。不是原地算法有时候称为非原地（not-in-place）或不得其所（out-of-place）。</p>\\n<p>通俗的说法：就是一个算法，除了可以运用输入数据本身已开辟的空间外，就只可以用极小的辅助空间来进行运算了，一般 额外空间复杂度为 O (1)，也就是一个变量。(特殊情况除外)</p>\\n<p>例如：<a href=\\"https://leetcode.cn/problems/remove-duplicates-from-sorted-array/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 26题</a></p>","autoDesc":true}`);export{e as data};
