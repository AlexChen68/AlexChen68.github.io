import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.01af844e.js";const b=JSON.parse('{"title":"Spring 格式转换","description":"","frontmatter":{"title":"Spring 格式转换","date":"2023-11-20T00:00:00.000Z","order":101},"headers":[],"relativePath":"spring/spring/format.md","filePath":"spring/spring/format.md","lastUpdated":1736475834000}'),p={name:"spring/spring/format.md"},e=l(`<h1 id="spring-格式转换" tabindex="-1">Spring 格式转换 <a class="header-anchor" href="#spring-格式转换" aria-label="Permalink to &quot;Spring 格式转换&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>在 Spring 中的参数格式转换，通常分两种情况：</p><ul><li>以非 Json 格式的参数形式接收参数，然后使用 <code>Convert</code> 转换；</li><li>以 Json 格式传递，然后以对象接收，中间由 <code>Jackson</code> 进行反序列化化；返回前端时再序列化。</li></ul><h2 id="基于注解的时间格式转换" tabindex="-1">基于注解的时间格式转换 <a class="header-anchor" href="#基于注解的时间格式转换" aria-label="Permalink to &quot;基于注解的时间格式转换&quot;">​</a></h2><h3 id="datetimeformat" tabindex="-1">@DateTimeFormat <a class="header-anchor" href="#datetimeformat" aria-label="Permalink to &quot;@DateTimeFormat&quot;">​</a></h3><p><code>@DateTimeFormat</code> 是 Spring 框架中用于处理日期和时间格式的注解。它可以应用于类的字段或方法上，<strong>用于指定日期和时间的输入和输出格式</strong>。</p><p>适用情况：</p><ul><li>接收<strong>非 Json</strong> 格式的请求参数时，可以使用 <code>@DateTimeFormat</code> 注解来解析传入的日期和时间字符串，并将其转换为对应的 Java 对象，比如：用 Date 接收 String。</li></ul><div class="warning custom-block"><p class="custom-block-title">注意：</p><p>如果使用了 <code>@DateTimeFormat</code> 指定了转换的格式，那么请求的参数字符串必须符合指定的格式，否则会报无法转换错误。</p></div><h3 id="jsonformat" tabindex="-1">@JsonFormat <a class="header-anchor" href="#jsonformat" aria-label="Permalink to &quot;@JsonFormat&quot;">​</a></h3><p><code>@JsonFormat</code>: 添加了该注解的类，在序列化和反序列化 JSON 数据时，日期和时间按照指定的格式和时区进行处理。</p><p>比如：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 用于进行序列化和反序列化时，将时间按照指定的格式返回</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">JsonFormat</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">pattern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;yyyy 年 MM 月 dd 日&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Date birthday;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 用于进行序列化和反序列化时，将时间按照指定的格式返回</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonFormat</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">pattern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;yyyy 年 MM 月 dd 日&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Date birthday;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上面的代码可以让该字段在返回给前端时使用指定的格式。</p><div class="tip custom-block"><p class="custom-block-title">总结：</p><ul><li>不使用 RequestBody 传参数，<code>@DateTimeFormat</code> 会生效，要求输入格式为指定格式。<code>@JsonFormat</code> 会在响应数据时生效（如果是以 Json 格式响应的话）。</li><li>使用 RequestBody 传参数时，<code>@JsonFormat</code> 会生效，要求输入格式和输出格式（如果是以 Json 格式响应的话）为指定格式，</li></ul></div><h2 id="全局定义时间转换格式" tabindex="-1">全局定义时间转换格式 <a class="header-anchor" href="#全局定义时间转换格式" aria-label="Permalink to &quot;全局定义时间转换格式&quot;">​</a></h2><blockquote><p>参考文章：<a href="https://zhuanlan.zhihu.com/p/610989565" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/610989565</a></p></blockquote><ul><li>引入依赖：</li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.fasterxml.jackson.datatype&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;jackson-datatype-jsr310&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.fasterxml.jackson.datatype&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;jackson-datatype-jsr310&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>自定义 Jackson 配置类：</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ConditionalOnClass</span><span style="color:#E1E4E8;">(ObjectMapper.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">AutoConfigureBefore</span><span style="color:#E1E4E8;">(JacksonAutoConfiguration.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ConditionalOnWebApplication</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ConditionalOnWebApplication.Type.SERVLET)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DateTimeConfiguration</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 时区</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String ASIA_SHANGHAI </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String DateTimeFormatPattern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String DateFormatPattern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String TimeFormatPattern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;HH:mm:ss&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Jackson2ObjectMapperBuilderCustomizer </span><span style="color:#B392F0;">jacksonCustomizer</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> builder </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 设置 java.util.Date 时间类的序列化以及反序列化的格式</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">simpleDateFormat</span><span style="color:#E1E4E8;">(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">locale</span><span style="color:#E1E4E8;">(Locale.CHINA);</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">timeZone</span><span style="color:#E1E4E8;">(TimeZone.</span><span style="color:#B392F0;">getTimeZone</span><span style="color:#E1E4E8;">(ASIA_SHANGHAI));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// JSR 310 日期时间处理</span></span>
<span class="line"><span style="color:#E1E4E8;">            JavaTimeModule javaTimeModule </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JavaTimeModule</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            DateTimeFormatter dateTimeFormatter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTimeFormatter.</span><span style="color:#B392F0;">ofPattern</span><span style="color:#E1E4E8;">(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            javaTimeModule.</span><span style="color:#B392F0;">addSerializer</span><span style="color:#E1E4E8;">(LocalDateTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalDateTimeSerializer</span><span style="color:#E1E4E8;">(dateTimeFormatter));</span></span>
<span class="line"><span style="color:#E1E4E8;">            javaTimeModule.</span><span style="color:#B392F0;">addDeserializer</span><span style="color:#E1E4E8;">(LocalDateTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalDateTimeDeserializer</span><span style="color:#E1E4E8;">(dateTimeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            DateTimeFormatter dateFormatter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTimeFormatter.</span><span style="color:#B392F0;">ofPattern</span><span style="color:#E1E4E8;">(DateFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            javaTimeModule.</span><span style="color:#B392F0;">addSerializer</span><span style="color:#E1E4E8;">(LocalDate.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalDateSerializer</span><span style="color:#E1E4E8;">(dateFormatter));</span></span>
<span class="line"><span style="color:#E1E4E8;">            javaTimeModule.</span><span style="color:#B392F0;">addDeserializer</span><span style="color:#E1E4E8;">(LocalDate.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalDateDeserializer</span><span style="color:#E1E4E8;">(dateFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            DateTimeFormatter timeFormatter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTimeFormatter.</span><span style="color:#B392F0;">ofPattern</span><span style="color:#E1E4E8;">(TimeFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            javaTimeModule.</span><span style="color:#B392F0;">addSerializer</span><span style="color:#E1E4E8;">(LocalTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalTimeSerializer</span><span style="color:#E1E4E8;">(timeFormatter));</span></span>
<span class="line"><span style="color:#E1E4E8;">            javaTimeModule.</span><span style="color:#B392F0;">addDeserializer</span><span style="color:#E1E4E8;">(LocalTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalTimeDeserializer</span><span style="color:#E1E4E8;">(timeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">modules</span><span style="color:#E1E4E8;">(javaTimeModule);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 全局转化 Long 类型为 String，解决序列化后传入前端 Long 类型精度丢失问题</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">serializerByType</span><span style="color:#E1E4E8;">(BigInteger.class, ToStringSerializer.instance);</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">serializerByType</span><span style="color:#E1E4E8;">(Long.class, ToStringSerializer.instance);</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ConditionalOnClass</span><span style="color:#24292E;">(ObjectMapper.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">AutoConfigureBefore</span><span style="color:#24292E;">(JacksonAutoConfiguration.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ConditionalOnWebApplication</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ConditionalOnWebApplication.Type.SERVLET)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DateTimeConfiguration</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 时区</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ASIA_SHANGHAI </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Asia/Shanghai&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String DateTimeFormatPattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String DateFormatPattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;yyyy-MM-dd&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String TimeFormatPattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HH:mm:ss&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Jackson2ObjectMapperBuilderCustomizer </span><span style="color:#6F42C1;">jacksonCustomizer</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> builder </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 设置 java.util.Date 时间类的序列化以及反序列化的格式</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">simpleDateFormat</span><span style="color:#24292E;">(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">locale</span><span style="color:#24292E;">(Locale.CHINA);</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">timeZone</span><span style="color:#24292E;">(TimeZone.</span><span style="color:#6F42C1;">getTimeZone</span><span style="color:#24292E;">(ASIA_SHANGHAI));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// JSR 310 日期时间处理</span></span>
<span class="line"><span style="color:#24292E;">            JavaTimeModule javaTimeModule </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JavaTimeModule</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            DateTimeFormatter dateTimeFormatter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DateTimeFormatter.</span><span style="color:#6F42C1;">ofPattern</span><span style="color:#24292E;">(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            javaTimeModule.</span><span style="color:#6F42C1;">addSerializer</span><span style="color:#24292E;">(LocalDateTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalDateTimeSerializer</span><span style="color:#24292E;">(dateTimeFormatter));</span></span>
<span class="line"><span style="color:#24292E;">            javaTimeModule.</span><span style="color:#6F42C1;">addDeserializer</span><span style="color:#24292E;">(LocalDateTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalDateTimeDeserializer</span><span style="color:#24292E;">(dateTimeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            DateTimeFormatter dateFormatter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DateTimeFormatter.</span><span style="color:#6F42C1;">ofPattern</span><span style="color:#24292E;">(DateFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            javaTimeModule.</span><span style="color:#6F42C1;">addSerializer</span><span style="color:#24292E;">(LocalDate.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalDateSerializer</span><span style="color:#24292E;">(dateFormatter));</span></span>
<span class="line"><span style="color:#24292E;">            javaTimeModule.</span><span style="color:#6F42C1;">addDeserializer</span><span style="color:#24292E;">(LocalDate.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalDateDeserializer</span><span style="color:#24292E;">(dateFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            DateTimeFormatter timeFormatter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DateTimeFormatter.</span><span style="color:#6F42C1;">ofPattern</span><span style="color:#24292E;">(TimeFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            javaTimeModule.</span><span style="color:#6F42C1;">addSerializer</span><span style="color:#24292E;">(LocalTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalTimeSerializer</span><span style="color:#24292E;">(timeFormatter));</span></span>
<span class="line"><span style="color:#24292E;">            javaTimeModule.</span><span style="color:#6F42C1;">addDeserializer</span><span style="color:#24292E;">(LocalTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalTimeDeserializer</span><span style="color:#24292E;">(timeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">modules</span><span style="color:#24292E;">(javaTimeModule);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 全局转化 Long 类型为 String，解决序列化后传入前端 Long 类型精度丢失问题</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">serializerByType</span><span style="color:#24292E;">(BigInteger.class, ToStringSerializer.instance);</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">serializerByType</span><span style="color:#24292E;">(Long.class, ToStringSerializer.instance);</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">说明：</p><p>上面的配置，指定了 Jackson 在使用 LocalDateTime、LocalDate、LocalTime 类型对时间进行序列化和反序列化时使用的格式。</p><p>Spring Boot 会收集容器里面所有的 Jackson2ObjectMapperBuilderCustomizer 实现类，统一对 Jackson2ObjectMapperBuilder 进行设置，从而实现定制 ObjectMapper。因此，如果我们想个性化定制 ObjectMapper，只需要实现 Jackson2ObjectMapperBuilderCustomizer 接口并注册到容器就可以了。</p></div><h2 id="时间戳转时间" tabindex="-1">时间戳转时间 <a class="header-anchor" href="#时间戳转时间" aria-label="Permalink to &quot;时间戳转时间&quot;">​</a></h2><p>上面的配置实现的是字符串格式的时间转换，有时我们在与前端传递时间时，都使用时间戳格式，我们可以自定义序列化和反序列化格式，来达到自动转换。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ConditionalOnClass</span><span style="color:#E1E4E8;">(ObjectMapper.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">AutoConfigureBefore</span><span style="color:#E1E4E8;">(JacksonAutoConfiguration.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ConditionalOnWebApplication</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ConditionalOnWebApplication.Type.SERVLET)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DateTimeConfiguration</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 时区</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String ASIA_SHANGHAI </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String DateTimeFormatPattern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String DateFormatPattern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String TimeFormatPattern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;HH:mm:ss&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Jackson2ObjectMapperBuilderCustomizer </span><span style="color:#B392F0;">jacksonCustomizer</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> builder </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 设置 java.util.Date 时间类的序列化以及反序列化的格式</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">simpleDateFormat</span><span style="color:#E1E4E8;">(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">locale</span><span style="color:#E1E4E8;">(Locale.CHINA);</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">timeZone</span><span style="color:#E1E4E8;">(TimeZone.</span><span style="color:#B392F0;">getTimeZone</span><span style="color:#E1E4E8;">(ASIA_SHANGHAI));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// JSR 310 日期时间处理</span></span>
<span class="line"><span style="color:#E1E4E8;">            JavaTimeModule module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JavaTimeModule</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// LocalDateTime</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// module.addSerializer(LocalDateTime.class, new LocalDateTimeSerializer(dateTimeFormatter));</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// module.addDeserializer(LocalDateTime.class, new LocalDateTimeDeserializer(dateTimeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// LocalDate</span></span>
<span class="line"><span style="color:#E1E4E8;">            DateTimeFormatter dateFormatter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTimeFormatter.</span><span style="color:#B392F0;">ofPattern</span><span style="color:#E1E4E8;">(DateFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            module.</span><span style="color:#B392F0;">addSerializer</span><span style="color:#E1E4E8;">(LocalDate.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalDateSerializer</span><span style="color:#E1E4E8;">(dateFormatter));</span></span>
<span class="line"><span style="color:#E1E4E8;">            module.</span><span style="color:#B392F0;">addDeserializer</span><span style="color:#E1E4E8;">(LocalDate.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalDateDeserializer</span><span style="color:#E1E4E8;">(dateFormatter));</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// LocalTime</span></span>
<span class="line"><span style="color:#E1E4E8;">            DateTimeFormatter timeFormatter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTimeFormatter.</span><span style="color:#B392F0;">ofPattern</span><span style="color:#E1E4E8;">(TimeFormatPattern);</span></span>
<span class="line"><span style="color:#E1E4E8;">            module.</span><span style="color:#B392F0;">addSerializer</span><span style="color:#E1E4E8;">(LocalTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalTimeSerializer</span><span style="color:#E1E4E8;">(timeFormatter));</span></span>
<span class="line"><span style="color:#E1E4E8;">            module.</span><span style="color:#B392F0;">addDeserializer</span><span style="color:#E1E4E8;">(LocalTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LocalTimeDeserializer</span><span style="color:#E1E4E8;">(timeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">modules</span><span style="color:#E1E4E8;">(module);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 全局转化 Long 类型为 String，解决序列化后传入前端 Long 类型精度丢失问题</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">serializerByType</span><span style="color:#E1E4E8;">(BigInteger.class, ToStringSerializer.instance);</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">serializerByType</span><span style="color:#E1E4E8;">(Long.class, ToStringSerializer.instance);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 设置 LocalDateTime 在序列化时，转换为时间戳</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">serializerByType</span><span style="color:#E1E4E8;">(LocalDateTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TimestampLocalDateTimeSerializer</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 设置 LocalDateTime 在反序列化时，从时间戳转为 LocalDateTime</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">deserializerByType</span><span style="color:#E1E4E8;">(LocalDateTime.class, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TimestampLocalDateTimeDeserializer</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 序列化时间戳</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TimestampLocalDateTimeSerializer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonSerializer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">LocalDateTime</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">serialize</span><span style="color:#E1E4E8;">(LocalDateTime </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, JsonGenerator </span><span style="color:#FFAB70;">gen</span><span style="color:#E1E4E8;">, SerializerProvider </span><span style="color:#FFAB70;">serializers</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> IOException {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> timestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LocalDateTimeUtil.</span><span style="color:#B392F0;">toEpochMilli</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">                gen.</span><span style="color:#B392F0;">writeNumber</span><span style="color:#E1E4E8;">(timestamp);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 反序列化时间戳</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TimestampLocalDateTimeDeserializer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonDeserializer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">LocalDateTime</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> LocalDateTime </span><span style="color:#B392F0;">deserialize</span><span style="color:#E1E4E8;">(JsonParser </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">, DeserializationContext </span><span style="color:#FFAB70;">deserializationContext</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> IOException {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> timestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> p.</span><span style="color:#B392F0;">getValueAsLong</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (timestamp </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> LocalDateTimeUtil.</span><span style="color:#B392F0;">of</span><span style="color:#E1E4E8;">(timestamp, ZoneOffset.</span><span style="color:#B392F0;">of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;+8&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalArgumentException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Cannot deserialize value, receive only 13 bit timestamp&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ConditionalOnClass</span><span style="color:#24292E;">(ObjectMapper.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">AutoConfigureBefore</span><span style="color:#24292E;">(JacksonAutoConfiguration.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ConditionalOnWebApplication</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ConditionalOnWebApplication.Type.SERVLET)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DateTimeConfiguration</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 时区</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ASIA_SHANGHAI </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Asia/Shanghai&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String DateTimeFormatPattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认日期格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String DateFormatPattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;yyyy-MM-dd&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 默认时间格式</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String TimeFormatPattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HH:mm:ss&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Jackson2ObjectMapperBuilderCustomizer </span><span style="color:#6F42C1;">jacksonCustomizer</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> builder </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 设置 java.util.Date 时间类的序列化以及反序列化的格式</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">simpleDateFormat</span><span style="color:#24292E;">(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">locale</span><span style="color:#24292E;">(Locale.CHINA);</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">timeZone</span><span style="color:#24292E;">(TimeZone.</span><span style="color:#6F42C1;">getTimeZone</span><span style="color:#24292E;">(ASIA_SHANGHAI));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// JSR 310 日期时间处理</span></span>
<span class="line"><span style="color:#24292E;">            JavaTimeModule module </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JavaTimeModule</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// LocalDateTime</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(DateTimeFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// module.addSerializer(LocalDateTime.class, new LocalDateTimeSerializer(dateTimeFormatter));</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// module.addDeserializer(LocalDateTime.class, new LocalDateTimeDeserializer(dateTimeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// LocalDate</span></span>
<span class="line"><span style="color:#24292E;">            DateTimeFormatter dateFormatter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DateTimeFormatter.</span><span style="color:#6F42C1;">ofPattern</span><span style="color:#24292E;">(DateFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            module.</span><span style="color:#6F42C1;">addSerializer</span><span style="color:#24292E;">(LocalDate.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalDateSerializer</span><span style="color:#24292E;">(dateFormatter));</span></span>
<span class="line"><span style="color:#24292E;">            module.</span><span style="color:#6F42C1;">addDeserializer</span><span style="color:#24292E;">(LocalDate.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalDateDeserializer</span><span style="color:#24292E;">(dateFormatter));</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// LocalTime</span></span>
<span class="line"><span style="color:#24292E;">            DateTimeFormatter timeFormatter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DateTimeFormatter.</span><span style="color:#6F42C1;">ofPattern</span><span style="color:#24292E;">(TimeFormatPattern);</span></span>
<span class="line"><span style="color:#24292E;">            module.</span><span style="color:#6F42C1;">addSerializer</span><span style="color:#24292E;">(LocalTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalTimeSerializer</span><span style="color:#24292E;">(timeFormatter));</span></span>
<span class="line"><span style="color:#24292E;">            module.</span><span style="color:#6F42C1;">addDeserializer</span><span style="color:#24292E;">(LocalTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LocalTimeDeserializer</span><span style="color:#24292E;">(timeFormatter));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">modules</span><span style="color:#24292E;">(module);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 全局转化 Long 类型为 String，解决序列化后传入前端 Long 类型精度丢失问题</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">serializerByType</span><span style="color:#24292E;">(BigInteger.class, ToStringSerializer.instance);</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">serializerByType</span><span style="color:#24292E;">(Long.class, ToStringSerializer.instance);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 设置 LocalDateTime 在序列化时，转换为时间戳</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">serializerByType</span><span style="color:#24292E;">(LocalDateTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TimestampLocalDateTimeSerializer</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 设置 LocalDateTime 在反序列化时，从时间戳转为 LocalDateTime</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">deserializerByType</span><span style="color:#24292E;">(LocalDateTime.class, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TimestampLocalDateTimeDeserializer</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 序列化时间戳</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TimestampLocalDateTimeSerializer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JsonSerializer</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">LocalDateTime</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">serialize</span><span style="color:#24292E;">(LocalDateTime </span><span style="color:#E36209;">value</span><span style="color:#24292E;">, JsonGenerator </span><span style="color:#E36209;">gen</span><span style="color:#24292E;">, SerializerProvider </span><span style="color:#E36209;">serializers</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> IOException {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (value </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> timestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTimeUtil.</span><span style="color:#6F42C1;">toEpochMilli</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">                gen.</span><span style="color:#6F42C1;">writeNumber</span><span style="color:#24292E;">(timestamp);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 反序列化时间戳</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TimestampLocalDateTimeDeserializer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JsonDeserializer</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">LocalDateTime</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> LocalDateTime </span><span style="color:#6F42C1;">deserialize</span><span style="color:#24292E;">(JsonParser </span><span style="color:#E36209;">p</span><span style="color:#24292E;">, DeserializationContext </span><span style="color:#E36209;">deserializationContext</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> IOException {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> timestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> p.</span><span style="color:#6F42C1;">getValueAsLong</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (timestamp </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> LocalDateTimeUtil.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(timestamp, ZoneOffset.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;+8&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalArgumentException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Cannot deserialize value, receive only 13 bit timestamp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><code>LocalDateTimeUtil</code> 为 hutool 提供的工具，可以替换为自己的实现</li></ul></div>`,27),o=[e];function r(t,c,i,E,y,m){return a(),n("div",null,o)}const F=s(p,[["render",r]]);export{b as __pageData,F as default};
