import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.419948d5.js";const b=JSON.parse('{"title":"ORM 框架 - Mybatis","description":"","frontmatter":{"title":"ORM 框架 - Mybatis","tag":"Mybatis","date":"2022-10-21T00:00:00.000Z"},"headers":[],"relativePath":"database/mysql/4.1-orm-mybatis.md","filePath":"database/mysql/4.1-orm-mybatis.md","lastUpdated":1695217340000}'),p={name:"database/mysql/4.1-orm-mybatis.md"},o=l(`<blockquote><p>本章节基于 <a href="https://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noreferrer">Mybatis3 官方文档</a> 编写，介绍 Java 项目使用 原生 Mybatis 的方式，以及 Mybatis 的基本配置和功能。</p></blockquote><h2 id="mybatis-概述" tabindex="-1">Mybatis 概述 <a class="header-anchor" href="#mybatis-概述" aria-label="Permalink to &quot;Mybatis 概述&quot;">​</a></h2><p>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。</p><p>MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。</p><p>MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p><p>Mybatis 的特点：</p><ul><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个 jar 文件 + 配置几个 sql 映射文件。易于学习，易于使用。通过文档和源代码，可以比较完全的掌握它的设计思路和实现。\`\`</li><li>灵活：mybatis 不会对应用程序或者数据库的现有设计强加任何影响。sql 写在 xml 里，便于统一管理和优化。通过 sql 语句可以满足操作数据库的所有需求。</li><li>解除 sql 与程序代码的耦合：通过提供 DAO 层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql 和代码的分离，提高了可维护性。</li><li>提供映射标签，支持对象与数据库的 orm 字段关系映射。</li><li>提供对象关系映射标签，支持对象关系组建维护。</li><li>提供 xml 标签，支持编写动态 sql。</li></ul><h2 id="mybatis-运行原理" tabindex="-1">Mybatis 运行原理 <a class="header-anchor" href="#mybatis-运行原理" aria-label="Permalink to &quot;Mybatis 运行原理&quot;">​</a></h2><p><img src="https://cdn.staticaly.com/gh/AlexChen68/OSS@master/blog/database/mybatis_process.png" alt="Mybatis 运行原理"></p><h2 id="引入-mybatis" tabindex="-1">引入 Mybatis <a class="header-anchor" href="#引入-mybatis" aria-label="Permalink to &quot;引入 Mybatis&quot;">​</a></h2><ul><li><p>将 <a href="https://github.com/mybatis/mybatis-3/releases" target="_blank" rel="noreferrer">mybatis-x.x.x.jar</a> 文件置于类路径（classpath）中即可</p></li><li><p>另一种方法是通过 Maven 引入普通的 Mybatis 版本</p></li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.mybatis&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;mybatis&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;{version}&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.mybatis&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;mybatis&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;{version}&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="xml-配置" tabindex="-1">XML 配置 <a class="header-anchor" href="#xml-配置" aria-label="Permalink to &quot;XML 配置&quot;">​</a></h2><p>Mybatis 使用 XML 文件配置全局配置，MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。配置文档的顶层结构如下（加粗的为常用配置）：</p><ul><li>configuration（配置） <ul><li><strong>properties</strong>（属性）</li><li><strong>settings</strong>（设置）</li><li><strong>typeAliases</strong>（类型别名）</li><li>typeHandlers（类型处理器）</li><li>objectFactory（对象工厂）</li><li>plugins（插件）</li><li><strong>environments</strong>（环境配置） <ul><li>environment（环境变量） <ul><li>transactionManager（事务管理器）</li><li>dataSource（数据源）</li></ul></li></ul></li><li>databaseIdProvider（数据库厂商标识）</li><li><strong>mappers</strong>（映射器）</li></ul></li></ul><p>XML 配置文件示例（mybatis-config.xml）：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#B392F0;"> encoding</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;"> ?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 属性配置 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">properties</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resource</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;application.yml&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">properties</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- mybatis 设置 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">settings</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- 指定日志框架 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">setting</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;logImpl&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;SLF4J&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">settings</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 类型别名 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">typeAliases</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">typeAlias</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">alias</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;User&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tech.alexchen.mybatis.entity.SysUser&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">typeAliases</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 类型处理器 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">typeHandlers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">typeHandler</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handler</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tech.alexchen.mybatis.config.StringTypeHandler&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">typeHandlers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 对象工厂 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">objectFactory</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tech.alexchen.mybatis.config.SysUserObjectFactory&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;someProperty&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">objectFactory</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 插件 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">interceptor</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tech.alexchen.mybatis.config.MyPlugin&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;someProperty&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">interceptor</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;com.github.pagehelper.PageInterceptor&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">&lt;!-- 使用下面的方式配置参数，后面会有所有的参数介绍 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;param1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;value1&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 环境配置 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">environments</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">default</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">environment</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;JDBC&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">&lt;!-- 跳过连接关闭时自动提交事务 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;skipSetAutoCommitOnClose&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;false&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;/</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">&lt;!-- 如果一个属性在不只一个地方进行了配置，那么，MyBatis 将按照下面的顺序来加载： --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">&lt;!-- 1. 首先读取在 properties 元素体内指定的属性。 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">&lt;!-- 2. 然后根据 properties 元素中的 resource 属性读取类路径下属性文件，或根据 url 属性指定的路径读取属性文件，并覆盖之前读取过的同名属性。 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">&lt;!-- 3. 最后读取作为方法参数传递的属性，并覆盖之前读取过的同名属性。 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">dataSource</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;POOLED&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;driver&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${driver}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;url&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${url}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${username}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${password}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;/</span><span style="color:#85E89D;">dataSource</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">environment</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">environments</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- mapper文件 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resource</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;mapper/SysUserMapper.xml&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- 使用映射器接口实现类的完全限定类名 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- &lt;mapper class=&quot;tech.alexchen.mybatis.mapper.SysUserMapper&quot;/&gt; --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- &lt;package name=&quot;tech.alexchen.mybatis.mapper&quot;/&gt; --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#6F42C1;"> encoding</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;"> ?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">configuration</span></span>
<span class="line"><span style="color:#24292E;">        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span>
<span class="line"><span style="color:#24292E;">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 属性配置 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">properties</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;application.yml&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">properties</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- mybatis 设置 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">settings</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- 指定日志框架 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">setting</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;logImpl&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;SLF4J&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">settings</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 类型别名 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">typeAliases</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">typeAlias</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alias</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tech.alexchen.mybatis.entity.SysUser&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">typeAliases</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 类型处理器 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">typeHandlers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">typeHandler</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handler</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tech.alexchen.mybatis.config.StringTypeHandler&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">typeHandlers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 对象工厂 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">objectFactory</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tech.alexchen.mybatis.config.SysUserObjectFactory&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;someProperty&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">objectFactory</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 插件 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">interceptor</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tech.alexchen.mybatis.config.MyPlugin&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;someProperty&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">interceptor</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.github.pagehelper.PageInterceptor&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">&lt;!-- 使用下面的方式配置参数，后面会有所有的参数介绍 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;param1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;value1&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 环境配置 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">environments</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">default</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">environment</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;JDBC&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">&lt;!-- 跳过连接关闭时自动提交事务 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;skipSetAutoCommitOnClose&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;false&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">&lt;!-- 如果一个属性在不只一个地方进行了配置，那么，MyBatis 将按照下面的顺序来加载： --&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">&lt;!-- 1. 首先读取在 properties 元素体内指定的属性。 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">&lt;!-- 2. 然后根据 properties 元素中的 resource 属性读取类路径下属性文件，或根据 url 属性指定的路径读取属性文件，并覆盖之前读取过的同名属性。 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">&lt;!-- 3. 最后读取作为方法参数传递的属性，并覆盖之前读取过的同名属性。 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">dataSource</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;POOLED&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;driver&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${driver}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;url&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${url}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${username}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${password}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">dataSource</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">environment</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">environments</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- mapper文件 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper/SysUserMapper.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- 使用映射器接口实现类的完全限定类名 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- &lt;mapper class=&quot;tech.alexchen.mybatis.mapper.SysUserMapper&quot;/&gt; --&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- &lt;package name=&quot;tech.alexchen.mybatis.mapper&quot;/&gt; --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><p><strong>注意：这些标签的必须按照要求的顺序，否则会提示错误！</strong></p><h3 id="属性-properties" tabindex="-1">属性（properties） <a class="header-anchor" href="#属性-properties" aria-label="Permalink to &quot;属性（properties）&quot;">​</a></h3><p><code>&lt;properties&gt;</code> 标签可以通过 <code>resources</code> 属性从 Java 属性文件中引入属性配置，也可以在子标签 <code>&lt;property&gt;</code> 中设置属性，属性可以通过 <code>\${propertyName}</code> 的方式使用。设置好的属性可以在整个配置文件中用来替换需要动态配置的属性值。</p><p>示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">properties</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resource</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;application.yml&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;property&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;propertyValue&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">properties</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">properties</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;application.yml&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;property&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;propertyValue&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">properties</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="设置-settings" tabindex="-1">设置（settings） <a class="header-anchor" href="#设置-settings" aria-label="Permalink to &quot;设置（settings）&quot;">​</a></h3><p><code>settings</code> 中配置 Mybatis 运行时的全局配置，这里配置会通过<code>org.apache.ibatis.session.Configuration</code> 类的实例存储，在 Mybatis 的整个流程中被使用。具体配置见官方文档 <a href="https://mybatis.org/mybatis-3/zh/configuration.html#%E8%AE%BE%E7%BD%AE%EF%BC%88settings%EF%BC%89" target="_blank" rel="noreferrer">设置（settings）</a>。</p><p>示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">settings</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 指定日志框架 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">setting</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;logImpl&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;SLF4J&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">settings</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">settings</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 指定日志框架 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">setting</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;logImpl&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;SLF4J&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">settings</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="类型别名-typealiases" tabindex="-1">类型别名（typeAliases） <a class="header-anchor" href="#类型别名-typealiases" aria-label="Permalink to &quot;类型别名（typeAliases）&quot;">​</a></h3><p>类型别名可为 Java 类型设置一个缩写名字。它仅用于 XML 配置，意在降低冗余的全限定类名书写。</p><p>示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">typeAliases</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">typeAlias</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">alias</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;User&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tech.alexchen.mybatis.entity.SysUser&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">typeAliases</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">typeAliases</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">typeAlias</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alias</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tech.alexchen.mybatis.entity.SysUser&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">typeAliases</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在配置 XML 映射文件时，可以使用 <code>User</code> 替代其全限定类名。</p><h3 id="环境配置-environments" tabindex="-1">环境配置（environments） <a class="header-anchor" href="#环境配置-environments" aria-label="Permalink to &quot;环境配置（environments）&quot;">​</a></h3><p>MyBatis 可以配置成适应多种环境，这种机制有助于将 SQL 映射应用于多种数据库之中，现实情况下有多种理由需要这么做。例如，开发、测试和生产环境需要有不同的配置；或者想在具有相同 Schema 的多个生产数据库中使用相同的 SQL 映射。还有许多类似的使用场景。</p><p><strong>不过要记住：尽管可以配置多个环境，但每个 SqlSessionFactory 实例只能选择一种环境。</strong></p><p>示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">environments</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">default</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">environment</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;JDBC&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;...&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;...&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dataSource</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;POOLED&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;driver&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${driver}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;url&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${url}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${username}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;\${password}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dataSource</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">environment</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">environments</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">environments</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">default</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">environment</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;JDBC&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;...&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;...&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dataSource</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;POOLED&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;driver&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${driver}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;url&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${url}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${username}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;\${password}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dataSource</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">environment</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">environments</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li><p>每一个 <code>&lt;environment&gt;</code> 子标签表示一个数据库环境，其 <code>id</code> 属性是其标识，可以在 <code>&lt;environments&gt;</code> 标签中通过 <code>default</code> 属性指定默认的数据库，这样，Mybatis 在进行数据库连接时，如果没有通过参数指定特定的数据库，则会使用该默认数据库信息进行连接。</p></li><li><p><code>&lt;transactionManager&gt;</code> 可以配置使用的事物管理，在 MyBatis 中有两种类型的事务管理器： <code>JDBC</code>和 <code>MANAGED</code>，在使用 Spring 时无需配置，因为 Spring 会覆盖它。</p><ul><li><p>JDBC – 这个配置直接使用了 JDBC 的提交和回滚功能，它依赖从数据源获得的连接来管理事务作用域；默认情况下，它在关闭连接时启用自动提交，可以通过设置关闭它：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;JDBC&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;skipSetAutoCommitOnClose&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;JDBC&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;skipSetAutoCommitOnClose&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>MANAGED – 这个配置几乎没做什么。它从不提交或回滚一个连接，而是让容器来管理事务的整个生命周期。默认情况下它会关闭连接，可以将 closeConnection 属性设置为 false 来阻止默认的关闭行为：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;MANAGED&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;closeConnection&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;false&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;MANAGED&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;closeConnection&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;false&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p><code>&lt;dataSource&gt;</code> 标签用来配置数据库连接信息，它有一个 <code>type</code> 属性用来配置数据源类型，支持三种数据源类型：</p><ul><li><strong>UNPOOLED</strong>：无数据池，这个数据源的实现会每次请求时打开和关闭连接。</li><li><strong>POOLED</strong>：使用数据库连接池，这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来，避免了创建新的连接实例时所必需的初始化和认证时间。这种处理方式很流行，能使并发 Web 应用快速响应请求。</li><li><strong>JNDI</strong> ：这个数据源实现是为了能在如 EJB 或应用服务器这类容器中使用，容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的数据源引用。</li></ul></li></ul><h3 id="映射器-mappers" tabindex="-1">映射器（mappers） <a class="header-anchor" href="#映射器-mappers" aria-label="Permalink to &quot;映射器（mappers）&quot;">​</a></h3><p><code>&lt;mappers&gt;</code> 是非常重要的配置，它用来配置 MyBatis 去哪里找映射文件，支持四种配置方式：</p><ul><li><p>使用相对于类路径的资源引用</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resource</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;org/mybatis/builder/AuthorMapper.xml&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resource</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;org/mybatis/builder/BlogMapper.xml&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resource</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;org/mybatis/builder/PostMapper.xml&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org/mybatis/builder/AuthorMapper.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org/mybatis/builder/BlogMapper.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org/mybatis/builder/PostMapper.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>使用完全限定资源定位符（URL）</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;file:///var/mappers/AuthorMapper.xml&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;file:///var/mappers/BlogMapper.xml&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;file:///var/mappers/PostMapper.xml&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;file:///var/mappers/AuthorMapper.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;file:///var/mappers/BlogMapper.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;file:///var/mappers/PostMapper.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>使用映射器接口实现类的完全限定类名</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;org.mybatis.builder.AuthorMapper&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;org.mybatis.builder.BlogMapper&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;org.mybatis.builder.PostMapper&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org.mybatis.builder.AuthorMapper&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org.mybatis.builder.BlogMapper&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org.mybatis.builder.PostMapper&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>将包内的映射器接口实现全部注册为映射器</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;org.mybatis.builder&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mappers</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org.mybatis.builder&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="xml-映射文件" tabindex="-1">XML 映射文件 <a class="header-anchor" href="#xml-映射文件" aria-label="Permalink to &quot;XML 映射文件&quot;">​</a></h2><p>XML 映射文件用来编写数据库 SQL 语句，以及进行结构集与 Java 对象的映射。</p><p>SQL 映射文件只有很少的几个顶级元素（按照应被定义的顺序列出）：</p><ul><li><code>cache</code> – 该命名空间的缓存配置。</li><li><code>cache-ref</code> – 引用其它命名空间的缓存配置。</li><li><code>resultMap</code> – 描述如何从数据库结果集中加载对象，是最复杂也是最强大的元素。</li><li><code>sql</code> – 可被其它语句引用的可重用语句块。</li><li><code>insert</code> – 映射插入语句。</li><li><code>update</code> – 映射更新语句。</li><li><code>delete</code> – 映射删除语句。</li><li><code>select</code> – 映射查询语句。</li></ul><p>示例（SysUserMapper.xml）：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#B392F0;"> encoding</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">mapper</span><span style="color:#E1E4E8;"> PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">namespace</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tech.alexchen.mybatis.mapper.SysUserMapper&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userMap&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;User&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- column 为数据库字段名，property 为实体类属性名 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;user_id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userId&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;phone&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;phone&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tenant_id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;tenantId&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#6F42C1;"> encoding</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">mapper</span><span style="color:#24292E;"> PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">namespace</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tech.alexchen.mybatis.mapper.SysUserMapper&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- column 为数据库字段名，property 为实体类属性名 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;user_id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userId&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;phone&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;phone&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tenant_id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;tenantId&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="namespace" tabindex="-1">namespace <a class="header-anchor" href="#namespace" aria-label="Permalink to &quot;namespace&quot;">​</a></h3><p>命名空间用来绑定 Mapper 接口（定义数据访问方法的接口），从项目分层的角度来讲，<code>SysUserMapper.xml</code> 可以认为是 SysUserMapper 的实现，它定义了接口方法的具体实现。</p><p>命名空间应该是全局唯一的。</p><h3 id="select" tabindex="-1">select <a class="header-anchor" href="#select" aria-label="Permalink to &quot;select&quot;">​</a></h3><p>查询语句是 MyBatis 中最常用的元素之一——光能把数据存到数据库中价值并不大，还要能重新取出来才有用，多数应用也都是查询比修改要频繁。</p><p>示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectPerson&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parameterType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;int&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;hashmap&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM PERSON WHERE ID = #{id}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectPerson&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;int&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;hashmap&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM PERSON WHERE ID = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这个语句名为 selectPerson，接受一个 int（或 Integer）类型的参数，并返回一个 HashMap 类型的对象，其中的键是列名，值便是结果行中的对应值。</p><p>其中，<code>#{id}</code> 表示创建预处理语句，在 JDBC 中，这样的一个参数在 SQL 中会由一个 <code>?</code> 来标识，并被传递到一个新的预处理语句中，最后使用方法的输入参数 <code>id</code> 进行填充，就像这样：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">String selectPerson </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;SELECT * FROM PERSON WHERE ID = ?&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">PreparedStatement ps </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> conn.</span><span style="color:#B392F0;">prepareStatement</span><span style="color:#E1E4E8;">(selectPerson);</span></span>
<span class="line"><span style="color:#E1E4E8;">ps.</span><span style="color:#B392F0;">setInt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,id);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">String selectPerson </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;SELECT * FROM PERSON WHERE ID = ?&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">PreparedStatement ps </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> conn.</span><span style="color:#6F42C1;">prepareStatement</span><span style="color:#24292E;">(selectPerson);</span></span>
<span class="line"><span style="color:#24292E;">ps.</span><span style="color:#6F42C1;">setInt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,id);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>select</code> 有很多的属性：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;">在命名空间中唯一的标识符，可以被用来引用这条语句。</td></tr><tr><td style="text-align:left;"><code>parameterType</code></td><td style="text-align:left;">将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（unset）。</td></tr><tr><td style="text-align:left;"><code>resultType</code></td><td style="text-align:left;">期望从这条语句中返回结果的类全限定名或别名。注意，如果返回的是集合，那应该设置为集合包含的类型，而不是集合本身的类型。resultType 和 resultMap 之间只能同时使用一个。</td></tr><tr><td style="text-align:left;"><code>resultMap</code></td><td style="text-align:left;">对外部 resultMap 的命名引用。结果映射是 MyBatis 最强大的特性，如果你对其理解透彻，许多复杂的映射问题都能迎刃而解。resultType 和 resultMap 之间只能同时使用一个。</td></tr><tr><td style="text-align:left;"><code>flushCache</code></td><td style="text-align:left;">将其设置为 true 后，只要语句被调用，都会导致本地缓存和二级缓存被清空，默认值：false。</td></tr><tr><td style="text-align:left;"><code>useCache</code></td><td style="text-align:left;">将其设置为 true 后，将会导致本条语句的结果被二级缓存缓存起来，默认值：对 select 元素为 true。</td></tr><tr><td style="text-align:left;"><code>timeout</code></td><td style="text-align:left;">这个设置是在抛出异常之前，驱动程序等待数据库返回请求结果的秒数。默认值为未设置（unset）（依赖数据库驱动）。</td></tr><tr><td style="text-align:left;"><code>fetchSize</code></td><td style="text-align:left;">这是一个给驱动的建议值，尝试让驱动程序每次批量返回的结果行数等于这个设置值。默认值为未设置（unset）（依赖驱动）。</td></tr><tr><td style="text-align:left;"><code>statementType</code></td><td style="text-align:left;">可选 STATEMENT，PREPARED 或 CALLABLE。这会让 MyBatis 分别使用 Statement，PreparedStatement 或 CallableStatement，默认值：PREPARED。</td></tr><tr><td style="text-align:left;"><code>resultSetType</code></td><td style="text-align:left;">FORWARD_ONLY，SCROLL_SENSITIVE, SCROLL_INSENSITIVE 或 DEFAULT（等价于 unset）中的一个，默认值为 unset（依赖数据库驱动）。</td></tr><tr><td style="text-align:left;"><code>databaseId</code></td><td style="text-align:left;">如果配置了数据库厂商标识（databaseIdProvider），MyBatis 会加载所有不带 databaseId 或匹配当前 databaseId 的语句；如果带和不带的语句都有，则不带的会被忽略。</td></tr><tr><td style="text-align:left;"><code>resultOrdered</code></td><td style="text-align:left;">这个设置仅针对嵌套结果 select 语句：如果为 true，则假设结果集以正确顺序（排序后）执行映射，当返回新的主结果行时，将不再发生对以前结果行的引用。这样可以减少内存消耗。默认值：<code>false</code>。</td></tr><tr><td style="text-align:left;"><code>resultSets</code></td><td style="text-align:left;">这个设置仅适用于多结果集的情况。它将列出语句执行后返回的结果集并赋予每个结果集一个名称，多个名称之间以逗号分隔。</td></tr></tbody></table><p>一个全部属性的 select 标签示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectPerson&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parameterType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;int&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parameterMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;deprecated&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;hashmap&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;personResultMap&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">flushCache</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">useCache</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">timeout</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">fetchSize</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;256&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">statementType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;PREPARED&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">resultSetType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;FORWARD_ONLY&quot;</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectPerson&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;int&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parameterMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;deprecated&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;hashmap&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;personResultMap&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">flushCache</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">useCache</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">timeout</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">fetchSize</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;256&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">statementType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;PREPARED&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">resultSetType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;FORWARD_ONLY&quot;</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="insert-update-和-delete" tabindex="-1">insert, update 和 delete <a class="header-anchor" href="#insert-update-和-delete" aria-label="Permalink to &quot;insert, update 和 delete&quot;">​</a></h3><p>Insert, Update, Delete 元素的属性：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;">在命名空间中唯一的标识符，可以被用来引用这条语句。</td></tr><tr><td style="text-align:left;"><code>parameterType</code></td><td style="text-align:left;">将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（unset）。</td></tr><tr><td style="text-align:left;"><code>parameterMap</code></td><td style="text-align:left;">用于引用外部 parameterMap 的属性，目前已被废弃。请使用行内参数映射和 parameterType 属性。</td></tr><tr><td style="text-align:left;"><code>flushCache</code></td><td style="text-align:left;">将其设置为 true 后，只要语句被调用，都会导致本地缓存和二级缓存被清空，默认值：（对 insert、update 和 delete 语句）true。</td></tr><tr><td style="text-align:left;"><code>timeout</code></td><td style="text-align:left;">这个设置是在抛出异常之前，驱动程序等待数据库返回请求结果的秒数。默认值为未设置（unset）（依赖数据库驱动）。</td></tr><tr><td style="text-align:left;"><code>statementType</code></td><td style="text-align:left;">可选 STATEMENT，PREPARED 或 CALLABLE。这会让 MyBatis 分别使用 Statement，PreparedStatement 或 CallableStatement，默认值：PREPARED。</td></tr><tr><td style="text-align:left;"><code>useGeneratedKeys</code></td><td style="text-align:left;">（仅适用于 insert 和 update）这会令 MyBatis 使用 JDBC 的 getGeneratedKeys 方法来取出由数据库内部生成的主键（比如：像 MySQL 和 SQL Server 这样的关系型数据库管理系统的自动递增字段），默认值：false。</td></tr><tr><td style="text-align:left;"><code>keyProperty</code></td><td style="text-align:left;">（仅适用于 insert 和 update）指定能够唯一识别对象的属性，MyBatis 会使用 getGeneratedKeys 的返回值或 insert 语句的 selectKey 子元素设置它的值，默认值：未设置（<code>unset</code>）。如果生成列不止一个，可以用逗号分隔多个属性名称。</td></tr><tr><td style="text-align:left;"><code>keyColumn</code></td><td style="text-align:left;">（仅适用于 insert 和 update）设置生成键值在表中的列名，在某些数据库（像 PostgreSQL）中，当主键列不是表中的第一列的时候，是必须设置的。如果生成列不止一个，可以用逗号分隔多个属性名称。</td></tr><tr><td style="text-align:left;"><code>databaseId</code></td><td style="text-align:left;">如果配置了数据库厂商标识（databaseIdProvider），MyBatis 会加载所有不带 databaseId 或匹配当前 databaseId 的语句；如果带和不带的语句都有，则不带的会被忽略。</td></tr></tbody></table><p>在进行数据插入时，常常需要借助数据库自动生成主键，Mybatis 提供了配置使用自动生成 key 的设置 <code>useGeneratedKeys</code> 和指定自动生成主键属性的配置 <code>keyProperty</code>，例如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">insert</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;insertAuthor&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useGeneratedKeys</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">keyProperty</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  insert into Author (username,password,email,bio)</span></span>
<span class="line"><span style="color:#E1E4E8;">  values (#{username},#{password},#{email},#{bio})</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">insert</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">insert</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;insertAuthor&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useGeneratedKeys</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">keyProperty</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  insert into Author (username,password,email,bio)</span></span>
<span class="line"><span style="color:#24292E;">  values (#{username},#{password},#{email},#{bio})</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">insert</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>假设这个方法传入一个对象，那么它还会将数据库生成的主键填充到输入对象的指定属性，例如这里的 <code>id</code> 。</p><p>另外可以通过配置 <code>selectKey</code> 用来在执行插入前，生产主键值并填充到参数中，具体见<a href="https://mybatis.org/mybatis-3/zh/sqlmap-xml.html#select-1" target="_blank" rel="noreferrer">官方文档</a>。</p><h3 id="sql" tabindex="-1">SQL <a class="header-anchor" href="#sql" aria-label="Permalink to &quot;SQL&quot;">​</a></h3><p>这个元素可以用来定义可重用的 SQL 代码片段，以便在其它语句中使用。参数可以静态地（在加载的时候）确定下来，并且可以在不同的 include 元素中定义不同的参数值。比如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">sql</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userColumns&quot;</span><span style="color:#E1E4E8;">&gt; \${alias}.id,\${alias}.username,\${alias}.password &lt;/</span><span style="color:#85E89D;">sql</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">sql</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userColumns&quot;</span><span style="color:#24292E;">&gt; \${alias}.id,\${alias}.username,\${alias}.password &lt;/</span><span style="color:#22863A;">sql</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个 SQL 片段可以在其它语句中使用，例如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectUsers&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;map&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  select</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">include</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">refid</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userColumns&quot;</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;alias&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;t1&quot;</span><span style="color:#E1E4E8;">/&gt;&lt;/</span><span style="color:#85E89D;">include</span><span style="color:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">include</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">refid</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userColumns&quot;</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;alias&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;t2&quot;</span><span style="color:#E1E4E8;">/&gt;&lt;/</span><span style="color:#85E89D;">include</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  from some_table t1</span></span>
<span class="line"><span style="color:#E1E4E8;">    cross join some_table t2</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectUsers&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  select</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">include</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">refid</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userColumns&quot;</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;alias&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;t1&quot;</span><span style="color:#24292E;">/&gt;&lt;/</span><span style="color:#22863A;">include</span><span style="color:#24292E;">&gt;,</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">include</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">refid</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userColumns&quot;</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;alias&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;t2&quot;</span><span style="color:#24292E;">/&gt;&lt;/</span><span style="color:#22863A;">include</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  from some_table t1</span></span>
<span class="line"><span style="color:#24292E;">    cross join some_table t2</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><p>在 CRUD 的四个标签中，都有需要传参的场景，通过 <code>parameterType</code> 可以指定方法的输入参数。参数传入有几种情况：</p><ul><li><p>原始类型或简单数据类型（比如 <code>Integer</code> 和 <code>String</code>）因为没有其它属性，会用它们的值来作为参数，因此可以省略 <code>parameterType</code> 配置；</p></li><li><p>参数对一个复杂对象，必须指定 <code>parameterType</code>；</p></li><li><p>可以在 SQL 中指定参数类型，例如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#{age,javaType=int,jdbcType=NUMERIC,typeHandler=MyTypeHandler}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#{age,javaType=int,jdbcType=NUMERIC,typeHandler=MyTypeHandler}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>注意：当某个属性可以传输 null 并存储到数据库时，必须指定 <code>jdbcType</code> ；</li><li>当参数为一个 <code>HashMap</code> 时，需要显式指定 <code>javaType</code> 来确保正确的类型处理器（<code>TypeHandler</code>）被使用。</li></ul></li></ul><h3 id="字符串替换" tabindex="-1">字符串替换 <a class="header-anchor" href="#字符串替换" aria-label="Permalink to &quot;字符串替换&quot;">​</a></h3><p>默认情况下，使用 <code>#{}</code> 参数语法时，MyBatis 会创建 <code>PreparedStatement</code> 参数占位符，并通过占位符安全地设置参数（就像使用 ? 一样）。</p><p>这样做更安全，更迅速，通常也是首选做法，不过有时你就是想直接在 SQL 语句中直接插入一个不转义的字符串。比如 ORDER BY 子句，这时候你可以：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> \${columnName}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> \${columnName}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>​ 以 <code>\${}</code> 包围的字符串，不会被预处理为 <code>?</code>，而是直接拼接到 SQL 中；这种做法虽然有时很方便，但是会有 SQL 注入到风险，例如：在 <code>where id = \${id}</code> 中，传入 <code>1 or 1=1</code>，可以将 <code>id=?</code> 这个过滤条件跳过，查询出全部的数据。</p><p>因此，要么不允许用户输入这些字段，要么自行转义并检验这些参数。</p><h3 id="结果映射" tabindex="-1">结果映射 <a class="header-anchor" href="#结果映射" aria-label="Permalink to &quot;结果映射&quot;">​</a></h3><h4 id="映射-map" tabindex="-1">映射 Map <a class="header-anchor" href="#映射-map" aria-label="Permalink to &quot;映射 Map&quot;">​</a></h4><p>配置 <code>resultType</code> 属性为 map，即可将结果以键值对的形式映射到 map 中：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectUsers&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;map&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  select id, username, hashedPassword</span></span>
<span class="line"><span style="color:#E1E4E8;">  from some_table</span></span>
<span class="line"><span style="color:#E1E4E8;">  where id = #{id}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectUsers&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  select id, username, hashedPassword</span></span>
<span class="line"><span style="color:#24292E;">  from some_table</span></span>
<span class="line"><span style="color:#24292E;">  where id = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="映射-bean" tabindex="-1">映射 bean <a class="header-anchor" href="#映射-bean" aria-label="Permalink to &quot;映射 bean&quot;">​</a></h4><p>同理，设置 <code>resultType</code> 属性为 bean 的全限定名，即可通过属性名称，将结果映射到 java 对象中：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;select id=&quot;selectUsers&quot; resultType=&quot;com.someapp.model.User&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">  select id, username, hashedPassword</span></span>
<span class="line"><span style="color:#e1e4e8;">  from some_table</span></span>
<span class="line"><span style="color:#e1e4e8;">  where id = #{id}</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/select&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;select id=&quot;selectUsers&quot; resultType=&quot;com.someapp.model.User&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">  select id, username, hashedPassword</span></span>
<span class="line"><span style="color:#24292e;">  from some_table</span></span>
<span class="line"><span style="color:#24292e;">  where id = #{id}</span></span>
<span class="line"><span style="color:#24292e;">&lt;/select&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>当然，也可以通过 <code>ResultMap</code> 标签，定义复杂的映射关系，例如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userResultMap&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;User&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;user_id&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;user_name&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;hashed_password&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userResultMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;user_id&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;user_name&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;hashed_password&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>设置 <code>resultType</code> 属性为定义出来的 <code>userResultMap</code> 即可将映射到自定义的结构中。</p><h4 id="resultmap" tabindex="-1">ResultMap <a class="header-anchor" href="#resultmap" aria-label="Permalink to &quot;ResultMap&quot;">​</a></h4><p><code>ResultMap</code> 用来定义复杂的结构映射，它的属性如下：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;">当前命名空间中的一个唯一标识，用于标识一个结果映射。</td></tr><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;">类的完全限定名，或者一个类型别名（关于内置的类型别名，可以参考上面的表格）。</td></tr><tr><td style="text-align:left;"><code>autoMapping</code></td><td style="text-align:left;">如果设置这个属性，MyBatis 将会为本结果映射开启或者关闭自动映射。这个属性会覆盖全局的属性 autoMappingBehavior。默认值：未设置（unset）。</td></tr></tbody></table><p>它包含了如下子标签：</p><ul><li><code>constructor</code> - 用于在实例化类时，注入结果到构造方法中，通过 bean 的构造函数设置属性； <ul><li><code>idArg</code> - ID 参数；标记出作为 ID 的结果可以帮助提高整体性能，可以理解为构造函数参数中的主键</li><li><code>arg</code> - 将被注入到构造方法的一个普通结果，可以理解为构造函数参数中的普通属性</li></ul></li><li><code>id</code> – 一个 ID 结果；标记出作为 ID 的结果可以帮助提高整体性能，可以理解为主键</li><li><code>result</code> – 注入到字段或 JavaBean 属性的普通结果，可以理解为普通字段</li><li><code>association</code> – 一个复杂类型的关联；许多结果将包装成这种类型，可以认为是另一个类</li><li><code>collection</code> – 一个其他类型数据结构的集合，可以理解为 <code>Collection&lt;T&gt;</code></li><li>discriminator<code>– 使用结果值来决定使用哪个</code>resultMap\` <ul><li><code>case</code> – 基于某些值的结果映射；嵌套结果映射 – <code>case</code> 也是一个结果映射，因此具有相同的结构和元素；或者引用其它的结果映射</li></ul></li></ul><p>下面按照属性的类别或注入方式，依次介绍：</p><p><strong>1. 普通数据类型的 Id 和 result</strong></p><p><em>id</em> 和 <em>result</em> 元素都将一个列的值映射到一个简单数据类型（String, int, double, Date 等）的属性或字段。唯一不同是，<em>id</em> 元素对应的属性会被标记为对象的标识符，在比较对象实例时使用。它们的共同的属性：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>property</code></td><td style="text-align:left;">映射到列结果的字段或属性。如果 JavaBean 有这个名字的属性（property），会先使用该属性。否则 MyBatis 将会寻找给定名称的字段（field）。无论是哪一种情形，你都可以使用常见的点式分隔形式进行复杂属性导航。比如，你可以这样映射一些简单的东西：“username”，或者映射到一些复杂的东西上：“address.street.number”。</td></tr><tr><td style="text-align:left;"><code>column</code></td><td style="text-align:left;">数据库中的列名，或者是列的别名。一般情况下，这和传递给 <code>resultSet.getString(columnName)</code> 方法的参数一样。</td></tr><tr><td style="text-align:left;"><code>javaType</code></td><td style="text-align:left;">一个 Java 类的全限定名，或一个类型别名（关于内置的类型别名，可以参考上面的表格）。如果你映射到一个 JavaBean，MyBatis 通常可以推断类型。然而，如果你映射到的是 HashMap，那么你应该明确地指定 javaType 来保证行为与期望的相一致。</td></tr><tr><td style="text-align:left;"><code>jdbcType</code></td><td style="text-align:left;">JDBC 类型，所支持的 JDBC 类型参见这个表格之后的“支持的 JDBC 类型”。只需要在可能执行插入、更新和删除的且允许空值的列上指定 JDBC 类型。这是 JDBC 的要求而非 MyBatis 的要求。如果你直接面向 JDBC 编程，你需要对可以为空值的列指定这个类型。</td></tr><tr><td style="text-align:left;"><code>typeHandler</code></td><td style="text-align:left;">我们在前面讨论过默认的类型处理器。使用这个属性，你可以覆盖默认的类型处理器。这个属性值是一个类型处理器实现类的全限定名，或者是类型别名。</td></tr></tbody></table><p><strong>2. 构造器映射的 constructor</strong></p><p>有些 Java 对象的属性是私有的且不暴露公有的方法，只能通过构造函数初始化，<em>constructor</em> 元素就是为此而生的，示例：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// java 类</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">User</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">User</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">, String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">age</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// java 类</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">id</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">age</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>构造函数注入：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">constructor</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">idArg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">javaType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;int&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">arg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">javaType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;String&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">arg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">javaType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;_int&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">constructor</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">constructor</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">idArg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">javaType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;int&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">arg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">javaType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;String&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">arg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">javaType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;_int&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">constructor</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>从版本 3.4.3 开始，可以在指定参数名称的前提下，以任意顺序编写 arg 元素。</p><p><code>constructor</code> 的属性：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>column</code></td><td style="text-align:left;">数据库中的列名，或者是列的别名。一般情况下，这和传递给 <code>resultSet.getString(columnName)</code> 方法的参数一样。</td></tr><tr><td style="text-align:left;"><code>javaType</code></td><td style="text-align:left;">一个 Java 类的完全限定名，或一个类型别名（关于内置的类型别名，可以参考上面的表格）。如果你映射到一个 JavaBean，MyBatis 通常可以推断类型。然而，如果你映射到的是 HashMap，那么你应该明确地指定 javaType 来保证行为与期望的相一致。</td></tr><tr><td style="text-align:left;"><code>jdbcType</code></td><td style="text-align:left;">JDBC 类型，所支持的 JDBC 类型参见这个表格之前的“支持的 JDBC 类型”。只需要在可能执行插入、更新和删除的且允许空值的列上指定 JDBC 类型。这是 JDBC 的要求而非 MyBatis 的要求。如果你直接面向 JDBC 编程，你需要对可能存在空值的列指定这个类型。</td></tr><tr><td style="text-align:left;"><code>typeHandler</code></td><td style="text-align:left;">我们在前面讨论过默认的类型处理器。使用这个属性，你可以覆盖默认的类型处理器。这个属性值是一个类型处理器实现类的完全限定名，或者是类型别名。</td></tr><tr><td style="text-align:left;"><code>select</code></td><td style="text-align:left;">用于加载复杂类型属性的映射语句的 ID，它会从 column 属性中指定的列检索数据，作为参数传递给此 select 语句。具体请参考关联元素。</td></tr><tr><td style="text-align:left;"><code>resultMap</code></td><td style="text-align:left;">结果映射的 ID，可以将嵌套的结果集映射到一个合适的对象树中。它可以作为使用额外 select 语句的替代方案。它可以将多表连接操作的结果映射成一个单一的 <code>ResultSet</code>。这样的 <code>ResultSet</code> 将会将包含重复或部分数据重复的结果集。为了将结果集正确地映射到嵌套的对象树中，MyBatis 允许你“串联”结果映射，以便解决嵌套结果集的问题。想了解更多内容，请参考下面的关联元素。</td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">构造方法形参的名字。从 3.4.3 版本开始，通过指定具体的参数名，你可以以任意顺序写入 arg 元素。参看上面的解释。</td></tr></tbody></table><p><strong>3. 关联其他 Bean</strong></p><p>当 Java 类的属性为一个其他的 Bean 时，通过 <code>association</code> 标签，可以在当前映射嵌套另一个 Bean。</p><p>关联的不同之处是，你需要告诉 MyBatis 如何加载关联。MyBatis 有两种不同的方式加载关联：</p><ul><li>嵌套 Select 查询：通过执行另外一个 SQL 映射语句来加载期望的复杂类型。</li><li>嵌套结果映射：使用嵌套的结果映射来处理连接结果的重复子集。</li></ul><p>首先，先让我们来看看这个元素的属性。你将会发现，和普通的结果映射相比，它只在 select 和 resultMap 属性上有所不同。</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>property</code></td><td style="text-align:left;">映射到列结果的字段或属性。如果用来匹配的 JavaBean 存在给定名字的属性，那么它将会被使用。否则 MyBatis 将会寻找给定名称的字段。无论是哪一种情形，你都可以使用通常的点式分隔形式进行复杂属性导航。比如，你可以这样映射一些简单的东西：“username”，或者映射到一些复杂的东西上：“address.street.number”。</td></tr><tr><td style="text-align:left;"><code>javaType</code></td><td style="text-align:left;">一个 Java 类的完全限定名，或一个类型别名（关于内置的类型别名，可以参考上面的表格）。如果你映射到一个 JavaBean，MyBatis 通常可以推断类型。然而，如果你映射到的是 HashMap，那么你应该明确地指定 javaType 来保证行为与期望的相一致。</td></tr><tr><td style="text-align:left;"><code>jdbcType</code></td><td style="text-align:left;">JDBC 类型，所支持的 JDBC 类型参见这个表格之前的“支持的 JDBC 类型”。只需要在可能执行插入、更新和删除的且允许空值的列上指定 JDBC 类型。这是 JDBC 的要求而非 MyBatis 的要求。如果你直接面向 JDBC 编程，你需要对可能存在空值的列指定这个类型。</td></tr><tr><td style="text-align:left;"><code>typeHandler</code></td><td style="text-align:left;">我们在前面讨论过默认的类型处理器。使用这个属性，你可以覆盖默认的类型处理器。这个属性值是一个类型处理器实现类的完全限定名，或者是类型别名。</td></tr></tbody></table><p><strong>3.1 关联的嵌套 Select 查询（不推荐）</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>column</code></td><td style="text-align:left;">数据库中的列名，或者是列的别名。一般情况下，这和传递给 <code>resultSet.getString(columnName)</code> 方法的参数一样。注意：在使用复合主键的时候，你可以使用 <code>column=&quot;{prop1=col1,prop2=col2}&quot;</code> 这样的语法来指定多个传递给嵌套 Select 查询语句的列名。这会使得 <code>prop1</code> 和 <code>prop2</code> 作为参数对象，被设置为对应嵌套 Select 语句的参数。</td></tr><tr><td style="text-align:left;"><code>select</code></td><td style="text-align:left;">用于加载复杂类型属性的映射语句的 ID，它会从 column 属性指定的列中检索数据，作为参数传递给目标 select 语句。具体请参考下面的例子。注意：在使用复合主键的时候，你可以使用 <code>column=&quot;{prop1=col1,prop2=col2}&quot;</code> 这样的语法来指定多个传递给嵌套 Select 查询语句的列名。这会使得 <code>prop1</code> 和 <code>prop2</code> 作为参数对象，被设置为对应嵌套 Select 语句的参数。</td></tr><tr><td style="text-align:left;"><code>fetchType</code></td><td style="text-align:left;">可选的。有效值为 <code>lazy</code> 和 <code>eager</code>。指定属性后，将在映射中忽略全局配置参数 <code>lazyLoadingEnabled</code>，使用属性的值。</td></tr></tbody></table><p>示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blogResult&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">association</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author_id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">javaType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Author&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectAuthor&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectBlog&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blogResult&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM BLOG WHERE ID = #{id}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectAuthor&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Author&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM AUTHOR WHERE ID = #{id}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blogResult&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">association</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author_id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">javaType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Author&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectAuthor&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectBlog&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blogResult&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM BLOG WHERE ID = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectAuthor&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Author&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM AUTHOR WHERE ID = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>我们有两个 select 查询语句：<code>selectBlog</code> 用来加载博客（Blog），<code>selectAuthor</code> 用来加载作者（Author），而且博客的结果映射描述了应该使用 <code>selectAuthor</code> 语句加载它的 author 属性。</p><p>其它所有的属性将会被自动加载，只要它们的列名和属性名相匹配。</p><p>这种方式虽然很简单，但在大型数据集或大型数据表上表现不佳。这个问题被称为“N+1 查询问题”。概括地讲，N+1 查询问题是这样子的：</p><ul><li>你执行了一个单独的 SQL 语句来获取结果的一个列表（就是“+1”）。</li><li>对列表返回的每条记录，你执行一个 select 查询语句来为每条记录加载详细信息（就是“N”）。</li></ul><p><strong>3.2 关联的嵌套结果映射</strong>（推荐）</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>resultMap</code></td><td style="text-align:left;">结果映射的 ID，可以将此关联的嵌套结果集映射到一个合适的对象树中。它可以作为使用额外 select 语句的替代方案。它可以将多表连接操作的结果映射成一个单一的 <code>ResultSet</code>。这样的 <code>ResultSet</code> 有部分数据是重复的。为了将结果集正确地映射到嵌套的对象树中，MyBatis 允许你“串联”结果映射，以便解决嵌套结果集的问题。使用嵌套结果映射的一个例子在表格以后。</td></tr><tr><td style="text-align:left;"><code>columnPrefix</code></td><td style="text-align:left;">当连接多个表时，你可能会不得不使用列别名来避免在 <code>ResultSet</code> 中产生重复的列名。指定 columnPrefix 列名前缀允许你将带有这些前缀的列映射到一个外部的结果映射中。详细说明请参考后面的例子。</td></tr><tr><td style="text-align:left;"><code>notNullColumn</code></td><td style="text-align:left;">默认情况下，在至少一个被映射到属性的列不为空时，子对象才会被创建。你可以在这个属性上指定非空的列来改变默认行为，指定后，Mybatis 将只在这些列中任意一列非空时才创建一个子对象。可以使用逗号分隔来指定多个列。默认值：未设置（unset）。</td></tr><tr><td style="text-align:left;"><code>autoMapping</code></td><td style="text-align:left;">如果设置这个属性，MyBatis 将会为本结果映射开启或者关闭自动映射。这个属性会覆盖全局的属性 autoMappingBehavior。注意，本属性对外部的结果映射无效，所以不能搭配 <code>select</code> 或 <code>resultMap</code> 元素使用。默认值：未设置（unset）。</td></tr></tbody></table><p>关联的嵌套 Select 查询在执行时需要多次连接数据库查询，十分影响性能；而关联的嵌套结果映射则通过数据库层面的表连接 SQL 语句，先一次性查询出结果，再通过 <code>resultMap</code> 构造复杂的对象和结果做映射，减少数据库连接次数，提高性能，因此这种方式更加推荐。</p><p>示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- resultMap --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blogResult&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blog_id&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blog_title&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">association</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blog_author_id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">javaType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Author&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;authorResult&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;authorResult&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Author&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author_id&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author_username&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author_password&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;email&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author_email&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;bio&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author_bio&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- select --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectBlog&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blogResult&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  select</span></span>
<span class="line"><span style="color:#E1E4E8;">    B.id            as blog_id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    B.title         as blog_title,</span></span>
<span class="line"><span style="color:#E1E4E8;">    B.author_id     as blog_author_id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    A.id            as author_id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    A.username      as author_username,</span></span>
<span class="line"><span style="color:#E1E4E8;">    A.password      as author_password,</span></span>
<span class="line"><span style="color:#E1E4E8;">    A.email         as author_email,</span></span>
<span class="line"><span style="color:#E1E4E8;">    A.bio           as author_bio</span></span>
<span class="line"><span style="color:#E1E4E8;">  from Blog B left outer join Author A on B.author_id = A.id</span></span>
<span class="line"><span style="color:#E1E4E8;">  where B.id = #{id}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- resultMap --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blogResult&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blog_id&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blog_title&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">association</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blog_author_id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">javaType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Author&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;authorResult&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;authorResult&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Author&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author_id&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author_username&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author_password&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;email&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author_email&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;bio&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author_bio&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- select --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectBlog&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blogResult&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  select</span></span>
<span class="line"><span style="color:#24292E;">    B.id            as blog_id,</span></span>
<span class="line"><span style="color:#24292E;">    B.title         as blog_title,</span></span>
<span class="line"><span style="color:#24292E;">    B.author_id     as blog_author_id,</span></span>
<span class="line"><span style="color:#24292E;">    A.id            as author_id,</span></span>
<span class="line"><span style="color:#24292E;">    A.username      as author_username,</span></span>
<span class="line"><span style="color:#24292E;">    A.password      as author_password,</span></span>
<span class="line"><span style="color:#24292E;">    A.email         as author_email,</span></span>
<span class="line"><span style="color:#24292E;">    A.bio           as author_bio</span></span>
<span class="line"><span style="color:#24292E;">  from Blog B left outer join Author A on B.author_id = A.id</span></span>
<span class="line"><span style="color:#24292E;">  where B.id = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>在上面的例子中，你可以看到，博客（Blog）作者（author）的关联元素委托名为“authorResult”的结果映射来加载作者对象的实例。</p><p><strong>非常重要</strong>： <code>id</code> 元素在嵌套结果映射中扮演着非常重要的角色。你应该总是指定一个或多个可以唯一标识结果的属性。虽然，即使不指定这个属性，MyBatis 仍然可以工作，但是会产生严重的性能问题。只需要指定可以唯一标识结果的最少属性。显然，你可以选择主键（复合主键也可以）。</p><p><strong>4. 关联的多结果集（ResultSet）</strong></p><p>涉及存储过程，不常用，见<a href="https://mybatis.org/mybatis-3/zh/sqlmap-xml.html#%E5%85%B3%E8%81%94%E7%9A%84%E5%A4%9A%E7%BB%93%E6%9E%9C%E9%9B%86%EF%BC%88resultset%EF%BC%89" target="_blank" rel="noreferrer">官方文档</a>。</p><p><strong>5. 映射集合</strong></p><p><code>collection</code> 标签可以表示，该属性映射一个集合的元素，通过 <code>ofType</code> 指定集合中的元素的类型，元素内部属性和 <code>resultMap</code> 一样。示例：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">collection</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;posts&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ofType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;domain.blog.Post&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;post_id&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;subject&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;post_subject&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;body&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;post_body&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">collection</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">collection</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;posts&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ofType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;domain.blog.Post&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;post_id&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;subject&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;post_subject&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;body&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;post_body&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">collection</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>集合的映射同上述 Java Bean 的映射基本一样，具体可见 <a href="https://mybatis.org/mybatis-3/zh/sqlmap-xml.html#%E9%9B%86%E5%90%88%E7%9A%84%E5%B5%8C%E5%A5%97-select-%E6%9F%A5%E8%AF%A2" target="_blank" rel="noreferrer">官方文档</a>。</p><p><strong>6. 鉴别器</strong></p><p>鉴别器的概念很好理解——它很像 Java 语言中的 switch 语句。一个鉴别器的定义需要指定 column 和 javaType 属性。column 指定了 MyBatis 查询被比较值的地方。例如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;vehicleResult&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Vehicle&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;vin&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;vin&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;year&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;year&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;make&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;make&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;model&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;model&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;color&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;color&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">discriminator</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">javaType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;int&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;vehicle_type&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;carResult&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;2&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;truckResult&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;3&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;vanResult&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;4&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;suvResult&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">discriminator</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;vehicleResult&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Vehicle&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;vin&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;vin&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;year&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;year&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;make&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;make&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;model&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;model&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;color&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;color&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">discriminator</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">javaType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;int&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;vehicle_type&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">case</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;carResult&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">case</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;2&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;truckResult&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">case</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;3&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;vanResult&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">case</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;4&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;suvResult&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">discriminator</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>在这个示例中，MyBatis 会从结果集中得到每条记录，然后比较它的 vehicle type 值。如果它匹配任意一个鉴别器的 case，就会使用这个 case 指定的结果映射。这个过程是互斥的，也就是说，剩余的结果映射将被忽略。</p><h3 id="自动映射" tabindex="-1">自动映射 <a class="header-anchor" href="#自动映射" aria-label="Permalink to &quot;自动映射&quot;">​</a></h3><p>正如你在前面一节看到的，在简单的场景下，MyBatis 可以为你自动映射查询结果。但如果遇到复杂的场景，你需要构建一个结果映射。</p><p>自动映射的工作原理：</p><ul><li><p>当自动映射查询结果时，MyBatis 会获取结果中返回的列名并在 Java 类中查找相同名字的属性（忽略大小写）。这意味着如果发现了 <em>ID</em> 列和 <em>id</em> 属性，MyBatis 会将列 <em>ID</em> 的值赋给 <em>id</em> 属性。</p></li><li><p>通常数据库列使用大写字母组成的单词命名，单词间用下划线分隔；而 Java 属性一般遵循驼峰命名法约定。为了在这两种命名方式之间启用自动映射，需要将 <code>mapUnderscoreToCamelCase</code> 设置为 true。</p></li><li><p>甚至在提供了结果映射后，自动映射也能工作。在这种情况下，对于每一个结果映射，在 ResultSet 出现的列，如果没有设置手动映射，将被自动映射。在自动映射处理完毕后，再处理手动映射。在下面的例子中，<em>id</em> 和 <em>userName</em> 列将被自动映射，<em>hashed_password</em> 列将根据配置进行映射。</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectUsers&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userResultMap&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  select</span></span>
<span class="line"><span style="color:#E1E4E8;">    user_id             as &quot;id&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    user_name           as &quot;userName&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    hashed_password</span></span>
<span class="line"><span style="color:#E1E4E8;">  from some_table</span></span>
<span class="line"><span style="color:#E1E4E8;">  where id = #{id}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;userResultMap&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;User&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">property</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">column</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;hashed_password&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">resultMap</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectUsers&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userResultMap&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  select</span></span>
<span class="line"><span style="color:#24292E;">    user_id             as &quot;id&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    user_name           as &quot;userName&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    hashed_password</span></span>
<span class="line"><span style="color:#24292E;">  from some_table</span></span>
<span class="line"><span style="color:#24292E;">  where id = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;userResultMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">result</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">column</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;hashed_password&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">resultMap</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ul><p>有三种自动映射等级，默认是 <code>PARTIAL</code>：</p><ul><li><code>NONE</code> - 禁用自动映射。仅对手动映射的属性进行映射。</li><li><code>PARTIAL</code> - 对除在内部定义了嵌套结果映射（也就是连接的属性）以外的属性进行映射</li><li><code>FULL</code> - 自动映射所有属性。</li></ul><h3 id="缓存" tabindex="-1">缓存 <a class="header-anchor" href="#缓存" aria-label="Permalink to &quot;缓存&quot;">​</a></h3><p>Mybatis 有两种缓存：</p><ul><li><p>一级缓存：又称为本地缓存，它只在 SqlSession 的生命周期中有效，同一个 SqlSession 对象，在参数和 SQL 完全一样的情况下，只执行一次 SQL 语句（前提缓存没有过期）；</p></li><li><p>二级缓存：Mybatis 的二级缓存是指 mapper 映射文件。二级缓存的作用域是同一个 namespace 下 的 mapper 映射文件内容，多个 SqlSession 共享。可以通过在 Mapper 映射文件中添加 <code>&lt;cache/&gt;</code> 开启二级缓存，此时该 Mapper 中所有方法都支持缓存。</p><p>在全局设置中，还有一个 <code>cacheEnabled</code> 配置用来全局性地开启或关闭所有映射器配置文件中已配置的任何缓存，默认为 true。</p></li></ul><p>当使用 Mybatis 查询数据时，查询的结果会先缓存到 SqlSession 中，当 SqlSession 关闭或者提交事务时，如果开启了二级缓存，则会将数据缓存到 二级缓存中；当用户调用方法查询数据时，首先会去二级缓存查找，如果有缓存则直接返回；没有再去一级缓存中查询，如果有缓存则直接返回，否则去连接数据库执行 SQL 查询。</p><blockquote><p>注意：缓存只作用于 cache 标签所在的映射文件中的语句。如果你混合使用 Java API 和 XML 映射文件，在共用接口中的语句将不会被默认缓存。你需要使用 @CacheNamespaceRef 注解指定缓存作用域。</p></blockquote><p>二级缓存的效果如下：</p><ul><li>映射语句文件中的所有 select 语句的结果将会被缓存。</li><li>映射语句文件中的所有 insert、update 和 delete 语句会刷新缓存。</li><li>缓存会使用最近最少使用算法（LRU, Least Recently Used）算法来清除不需要的缓存。</li><li>缓存不会定时进行刷新（也就是说，没有刷新间隔）。</li><li>缓存会保存列表或对象（无论查询方法返回哪种）的 1024 个引用。</li><li>缓存会被视为读/写缓存，这意味着获取到的对象并不是共享的，可以安全地被调用者修改，而不干扰其他调用者或线程所做的潜在修改。</li></ul><p><code>cache</code> 标签的属性：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">cache</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">eviction</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;FIFO&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">flushInterval</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;60000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;512&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">readOnly</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">cache</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">eviction</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;FIFO&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">flushInterval</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;60000&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;512&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">readOnly</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这个更高级的配置创建了一个 FIFO 缓存，每隔 60 秒刷新，最多可以存储结果对象或列表的 512 个引用，而且返回的对象被认为是只读的，因此对它们进行修改可能会在不同线程中的调用者产生冲突。</p><p>可用的清除策略有：</p><ul><li><code>LRU</code> – 最近最少使用：移除最长时间不被使用的对象。</li><li><code>FIFO</code> – 先进先出：按对象进入缓存的顺序来移除它们。</li><li><code>SOFT</code> – 软引用：基于垃圾回收器状态和软引用规则移除对象。</li><li><code>WEAK</code> – 弱引用：更积极地基于垃圾收集器状态和弱引用规则移除对象。</li></ul><p>默认的清除策略是 LRU。</p><p>flushInterval（刷新间隔）属性可以被设置为任意的正整数，设置的值应该是一个以毫秒为单位的合理时间量。默认情况是不设置，也就是没有刷新间隔，缓存仅仅会在调用语句时刷新。</p><p>size（引用数目）属性可以被设置为任意正整数，要注意欲缓存对象的大小和运行环境中可用的内存资源。默认值是 1024。</p><p>readOnly（只读）属性可以被设置为 true 或 false。只读的缓存会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这就提供了可观的性能提升。而可读写的缓存会（通过序列化）返回缓存对象的拷贝。速度上会慢一些，但是更安全，因此默认值是 false。</p><blockquote><p>二级缓存是事务性的。这意味着，当 SqlSession 完成并提交时，或是完成并回滚，但没有执行 flushCache=true 的 insert/delete/update 语句时，缓存会获得更新。</p></blockquote><p>Mybatis 还支持自定义缓存，关于自定义缓存或者引用另一个 Mapper 的缓存，可以见<a href="https://mybatis.org/mybatis-3/zh/sqlmap-xml.html#%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%93%E5%AD%98" target="_blank" rel="noreferrer">官方文档</a></p><h2 id="动态-sql" tabindex="-1">动态 SQL <a class="header-anchor" href="#动态-sql" aria-label="Permalink to &quot;动态 SQL&quot;">​</a></h2><p>在使用 Java 代码编写 SQL 语句时，常常需要判断参数，拼接不同的 SQL 语句，同时还要处理拼接中的空格、引号和格式化；Mybatis 提供了在 XML 中动态拼接 SQL 的标签：</p><ul><li>if</li><li>choose (when, otherwise)</li><li>trim (where, set)</li><li>foreach</li></ul><h3 id="if" tabindex="-1">if <a class="header-anchor" href="#if" aria-label="Permalink to &quot;if&quot;">​</a></h3><p>使用动态 SQL 最常见情景是根据条件包含 where 子句的一部分。比如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;findActiveBlogWithTitleLike&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#E1E4E8;">  WHERE state = ‘ACTIVE’</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;title != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    AND title like #{title}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;findActiveBlogWithTitleLike&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#24292E;">  WHERE state = ‘ACTIVE’</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;title != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    AND title like #{title}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这条语句提供了可选的查找文本功能。如果不传入“title”，那么所有处于“ACTIVE”状态的 BLOG 都会返回；如果传入了“title”参数，那么就会对“title”一列进行模糊查找并返回对应的 BLOG 结果（细心的读者可能会发现，“title”的参数值需要包含查找掩码或通配符字符）。</p><p>如果希望通过“title”和“author”两个参数进行可选搜索该怎么办呢？首先，我想先将语句名称修改成更名副其实的名称；接下来，只需要加入另一个条件即可。</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM BLOG WHERE state = ‘ACTIVE’</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;title != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    AND title like #{title}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author != null and author.name != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM BLOG WHERE state = ‘ACTIVE’</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;title != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    AND title like #{title}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author != null and author.name != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="choose、when、otherwise" tabindex="-1">choose、when、otherwise <a class="header-anchor" href="#choose、when、otherwise" aria-label="Permalink to &quot;choose、when、otherwise&quot;">​</a></h3><p>有时候，我们不想使用所有的条件，而只是想从多个条件中选择一个使用。针对这种情况，MyBatis 提供了 choose 元素，它有点像 Java 中的 switch 语句。</p><p>还是上面的例子，但是策略变为：传入了“title”就按“title”查找，传入了“author”就按“author”查找的情形。若两者都没有传入，就返回标记为 featured 的 BLOG（这可能是管理员认为，与其返回大量的无意义随机 Blog，还不如返回一些由管理员精选的 Blog）。</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM BLOG WHERE state = ‘ACTIVE’</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">choose</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">when</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;title != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      AND title like #{title}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">when</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">when</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author != null and author.name != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">when</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">otherwise</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      AND featured = 1</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">otherwise</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">choose</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM BLOG WHERE state = ‘ACTIVE’</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">choose</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">when</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;title != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      AND title like #{title}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">when</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">when</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author != null and author.name != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">when</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">otherwise</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      AND featured = 1</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">otherwise</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">choose</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="trim、where、set" tabindex="-1">trim、where、set <a class="header-anchor" href="#trim、where、set" aria-label="Permalink to &quot;trim、where、set&quot;">​</a></h3><p>前面几个例子已经方便地解决了一个臭名昭著的动态 SQL 问题。现在回到之前的“if”示例，这次我们将“state = ‘ACTIVE’”设置成动态条件，看看会发生什么。</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#E1E4E8;">  WHERE</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;state != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    state = #{state}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;title != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    AND title like #{title}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author != null and author.name != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#24292E;">  WHERE</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;state != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    state = #{state}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;title != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    AND title like #{title}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author != null and author.name != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>如果没有匹配的条件会怎么样？最终这条 SQL 会变成这样：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> BLOG</span></span>
<span class="line"><span style="color:#F97583;">WHERE</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> BLOG</span></span>
<span class="line"><span style="color:#D73A49;">WHERE</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这会导致查询失败。如果匹配的只是第二个条件又会怎样？这条 SQL 会是这样：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> BLOG</span></span>
<span class="line"><span style="color:#F97583;">WHERE</span></span>
<span class="line"><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> title </span><span style="color:#F97583;">like</span><span style="color:#E1E4E8;"> ‘someTitle’</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> BLOG</span></span>
<span class="line"><span style="color:#D73A49;">WHERE</span></span>
<span class="line"><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> title </span><span style="color:#D73A49;">like</span><span style="color:#24292E;"> ‘someTitle’</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这个查询也会失败。这个问题不能简单地用条件元素来解决。这个问题是如此的难以解决，以至于解决过的人不会再想碰到这种问题。</p><p>MyBatis 有一个简单且适合大多数场景的解决办法。而在其他场景中，可以对其进行自定义以符合需求。而这，只需要一处简单的改动：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">where</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;state != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         state = #{state}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;title != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        AND title like #{title}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author != null and author.name != null&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">where</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;findActiveBlogLike&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;state != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">         state = #{state}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;title != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        AND title like #{title}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author != null and author.name != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        AND author_name like #{author.name}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><em>where</em> 元素只会在子元素返回任何内容的情况下才插入“WHERE”子句。而且，若子句的开头为“AND”或“OR”，<em>where</em> 元素也会将它们去除。</p><p>如果 <em>where</em> 元素与你期望的不太一样，你也可以通过自定义 trim 元素来定制 <em>where</em> 元素的功能。比如，和 <em>where</em> 元素等价的自定义 trim 元素为：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">trim</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prefix</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;WHERE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prefixOverrides</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;AND |OR &quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ...</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">trim</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">trim</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prefix</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;WHERE&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prefixOverrides</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;AND |OR &quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  ...</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">trim</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>prefixOverrides</em> 属性会忽略通过管道符分隔的文本序列（注意此例中的空格是必要的）。上述例子会移除所有 <em>prefixOverrides</em> 属性中指定的内容，并且插入 <em>prefix</em> 属性中指定的内容。</p><p>用于动态更新语句的类似解决方案叫做 <em>set</em>。<em>set</em> 元素可以用于动态包含需要更新的列，忽略其它不更新的列。比如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;updateAuthorIfNecessary&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  update Author</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">set</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username != null&quot;</span><span style="color:#E1E4E8;">&gt;username=#{username},&lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password != null&quot;</span><span style="color:#E1E4E8;">&gt;password=#{password},&lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;email != null&quot;</span><span style="color:#E1E4E8;">&gt;email=#{email},&lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;bio != null&quot;</span><span style="color:#E1E4E8;">&gt;bio=#{bio}&lt;/</span><span style="color:#85E89D;">if</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">set</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  where id=#{id}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">update</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">update</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;updateAuthorIfNecessary&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  update Author</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">set</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username != null&quot;</span><span style="color:#24292E;">&gt;username=#{username},&lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password != null&quot;</span><span style="color:#24292E;">&gt;password=#{password},&lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;email != null&quot;</span><span style="color:#24292E;">&gt;email=#{email},&lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;bio != null&quot;</span><span style="color:#24292E;">&gt;bio=#{bio}&lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">set</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  where id=#{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">update</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>这个例子中，<em>set</em> 元素会动态地在行首插入 SET 关键字，并会删掉额外的逗号（这些逗号是在使用条件语句给列赋值时引入的）。</p><p>或者，你可以通过使用<em>trim</em>元素来达到同样的效果：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">trim</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prefix</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;SET&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">suffixOverrides</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ...</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">trim</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">trim</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prefix</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;SET&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">suffixOverrides</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  ...</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">trim</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>注意，我们覆盖了后缀值设置，并且自定义了前缀值。</p><h3 id="foreach" tabindex="-1">foreach <a class="header-anchor" href="#foreach" aria-label="Permalink to &quot;foreach&quot;">​</a></h3><p>动态 SQL 的另一个常见使用场景是对集合进行遍历（尤其是在构建 IN 条件语句的时候）。比如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectPostIn&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;domain.blog.Post&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT *</span></span>
<span class="line"><span style="color:#E1E4E8;">  FROM POST P</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">where</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">foreach</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">item</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;item&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;index&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">collection</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;list&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">open</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ID in (&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">separator</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;)&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">nullable</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          #{item}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">foreach</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">where</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectPostIn&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;domain.blog.Post&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT *</span></span>
<span class="line"><span style="color:#24292E;">  FROM POST P</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">foreach</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">item</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;item&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;index&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">collection</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;list&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">open</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ID in (&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">separator</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;)&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">nullable</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          #{item}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">foreach</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><em>foreach</em> 元素的功能非常强大，它允许你指定一个集合，声明可以在元素体内使用的集合项（item）和索引（index）变量。它也允许你指定开头与结尾的字符串以及集合项迭代之间的分隔符。这个元素也不会错误地添加多余的分隔符，看它多智能！</p><p><strong>提示</strong> 你可以将任何可迭代对象（如 List、Set 等）、Map 对象或者数组对象作为集合参数传递给 <em>foreach</em>。当使用可迭代对象或者数组时，index 是当前迭代的序号，item 的值是本次迭代获取到的元素。当使用 Map 对象（或者 Map.Entry 对象的集合）时，index 是键，item 是值。</p><p>至此，我们已经完成了与 XML 配置及映射文件相关的讨论。下一章将详细探讨 Java API，以便你能充分利用已经创建的映射配置。</p><h3 id="script" tabindex="-1">script <a class="header-anchor" href="#script" aria-label="Permalink to &quot;script&quot;">​</a></h3><p>要在带注解的映射器接口类中使用动态 SQL，可以使用 <em>script</em> 元素。比如：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Update</span><span style="color:#E1E4E8;">({</span><span style="color:#9ECBFF;">&quot;&lt;script&gt;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;update Author&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;  &lt;set&gt;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;    &lt;if test=&#39;username != null&#39;&gt;username=#{username},&lt;/if&gt;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;    &lt;if test=&#39;password != null&#39;&gt;password=#{password},&lt;/if&gt;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;    &lt;if test=&#39;email != null&#39;&gt;email=#{email},&lt;/if&gt;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;    &lt;if test=&#39;bio != null&#39;&gt;bio=#{bio}&lt;/if&gt;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;  &lt;/set&gt;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;where id=#{id}&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;&lt;/script&gt;&quot;</span><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateAuthorValues</span><span style="color:#E1E4E8;">(Author author);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Update</span><span style="color:#24292E;">({</span><span style="color:#032F62;">&quot;&lt;script&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;update Author&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;  &lt;set&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;    &lt;if test=&#39;username != null&#39;&gt;username=#{username},&lt;/if&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;    &lt;if test=&#39;password != null&#39;&gt;password=#{password},&lt;/if&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;    &lt;if test=&#39;email != null&#39;&gt;email=#{email},&lt;/if&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;    &lt;if test=&#39;bio != null&#39;&gt;bio=#{bio}&lt;/if&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;  &lt;/set&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;where id=#{id}&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;&lt;/script&gt;&quot;</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateAuthorValues</span><span style="color:#24292E;">(Author author);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="bind" tabindex="-1">bind <a class="header-anchor" href="#bind" aria-label="Permalink to &quot;bind&quot;">​</a></h3><p><code>bind</code> 元素允许你在 OGNL 表达式以外创建一个变量，并将其绑定到当前的上下文。比如：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectBlogsLike&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Blog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">bind</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;pattern&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;&#39;%&#39; + _parameter.getTitle() + &#39;%&#39;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#E1E4E8;">  WHERE title LIKE #{pattern}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectBlogsLike&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Blog&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">bind</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;pattern&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;&#39;%&#39; + _parameter.getTitle() + &#39;%&#39;&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  SELECT * FROM BLOG</span></span>
<span class="line"><span style="color:#24292E;">  WHERE title LIKE #{pattern}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><p><a href="https://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noreferrer">Mybatis3 官方文档</a></p>`,211),e=[o];function t(r,c,E,y,i,u){return a(),n("div",null,e)}const m=s(p,[["render",t]]);export{b as __pageData,m as default};
