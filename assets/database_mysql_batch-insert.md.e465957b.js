import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.01af844e.js";const b=JSON.parse('{"title":"Mysql 批量插入","description":"","frontmatter":{"title":"Mysql 批量插入","date":"2023-05-26T00:00:00.000Z","order":101},"headers":[],"relativePath":"database/mysql/batch-insert.md","filePath":"database/mysql/batch-insert.md","lastUpdated":1730355395000}'),p={name:"database/mysql/batch-insert.md"},o=l(`<h1 id="mysql-批量插入" tabindex="-1">Mysql 批量插入 <a class="header-anchor" href="#mysql-批量插入" aria-label="Permalink to &quot;Mysql 批量插入&quot;">​</a></h1><blockquote><p>本文探讨如何在 mysql 中批量插入大量数据，以及各种方式的性能比较。</p></blockquote><h2 id="在-mysql-中批量插入数据的几种方式" tabindex="-1">在 Mysql 中批量插入数据的几种方式 <a class="header-anchor" href="#在-mysql-中批量插入数据的几种方式" aria-label="Permalink to &quot;在 Mysql 中批量插入数据的几种方式&quot;">​</a></h2><p>我们将实验以下几种在 mysql 中批量插入数据的方式：</p><ol><li>for 循环插入</li><li>for 循环插入 + 开启事物</li><li>MybatisPlus 批量插入 <code>saveBatch()</code></li></ol><p>先说结论：</p><blockquote><p>插入速度：MybatisPlus 批量插入 <code>saveBatch()</code> &gt; for 循环插入 + 开启事物 &gt;&gt; for 循环插入</p></blockquote><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><p>首先，我们新建一个 SpringBoot 工程，添加如下依赖和配置：</p><p><code>pom.xml</code>: springboot 版本由其 <code>spring-boot-starter-parent</code> 版本决定</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependencies</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.baomidou&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;mybatis-plus-boot-starter&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;3.5.3.1&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.mysql&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;mysql-connector-j&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;runtime&lt;/</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-configuration-processor&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">optional</span><span style="color:#E1E4E8;">&gt;true&lt;/</span><span style="color:#85E89D;">optional</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.projectlombok&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;lombok&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">optional</span><span style="color:#E1E4E8;">&gt;true&lt;/</span><span style="color:#85E89D;">optional</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-test&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;test&lt;/</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;cn.hutool&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;hutool-all&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;5.8.15&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependencies</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependencies</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.baomidou&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;mybatis-plus-boot-starter&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;3.5.3.1&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.mysql&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;mysql-connector-j&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;runtime&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-configuration-processor&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">optional</span><span style="color:#24292E;">&gt;true&lt;/</span><span style="color:#22863A;">optional</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.projectlombok&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;lombok&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">optional</span><span style="color:#24292E;">&gt;true&lt;/</span><span style="color:#22863A;">optional</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-test&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;test&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;cn.hutool&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;hutool-all&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;5.8.15&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependencies</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><code>application.yml</code>: 其中的 <code>rewriteBatchedStatements=true</code> 为是否开启数据库批处理的设置，true 为开启；<code>sql/schema.sql</code> 是添加到数据库 DDL，会在启动时执行</p><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">datasource</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">driver-class-name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">jdbc:mysql://localhost:3306/daydayup?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;rewriteBatchedStatements=true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">sql</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">init</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">mode</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">always</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">schema-locations</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">classpath*:sql/schema.sql</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">datasource</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">driver-class-name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">jdbc:mysql://localhost:3306/daydayup?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;rewriteBatchedStatements=true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">sql</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">init</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">mode</span><span style="color:#24292E;">: </span><span style="color:#032F62;">always</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">schema-locations</span><span style="color:#24292E;">: </span><span style="color:#032F62;">classpath*:sql/schema.sql</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>sql/schema.sql</code>: daydayup 是创建的数据库</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">USE</span><span style="color:#E1E4E8;"> daydayup;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NOT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> ecs</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    id    </span><span style="color:#F97583;">BIGINT</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT COMMENT </span><span style="color:#9ECBFF;">&#39;主键 ID&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">VARCHAR</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NUll</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;名称&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    cpu   </span><span style="color:#F97583;">INT</span><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">NOT NUll</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;cpu 核数 (核)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    memory </span><span style="color:#F97583;">VARCHAR</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;内存大小 (G)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    create_time </span><span style="color:#F97583;">DATETIME</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NOT NUll</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> CURRENT_TIMESTAMP COMMENT </span><span style="color:#9ECBFF;">&#39;创建时间&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    create_by </span><span style="color:#F97583;">VARCHAR</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;创建人&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    tenant_id </span><span style="color:#F97583;">BIGINT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;所属租户&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (id)</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">INNODB;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">USE</span><span style="color:#24292E;"> daydayup;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NOT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> ecs</span></span>
<span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    id    </span><span style="color:#D73A49;">BIGINT</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT COMMENT </span><span style="color:#032F62;">&#39;主键 ID&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">VARCHAR</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">64</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NUll</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;名称&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    cpu   </span><span style="color:#D73A49;">INT</span><span style="color:#24292E;">     </span><span style="color:#D73A49;">NOT NUll</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;cpu 核数 (核)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    memory </span><span style="color:#D73A49;">VARCHAR</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;内存大小 (G)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    create_time </span><span style="color:#D73A49;">DATETIME</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NOT NUll</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> CURRENT_TIMESTAMP COMMENT </span><span style="color:#032F62;">&#39;创建时间&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    create_by </span><span style="color:#D73A49;">VARCHAR</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;创建人&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    tenant_id </span><span style="color:#D73A49;">BIGINT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;所属租户&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (id)</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">INNODB;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>接着，我们创建 MysqlPlus 访问数据库需要的文件，包括实体类、Service 接口和实现类、Mapper 接口：</p><p><code>Ecs</code> 实体类：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">TableName</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ecs&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ecs</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">TableId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> IdType.AUTO)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Long id;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String name;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer cpu;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer memory;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> LocalDateTime createTime;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String createBy;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Long tenantId;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">TableName</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ecs&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ecs</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">TableId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> IdType.AUTO)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Long id;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String name;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer cpu;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer memory;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> LocalDateTime createTime;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String createBy;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Long tenantId;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><code>Mapper</code> 接口：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Mapper</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EcsMapper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BaseMapper</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Ecs</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Mapper</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EcsMapper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseMapper</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Ecs</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>Service</code> 接口和实现类：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// EcsService.java</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EcsService</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IService</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Ecs</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// EcsServiceImpl.java</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Repository</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Transactional</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">rollbackFor</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Exception.class)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EcsServiceImpl</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ServiceImpl</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">EcsMapper</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Ecs</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EcsService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// EcsService.java</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EcsService</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IService</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Ecs</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// EcsServiceImpl.java</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Repository</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Transactional</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">rollbackFor</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Exception.class)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EcsServiceImpl</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ServiceImpl</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">EcsMapper</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Ecs</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EcsService</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>有了上面的 <code>EcsService</code>，我们就可以通过它调用 <code>IService</code> 封装好的针对单个表的 CRUD 基本操作了，在 <code>ServiceImpl</code> 默认实现了 <code>IService</code> 定义的 CRUD 方法，并通过泛型来约束指定的实体类型。</p><h2 id="开始测试" tabindex="-1">开始测试 <a class="header-anchor" href="#开始测试" aria-label="Permalink to &quot;开始测试&quot;">​</a></h2><p>接下来通过 Junit5 测试框架，编写通过不同方式先 mysql 批量插入数据的测试案例。</p><p>首先，先新建测试类，配置为使用 SpringBoot 测试，并引入 <code>EcsService</code> 和 <code>SqlSessionFactory</code>（主要是为了测试原生 mybatis 提交事物的方式），并提供一个构建 Ecs 测试实例的方法。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootTest</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ExtendWith</span><span style="color:#E1E4E8;">(SpringExtension.class)</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EcsServiceTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    EcsService service;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    SqlSessionFactory sqlSessionFactory;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    Ecs </span><span style="color:#B392F0;">buildEcs</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Ecs ecs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ecs</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        ecs.</span><span style="color:#B392F0;">setName</span><span style="color:#E1E4E8;">(IdUtil.</span><span style="color:#B392F0;">fastUUID</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> cpu </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> RandomUtil.</span><span style="color:#B392F0;">randomInt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        ecs.</span><span style="color:#B392F0;">setCpu</span><span style="color:#E1E4E8;">(cpu);</span></span>
<span class="line"><span style="color:#E1E4E8;">        ecs.</span><span style="color:#B392F0;">setMemory</span><span style="color:#E1E4E8;">(cpu </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        ecs.</span><span style="color:#B392F0;">setCreateTime</span><span style="color:#E1E4E8;">(LocalDateTime.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        ecs.</span><span style="color:#B392F0;">setCreateBy</span><span style="color:#E1E4E8;">(RandomUtil.</span><span style="color:#B392F0;">randomString</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">        ecs.</span><span style="color:#B392F0;">setTenantId</span><span style="color:#E1E4E8;">(RandomUtil.</span><span style="color:#B392F0;">randomLong</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ecs;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootTest</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ExtendWith</span><span style="color:#24292E;">(SpringExtension.class)</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EcsServiceTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    EcsService service;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    SqlSessionFactory sqlSessionFactory;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    Ecs </span><span style="color:#6F42C1;">buildEcs</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        Ecs ecs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ecs</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        ecs.</span><span style="color:#6F42C1;">setName</span><span style="color:#24292E;">(IdUtil.</span><span style="color:#6F42C1;">fastUUID</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> cpu </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> RandomUtil.</span><span style="color:#6F42C1;">randomInt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        ecs.</span><span style="color:#6F42C1;">setCpu</span><span style="color:#24292E;">(cpu);</span></span>
<span class="line"><span style="color:#24292E;">        ecs.</span><span style="color:#6F42C1;">setMemory</span><span style="color:#24292E;">(cpu </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        ecs.</span><span style="color:#6F42C1;">setCreateTime</span><span style="color:#24292E;">(LocalDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        ecs.</span><span style="color:#6F42C1;">setCreateBy</span><span style="color:#24292E;">(RandomUtil.</span><span style="color:#6F42C1;">randomString</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        ecs.</span><span style="color:#6F42C1;">setTenantId</span><span style="color:#24292E;">(RandomUtil.</span><span style="color:#6F42C1;">randomLong</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ecs;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>接下来就可以进入插入测试环节了。</p><h3 id="for-循环依次单个插入-无事务" tabindex="-1">For 循环依次单个插入（无事务） <a class="header-anchor" href="#for-循环依次单个插入-无事务" aria-label="Permalink to &quot;For 循环依次单个插入（无事务）&quot;">​</a></h3><p>我们通过指定不同的数据量，在 for 循环中，依次调用 <code>service.save()</code> 方法，并打印耗时（忽略 buildEcs() 的耗时）</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ParameterizedTest</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ValueSource</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ints</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">insertForeach</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> total) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> start </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> total; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        service.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">buildEcs</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> end </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(StrUtil.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;insertForeach: {}, cost time {} ms&quot;</span><span style="color:#E1E4E8;">, total, end </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> start));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ParameterizedTest</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ValueSource</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ints</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">insertForeach</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> total) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> total; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        service.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">buildEcs</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> end </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(StrUtil.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;insertForeach: {}, cost time {} ms&quot;</span><span style="color:#24292E;">, total, end </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> start));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>执行结果：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">insertForeach:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5570</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertForeach:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">25299</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertForeach:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">49449</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">insertForeach:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5570</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertForeach:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">25299</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertForeach:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">49449</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>从结果可以看出，即使是数据量如此小的情况下，所花费的时间也难以接收，主要的原因就是，每次调用 <code>service.save(buildEcs())</code> 插入数据时，都需要与数据库进行连接，大量的时间花费在了数据库连接上面，这种方式是不可取的。</p><h3 id="for-循环依次单个插入-开启事务" tabindex="-1">For 循环依次单个插入（开启事务） <a class="header-anchor" href="#for-循环依次单个插入-开启事务" aria-label="Permalink to &quot;For 循环依次单个插入（开启事务）&quot;">​</a></h3><p>在上面案例的基础上，我们关闭 sqlSession 的自动提交事务，改为在全部都插入后手动提交事务，并且提高了测试的数据量</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ParameterizedTest</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ValueSource</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ints</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">500000</span><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">insertForeachWithTransactional</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> total) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    SqlSession sqlSession </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sqlSessionFactory.</span><span style="color:#B392F0;">openSession</span><span style="color:#E1E4E8;">(ExecutorType.BATCH, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    EcsMapper mapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sqlSession.</span><span style="color:#B392F0;">getMapper</span><span style="color:#E1E4E8;">(EcsMapper.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> start </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> total; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        mapper.</span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">buildEcs</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    sqlSession.</span><span style="color:#B392F0;">commit</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    sqlSession.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> end </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(StrUtil.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;insertBatchForeach: {}, cost time {} ms&quot;</span><span style="color:#E1E4E8;">, total, end </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> start));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ParameterizedTest</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ValueSource</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ints</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">500000</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">insertForeachWithTransactional</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> total) {</span></span>
<span class="line"><span style="color:#24292E;">    SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSessionFactory.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">(ExecutorType.BATCH, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    EcsMapper mapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(EcsMapper.class);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> total; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        mapper.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">buildEcs</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    sqlSession.</span><span style="color:#6F42C1;">commit</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    sqlSession.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> end </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(StrUtil.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;insertBatchForeach: {}, cost time {} ms&quot;</span><span style="color:#24292E;">, total, end </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> start));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>执行结果：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">insertBatchForeach:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">587</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchForeach:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">50000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1426</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchForeach:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2915</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchForeach:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">500000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13910</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">insertBatchForeach:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">587</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchForeach:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">50000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1426</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchForeach:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2915</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchForeach:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13910</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>从结果可以看到，开启了事务之后，插入的速度提高了好几个量级，原因是共用了一个 SqlSession，省去对资源相关操作的耗能、减少了对事务处理的等待时间，从而极大地提高了执行效率。</p><p>但是要注意，mysql 有一个参数 <code>max_allowed_packet</code> 控制通信的 packet 大小，因此你不能总是将数据一股脑通过一次连接传输至 mysql，比较好的办法是，每 n 条数据就提交一下，分批次地插入，MybatisPlus 的 <code>saveBatch</code> 方法就是这样工作的。</p><h3 id="mybatisplus-的-savebatch-批量插入" tabindex="-1">MybatisPlus 的 <code>saveBatch</code> 批量插入 <a class="header-anchor" href="#mybatisplus-的-savebatch-批量插入" aria-label="Permalink to &quot;MybatisPlus 的 \`saveBatch\` 批量插入&quot;">​</a></h3><p>MybatisPlus 的 <code>saveBatch</code> 方法，可以指定 <code>batchSize</code>(插入批次数量) 参数，如果不指定，默认为 1000。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// com.baomidou.mybatisplus.extension.service.IService.java</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 默认批次提交数量</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> DEFAULT_BATCH_SIZE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// com.baomidou.mybatisplus.extension.service.IService.java</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 默认批次提交数量</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> DEFAULT_BATCH_SIZE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>此外，使用 <code>saveBatch</code> 方法，还有一个前提是需要开启事务，如果不开启事务，则会报如下 log 中的错误</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// com.baomidou.mybatisplus.extension.toolkit.SqlHelper.java#executeBatch()</span></span>
<span class="line"><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> transaction </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TransactionSynchronizationManager.</span><span style="color:#B392F0;">isSynchronizationActive</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">transaction) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SqlSession [&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> sqlSession </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;] Transaction not enabled&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// com.baomidou.mybatisplus.extension.toolkit.SqlHelper.java#executeBatch()</span></span>
<span class="line"><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> transaction </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TransactionSynchronizationManager.</span><span style="color:#6F42C1;">isSynchronizationActive</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">transaction) {</span></span>
<span class="line"><span style="color:#24292E;">    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SqlSession [&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> sqlSession </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;] Transaction not enabled&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>开启事务的方法是：</p><ol><li>启动类添加 <code>@EnableTransactionManagement</code> 注解；</li><li>Service 的实现类添加 <code>@Transactional(rollbackFor = Exception.class)</code> 注解。</li></ol></blockquote><p><strong>接下来我们来测试 <code>saveBatch</code> 的插入速度，我们选择和方式二同样的数据量，并使用默认的插入批次数量 1000：</strong></p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ParameterizedTest</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ValueSource</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ints</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">500000</span><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">insertBatchDefault</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> total) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">Ecs</span><span style="color:#E1E4E8;">&gt; data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> total; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        data.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">buildEcs</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> start </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    service.</span><span style="color:#B392F0;">saveBatch</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> end </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(StrUtil.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;insertBatchDefault: {}, cost time {} ms&quot;</span><span style="color:#E1E4E8;">, total, end </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> start));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ParameterizedTest</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ValueSource</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ints</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">500000</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">insertBatchDefault</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> total) {</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">Ecs</span><span style="color:#24292E;">&gt; data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> total; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        data.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">buildEcs</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    service.</span><span style="color:#6F42C1;">saveBatch</span><span style="color:#24292E;">(data);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> end </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(StrUtil.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;insertBatchDefault: {}, cost time {} ms&quot;</span><span style="color:#24292E;">, total, end </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> start));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>执行结果：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">insertBatchDefault:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">954</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchDefault:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">50000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1488</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchDefault:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2758</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchDefault:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">500000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13429</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">insertBatchDefault:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">954</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchDefault:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">50000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1488</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchDefault:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2758</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchDefault:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13429</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>可以看到，和方式二的速度差别不到，甚至略慢一点，这是因为默认每 1000 条数据就提交，相比于方式二全部一次提交自然会多一些资源的操作开销，但是可以避免因为数据量太小而被 mysql 拒绝处理的风险；当然了，我们可以手动调节这个插入批次数量，具体可依 mysql 服务器配置而调节。</p><p>比如，我将上述代码的插入批次数量从默认的 1000 改为 5000，执行结果：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">574</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">50000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1382</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2435</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">500000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12360</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">574</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">50000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1382</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2435</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12360</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>再改为 500000，执行结果：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">566</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">50000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1553</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2852</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span>
<span class="line"><span style="color:#B392F0;">insertBatchCustom:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">500000</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cost</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15672</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ms</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">566</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">50000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1553</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2852</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span>
<span class="line"><span style="color:#6F42C1;">insertBatchCustom:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500000</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cost</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15672</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>从结果可以大致看出，选择一个合适的插入批次数量，可以适当地提高插入效率。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>影响 mysql 插入性能的因素：</p><ul><li>数据库连接次数过多会极大地影响插入性能，使用事务批量提交可以有效提升性能；</li><li>数据库对于单次连接的通信包大小有限额，应当选择合适的数据量批次提交。</li></ul>`,60),e=[o];function c(t,r,E,y,i,F){return n(),a("div",null,e)}const m=s(p,[["render",c]]);export{b as __pageData,m as default};
