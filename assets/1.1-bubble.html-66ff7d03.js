const e=JSON.parse(`{"key":"v-3fe1b1d9","path":"/advance/algo/sort/1.1-bubble.html","title":"1.1 冒泡排序","lang":"zh-CN","frontmatter":{"title":"1.1 冒泡排序","category":"算法","tag":["排序算法"],"date":"2022-09-27T00:00:00.000Z","description":"简介 冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。 这个算法的名字由来是因为越小的元素会经由交换慢慢\\"浮\\"到数列的顶端。 排序步骤 从头遍历数列，从前往后依次的比较相邻两个数的大小，如果前者比后者大，则交换它们的位置，遍历一次后，可最大的元素就在数列的末尾； 重复上述操作，每一次遍历可以得到子数列的最大值放到该子数列的末尾，直到整个数列都有序为止。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/sort/1.1-bubble.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"1.1 冒泡排序"}],["meta",{"property":"og:description","content":"简介 冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。 这个算法的名字由来是因为越小的元素会经由交换慢慢\\"浮\\"到数列的顶端。 排序步骤 从头遍历数列，从前往后依次的比较相邻两个数的大小，如果前者比后者大，则交换它们的位置，遍历一次后，可最大的元素就在数列的末尾； 重复上述操作，每一次遍历可以得到子数列的最大值放到该子数列的末尾，直到整个数列都有序为止。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-05T18:24:42.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2022-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-05T18:24:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.1 冒泡排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-05T18:24:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"排序步骤","slug":"排序步骤","link":"#排序步骤","children":[]},{"level":2,"title":"演示动画","slug":"演示动画","link":"#演示动画","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"复杂度分析","slug":"复杂度分析","link":"#复杂度分析","children":[]}],"git":{"createdTime":1680719082000,"updatedTime":1680719082000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":1.65,"words":495},"filePathRelative":"advance/algo/sort/1.1-bubble.md","localizedDate":"2022年9月27日","excerpt":"<h2> 简介</h2>\\n<p>冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。</p>\\n<p>这个算法的名字由来是因为越小的元素会经由交换慢慢\\"浮\\"到数列的顶端。</p>\\n<h2> 排序步骤</h2>\\n<ol>\\n<li>从头遍历数列，从前往后依次的<strong>比较相邻两个数的大小</strong>，如果前者比后者大，则交换它们的位置，遍历一次后，可最大的元素就在数列的末尾；</li>\\n<li>重复上述操作，每一次遍历可以得到子数列的最大值放到该子数列的末尾，直到整个数列都有序为止。</li>\\n</ol>","autoDesc":true}`);export{e as data};
