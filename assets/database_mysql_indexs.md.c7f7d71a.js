import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.01af844e.js";const b=JSON.parse('{"title":"Mysql 索引","description":"","frontmatter":{"title":"Mysql 索引","date":"2023-05-28T00:00:00.000Z","order":3},"headers":[],"relativePath":"database/mysql/indexs.md","filePath":"database/mysql/indexs.md","lastUpdated":1730355395000}'),p={name:"database/mysql/indexs.md"},o=l(`<h1 id="mysql-索引" tabindex="-1">Mysql 索引 <a class="header-anchor" href="#mysql-索引" aria-label="Permalink to &quot;Mysql 索引&quot;">​</a></h1><p>本文将会从以下几个方面来讲述索引的相关知识：</p><ul><li>什么是索引，索引的作用</li><li>索引的种类</li><li>高性能索引策略</li><li>索引设计准则：三星索引</li></ul><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>生产上为了高效地查询数据库中的数据，我们常常会给表中的字段添加索引，大家是否有考虑过如何添加索引才能使索引更高效，考虑如下问题：</p><ul><li>添加的索引是越多越好吗</li><li>为啥有时候明明添加了索引却不生效</li><li>索引有哪些类型</li><li>如何评判一个索引设计的好坏</li></ul><h2 id="什么是索引-索引的作用" tabindex="-1">什么是索引，索引的作用 <a class="header-anchor" href="#什么是索引-索引的作用" aria-label="Permalink to &quot;什么是索引，索引的作用&quot;">​</a></h2><blockquote><p>在关系数据库中，<strong>索引</strong>是一种单独的、物理的对数据库表中一列或多列的值进行排序的一种存储结构，它是某个表中一列或若干列值的集合和相应的指向表中物理标识这些值的数据页的逻辑指针清单。</p></blockquote><p><strong>索引主要有以下几个作用：</strong></p><ul><li>索引可以定位到要读取的页，大大减少了需要扫描的行数，能极大的提升效率</li><li>索引可以帮助服务器避免排序和临时表</li><li>索引可以将随机 IO 变成顺序 IO</li></ul><h3 id="快速定位数据页" tabindex="-1">快速定位数据页 <a class="header-anchor" href="#快速定位数据页" aria-label="Permalink to &quot;快速定位数据页&quot;">​</a></h3><p>这个很好理解，索引的作用相当于图书的目录，可以根据目录中的页码快速找到所需的内容。</p><p>如果没有索引，那么我们需要扫码全表的数据进行匹配；而加了索引之后，可以通过索引找到数据存储的页，大大减少查询时间。</p><h3 id="避免排序和临时表" tabindex="-1">避免排序和临时表 <a class="header-anchor" href="#避免排序和临时表" aria-label="Permalink to &quot;避免排序和临时表&quot;">​</a></h3><p>假设我们不用索引，试想运行如下语句</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> user </span><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> age </span><span style="color:#F97583;">desc</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">desc</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>则 MySQL 的流程是这样的，扫描所有行，把所有行加载到内存后，再按 age 排序生成一张临时表，再把这表排序后将相应行返回给客户端，更糟的，如果这张临时表的大小大于 tmp_table_size 的值（默认为 16 M），内存临时表会转为磁盘临时表，性能会更差;</p><p>如果加了索引，索引本身是有序的，所以从磁盘读的行数本身就是按 age 排序好的，也就不会生成临时表，就不用再额外排序，无疑提升了性能。</p><h3 id="随机-io-变成顺序-io" tabindex="-1">随机 IO 变成顺序 IO <a class="header-anchor" href="#随机-io-变成顺序-io" aria-label="Permalink to &quot;随机 IO 变成顺序 IO&quot;">​</a></h3><p>相信不少人应该吃过旋转火锅，服务员把一盘盘的菜放在旋转传输带上，然后等到这些菜转到我们面前，我们就可以拿到菜了，假设装一圈需要 4 分钟，则最短等待时间是 0（即菜就在你跟前），最长等待时间是 4 分钟（菜刚好在你跟前错过），那么平均等待时间即为 2 分钟，假设我们现在要拿四盘菜，这四盘菜随机分配在传输带上，则可知拿到这四盘菜的平均等待时间是 8 分钟（随机 IO），如果这四盘菜刚好紧邻着排在一起，则等待时间只需 2 分钟（顺序 IO）。</p><p>上述中传输带就类比磁道，磁道上的菜就类比扇区（sector）中的信息，磁盘块（block）是由多个相邻的扇区组成的，是操作系统读取的最小单元，这样如果信息能以 block 的形式聚集在一起，就能极大减少磁盘 IO 时间，这就是顺序 IO 带来的性能提升，下文中我们将会看到 B+ 树索引就起到这样的作用。</p><p>而如果信息在一个磁道中分散地分布在各个扇区中，或者分布在不同磁道的扇区上（寻道时间是随机 IO 主要瓶颈所在），将会造成随机 IO，影响性能。</p><h2 id="索引的种类和概念" tabindex="-1">索引的种类和概念 <a class="header-anchor" href="#索引的种类和概念" aria-label="Permalink to &quot;索引的种类和概念&quot;">​</a></h2><p>索引从存储结构上来分主要分为以下几类：</p><ul><li>B+ 树索引</li><li>哈希索引</li><li>全文索引 (不常用)</li><li>空间数据索引 (不常用)</li></ul><p>从应用层次来分：普通索引，唯一索引，复合索引。</p><ul><li>普通索引：即一个索引只包含单个列，一个表可以有多个单列索引</li><li>唯一索引：索引列的值必须唯一，但允许有空值</li><li>复合索引：多列值组成一个索引，专门用于组合搜索，其效率大于索引合并</li></ul><h3 id="b-树索引" tabindex="-1">B+ 树索引 <a class="header-anchor" href="#b-树索引" aria-label="Permalink to &quot;B+ 树索引&quot;">​</a></h3><p><strong>B-Tree</strong> 指的是 Balance Tree，也就是平衡树。平衡树是一颗查找树，并且所有叶子节点位于同一层。</p><p>B-Tree 能加快数据的访问速度，因为存储引擎不再需要进行全表扫描来获取数据，数据分布在各个节点之中。</p><p><img src="https://cdn.jsdelivr.net/gh/AlexChen68/OSS@master/blog/database/b-tree.png" alt="b-tree.png"></p><p><strong>B+Tree</strong> 是在 B-Tree 的基础上进行改进的一种数据结构，同时也是数据库索引索引所采用的存储结构。</p><p>在 B-Tree 中，你可以将键和值存放在内部节点和叶子节点；但在 B+Tree 中，数据都在叶子节点上，并且增加了顺序访问指针，每个叶子节点都指向相邻的叶子节点的地址。</p><p>相比 B-Tree 来说，进行范围查找时只需要查找两个节点，进行遍历即可。而 B-Tree 需要获取所有节点，相比之下 B+Tree 效率更高。</p><p><img src="https://cdn.jsdelivr.net/gh/AlexChen68/OSS@master/blog/database/b+tree.png" alt="b+tree.png"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>为什么使用 B+Tree，而不是 B-Tree</p><ul><li><p>B+ 树的磁盘读写代价更低：B+ 树的内部节点并没有指向关键字具体信息的指针，因此其内部节点相对 B 树更小，如果把所有同一内部节点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多，一次性读入内存的需要查找的关键字也就越多，相对 IO 读写次数就降低了。</p></li><li><p>由于 B+ 树的数据都存储在叶子结点中，分支结点均为索引，方便扫库，只需要扫一遍叶子结点即可，但是 B 树因为其分支结点同样存储着数据，我们要找到具体的数据，需要进行一次中序遍历按序来扫，所以 B+ 树更加适合在区间查询的情况，所以通常 B+ 树用于数据库索引。</p></li></ul></div><h3 id="哈希索引" tabindex="-1">哈希索引 <a class="header-anchor" href="#哈希索引" aria-label="Permalink to &quot;哈希索引&quot;">​</a></h3><p>基于哈希表实现，只有精确匹配索引所有列的查询才有效，对于每一行数据，存储引擎都会对所有的索引列计算一个哈希码（hash code），并且 Hash 索引将所有的哈希码存储在索引中，同时在索引表中保存指向每个数据行的指针。</p><p><img src="https://cdn.jsdelivr.net/gh/AlexChen68/OSS@master/blog/database/hash_index.png" alt="hash_index.png"></p><h3 id="覆盖索引" tabindex="-1">覆盖索引 <a class="header-anchor" href="#覆盖索引" aria-label="Permalink to &quot;覆盖索引&quot;">​</a></h3><p>覆盖索引是指 select 的数据列只用从索引中就能够取得，不必读取数据行，换句话说查询列要被所建的索引覆盖。</p><h3 id="主键索引和二级索引-辅助索引" tabindex="-1">主键索引和二级索引（辅助索引） <a class="header-anchor" href="#主键索引和二级索引-辅助索引" aria-label="Permalink to &quot;主键索引和二级索引（辅助索引）&quot;">​</a></h3><p><strong>主键索引</strong>是 InnoDB 存储引擎默认给我们创建的一套索引结构，我们表里的数据也是直接放在主键索引里，作为叶子节点的数据页。</p><p>但我们在开发的过程中，往往会根据业务需要在不同的字段上建立索引，这些索引就是<strong>二级索引</strong>，也叫<strong>辅助索引</strong>，而且是<strong>非聚集索引</strong>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>主键索引 == 聚集索引 == 聚簇索引。</p><p>普通索引 == 非聚集索引 == 辅助索引 == 二级索引。(o_o... ...)</p></div><h3 id="聚簇索引与非聚簇索引" tabindex="-1">聚簇索引与非聚簇索引 <a class="header-anchor" href="#聚簇索引与非聚簇索引" aria-label="Permalink to &quot;聚簇索引与非聚簇索引&quot;">​</a></h3><p>根据中数据的物理顺序与键值的逻辑（索引）顺序关系：聚簇索引，非聚簇索引</p><ul><li>聚簇索引 (聚集索引)：并不是一种单独的索引类型，而是一种数据存储方式。具体细节取决于不同的实现，InnoDB 的聚簇索引其实就是在同一个结构中保存了 B Tree 索引 (技术上来说是 B+ Tree ) 和数据行。</li><li>非聚簇索引：不是聚簇索引，就是非聚簇索引</li></ul><p>聚簇索引与非聚簇索引的区别：</p><ul><li>非聚集索引与聚集索引的区别在于非聚集索引的叶子节点不存储表中的数据，而是存储该列对应的主键（行号）;聚集索引会存储一行完整的数据。</li><li>对于 InnoDB 来说，想要查找数据我们还需要根据主键再去聚集索引中进行查找，这个再根据聚集索引查找数据的过程，我们称为回表。第一次索引一般是顺序 IO，回表的操作属于随机 IO。需要回表的次数越多，即随机 IO 次数越多，我们就越倾向于使用全表扫描。</li><li>通常情况下，主键索引（聚簇索引）查询只会查一次，而非主键索引（非聚簇索引）需要回表查询多次。当然，如果是覆盖索引的话，查一次即可。</li><li>注意：MyISAM 无论主键索引还是二级索引都是非聚簇索引，而 InnoDB 的主键索引是聚簇索引，二级索引是非聚簇索引。我们自己建的索引基本都是非聚簇索引。</li></ul><p>可以参考这篇文章：<a href="https://zhuanlan.zhihu.com/p/512662526" target="_blank" rel="noreferrer">什么是 MySQL 的“回表”？</a></p><h2 id="索引操作" tabindex="-1">索引操作 <a class="header-anchor" href="#索引操作" aria-label="Permalink to &quot;索引操作&quot;">​</a></h2><h3 id="索引创建方式" tabindex="-1">索引创建方式 <a class="header-anchor" href="#索引创建方式" aria-label="Permalink to &quot;索引创建方式&quot;">​</a></h3><p>mysql 中创建索引有两种方式：</p><ol><li>在创建表的时候创建索引；</li><li>在表创建完成后，通过 <code>CREATE INDEX</code> 语法创建索引。</li></ol><p>使用 <code>CREATE INDEX</code> 创建索引的语法：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> [UNIQUE | FULLTEXT | SPATIAL] </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> index_name</span></span>
<span class="line"><span style="color:#E1E4E8;">    [index_type]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">ON</span><span style="color:#E1E4E8;"> tbl_name (key_part,...)</span></span>
<span class="line"><span style="color:#E1E4E8;">    [index_option]</span></span>
<span class="line"><span style="color:#E1E4E8;">    [algorithm_option | lock_option] ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">key_part: {col_name [(length)] | (expr)} [ASC | DESC]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">index_option:</span></span>
<span class="line"><span style="color:#E1E4E8;">    KEY_BLOCK_SIZE [=] </span><span style="color:#F97583;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">  | index_type</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#F97583;">WITH</span><span style="color:#E1E4E8;"> PARSER parser_name</span></span>
<span class="line"><span style="color:#E1E4E8;">  | COMMENT </span><span style="color:#9ECBFF;">&#39;string&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  | {VISIBLE | INVISIBLE}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">index_type:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> {BTREE | </span><span style="color:#F97583;">HASH</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">algorithm_option:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">ALGORITHM</span><span style="color:#E1E4E8;"> [=] {</span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> | INPLACE | </span><span style="color:#F97583;">COPY</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">lock_option:</span></span>
<span class="line"><span style="color:#E1E4E8;">    LOCK [=] {</span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> | </span><span style="color:#F97583;">NONE</span><span style="color:#E1E4E8;"> | SHARED | EXCLUSIVE}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> [UNIQUE | FULLTEXT | SPATIAL] </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> index_name</span></span>
<span class="line"><span style="color:#24292E;">    [index_type]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">ON</span><span style="color:#24292E;"> tbl_name (key_part,...)</span></span>
<span class="line"><span style="color:#24292E;">    [index_option]</span></span>
<span class="line"><span style="color:#24292E;">    [algorithm_option | lock_option] ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">key_part: {col_name [(length)] | (expr)} [ASC | DESC]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">index_option:</span></span>
<span class="line"><span style="color:#24292E;">    KEY_BLOCK_SIZE [=] </span><span style="color:#D73A49;">value</span></span>
<span class="line"><span style="color:#24292E;">  | index_type</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#D73A49;">WITH</span><span style="color:#24292E;"> PARSER parser_name</span></span>
<span class="line"><span style="color:#24292E;">  | COMMENT </span><span style="color:#032F62;">&#39;string&#39;</span></span>
<span class="line"><span style="color:#24292E;">  | {VISIBLE | INVISIBLE}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">index_type:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> {BTREE | </span><span style="color:#D73A49;">HASH</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">algorithm_option:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">ALGORITHM</span><span style="color:#24292E;"> [=] {</span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> | INPLACE | </span><span style="color:#D73A49;">COPY</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">lock_option:</span></span>
<span class="line"><span style="color:#24292E;">    LOCK [=] {</span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> | </span><span style="color:#D73A49;">NONE</span><span style="color:#24292E;"> | SHARED | EXCLUSIVE}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>可参考 <a href="https://dev.mysql.com/doc/refman/8.0/en/create-index.html" target="_blank" rel="noreferrer">Mysql8 官方文档</a> 或者 <a href="https://www.lanmper.cn/mysql/t7798" target="_blank" rel="noreferrer">第三方中文版</a></p><h3 id="主键索引" tabindex="-1">主键索引 <a class="header-anchor" href="#主键索引" aria-label="Permalink to &quot;主键索引&quot;">​</a></h3><p>主键索引可以通过两种方式创建的示例如下：</p><ul><li>通过在字段后面添加 <code>primary key</code> 关键字指定为主键</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    id </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">primary key</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    id </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">primary key</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>或者在字段命名最后，通过 <code>primary key (column_name)</code> 指定主键字段</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    id </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">primary key</span><span style="color:#E1E4E8;"> (id)</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    id </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">primary key</span><span style="color:#24292E;"> (id)</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="唯一索引" tabindex="-1">唯一索引 <a class="header-anchor" href="#唯一索引" aria-label="Permalink to &quot;唯一索引&quot;">​</a></h3><p>唯一索引的列值不可以重复；唯一索引通过 <code>UNIQUE INDEX</code> 关键字标识，可以在建表时创建后建表后单独创建</p><p>::: tabs</p><p>@tab 建表时创建索引</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    id </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">UNIQUE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> uniq_name (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">) comment </span><span style="color:#9ECBFF;">&#39;名称唯一索引&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    id </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">UNIQUE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> uniq_name (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;名称唯一索引&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>也可以使用 <code>constraint</code> 关键字：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    id   </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">constraint</span><span style="color:#E1E4E8;"> uniq_name</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">unique</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">) comment </span><span style="color:#9ECBFF;">&#39;名称唯一索引&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span></span>
<span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    id   </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constraint</span><span style="color:#24292E;"> uniq_name</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">unique</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;名称唯一索引&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>@tab 单独创建</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    id </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">UNIQUE INDEX</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">uniq_name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">) comment </span><span style="color:#9ECBFF;">&#39;名称唯一索引&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    id </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">UNIQUE INDEX</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">uniq_name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;名称唯一索引&#39;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>或者使用 <code>ALTER TABLE</code> 语法添加唯一索引</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    id   </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> test</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">UNIQUE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> uniq_name (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">) comment </span><span style="color:#9ECBFF;">&#39;名称唯一索引&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span></span>
<span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    id   </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">ALTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> test</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">add</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">UNIQUE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> uniq_name (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;名称唯一索引&#39;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>:::</p><h3 id="普通索引和复合索引" tabindex="-1">普通索引和复合索引 <a class="header-anchor" href="#普通索引和复合索引" aria-label="Permalink to &quot;普通索引和复合索引&quot;">​</a></h3><p>如果我们对列的唯一性没有要求，那么创建普通索引就行，区别就是少了 <code>UNIQUE</code> 关键字；</p><p>另外，如果 where 条件中使用到多个字段，并且需要对多个字段建立索引，此时就可以考虑采用复合索引（在括号同时填入多个字段名称即可）。</p><p>组合索引有啥优势呢？</p><ul><li>减少查询开销：建立复合索引（c1,c2,c3），实际上相当于建立了（c1）,（c1,c2）,（c1,c2,c3）三个索引。对于大表来说，可以极大减少开销。</li><li>覆盖索引：MySQL 可以直接通过遍历索引取得数据，而无需回表，减少了很多的随机 io 操作。</li><li>效率高：索引列越多，通过索引筛选出来的数据就越少，从而提升查询效率。</li></ul><p>缺点：</p><ul><li>索引字段越多，创建的索引越多，每个索引都会增加磁盘空间的开销；</li><li>索引越多对查询效率提升越高，但对需要更新索引的增删改操作会有效率影响；</li></ul><div class="tip custom-block"><p class="custom-block-title">复合索引使用建议</p><p>单表最好不要超过 1 个复合索引，单个复合索引最好不超过 3 个字段。一旦超过，就需要考虑必要性和是否有其他替代方案。</p></div><p>复合索引的创建：</p><p>::: tabs</p><p>@tab 建表时创建索引</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    id    </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    email </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;邮箱&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    phone </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;手机号码&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> comp (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">, email, phone) comment </span><span style="color:#9ECBFF;">&#39;复合索引&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span></span>
<span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    id    </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    email </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;邮箱&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    phone </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;手机号码&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> comp (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, email, phone) comment </span><span style="color:#032F62;">&#39;复合索引&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>@tab 单独创建</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    id    </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    email </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;邮箱&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    phone </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;手机号码&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">comp</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">, email, phone)</span></span>
<span class="line"><span style="color:#E1E4E8;">    comment </span><span style="color:#9ECBFF;">&#39;复合索引&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span></span>
<span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    id    </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    email </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;邮箱&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    phone </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;手机号码&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">index</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">comp</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, email, phone)</span></span>
<span class="line"><span style="color:#24292E;">    comment </span><span style="color:#032F62;">&#39;复合索引&#39;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>或者使用 <code>ALTER TABLE</code></p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    id    </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;名称&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    email </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;邮箱&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    phone </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> comment </span><span style="color:#9ECBFF;">&#39;手机号码&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;"> test</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> comp (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">, email, phone) comment </span><span style="color:#9ECBFF;">&#39;复合索引&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span></span>
<span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    id    </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;名称&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    email </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;邮箱&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    phone </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;手机号码&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">ALTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> test</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">add</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> comp (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, email, phone) comment </span><span style="color:#032F62;">&#39;复合索引&#39;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>:::</p><h2 id="索引使用注意事项" tabindex="-1">索引使用注意事项 <a class="header-anchor" href="#索引使用注意事项" aria-label="Permalink to &quot;索引使用注意事项&quot;">​</a></h2><p>同的索引设计选择能对性能产生很大的影响，有人可能会发现生产中明明加了索引却不生效，有时候加了虽然生效但对搜索性能并没有提升多少，对于多列联合索引，哪列在前，哪列在后也是有讲究的，我们一起来看看。</p><h3 id="索引失效" tabindex="-1">索引失效 <a class="header-anchor" href="#索引失效" aria-label="Permalink to &quot;索引失效&quot;">​</a></h3><p>索引失效有以下几种可能：</p><ol><li>在进行查询时，索引列不能是表达式的一部分，也不能是函数的参数，否则无法使用索引。</li></ol><p>反例：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> book_id </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> BOOK </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> book_id </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 或者</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> book_id </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> BOOK </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> TO_DAYS(CURRENT_DATE) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> TO_DAYS(gmt_create) </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> book_id </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> BOOK </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> book_id </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 或者</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> book_id </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> BOOK </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> TO_DAYS(CURRENT_DATE) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> TO_DAYS(gmt_create) </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>隐式类型转换</li></ol><p>反例：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> tradelog </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> tradeid</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">110717</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> tradelog </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> tradeid</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">110717</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在表结构中，tradid 为字符串类型，但是查询条件是 int 值，发生了隐形转换，会隐式地将字符串转成整型，如下：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> tradelog </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CAST</span><span style="color:#E1E4E8;">(tradid </span><span style="color:#F97583;">AS</span><span style="color:#E1E4E8;"> signed </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">110717</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> tradelog </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CAST</span><span style="color:#24292E;">(tradid </span><span style="color:#D73A49;">AS</span><span style="color:#24292E;"> signed </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">110717</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样也是发生了函数转换，不会走索引。</p><ol start="3"><li>隐式编码转换</li></ol><p>两个表联结时，联结的字段在两个表中的编码不一样，就会通过 <code>CONVERT()</code> 函数自动转换，同样使用了函数，不会走索引。</p><ol start="4"><li>非聚簇索引的回表查询太慢导致使用全表扫描</li></ol><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> user </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> age </span><span style="color:#F97583;">DESC</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">DESC</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>age 虽然添加了索引，但是依然造成了全表扫描，这是因为我们使用了 <code>SELECT *</code>，导致回表查询，MySQL 认为回表的代价比全表扫描更大，所以不选择使用索引，如果想使用到 age 的索引，我们可以用<strong>覆盖索引</strong>来代替：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> age </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> user </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> age </span><span style="color:#F97583;">DESC</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">DESC</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者加上 limit 的条件（数据比较小，回表查询很快）</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> user </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> age </span><span style="color:#F97583;">DESC</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">limit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">DESC</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">limit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="必须用函数时怎么使用索引" tabindex="-1">必须用函数时怎么使用索引 <a class="header-anchor" href="#必须用函数时怎么使用索引" aria-label="Permalink to &quot;必须用函数时怎么使用索引&quot;">​</a></h3><p>可以通过将函数修改为多个普通条件拼接。例如：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> tradelog </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">month</span><span style="color:#E1E4E8;">(t_modified)</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">count</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> tradelog </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">month</span><span style="color:#24292E;">(t_modified)</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>可以修改为：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> tradelog </span><span style="color:#F97583;">WHERE</span></span>
<span class="line"><span style="color:#E1E4E8;">    (t_modified </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;2016-7-1&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> t_modified</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">&#39;2016-8-1&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">or</span></span>
<span class="line"><span style="color:#E1E4E8;">    (t_modified </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;2017-7-1&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> t_modified</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">&#39;2017-8-1&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    (t_modified </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;2018-7-1&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> t_modified</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">&#39;2018-8-1&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">count</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> tradelog </span><span style="color:#D73A49;">WHERE</span></span>
<span class="line"><span style="color:#24292E;">    (t_modified </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;2016-7-1&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> t_modified</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">&#39;2016-8-1&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">or</span></span>
<span class="line"><span style="color:#24292E;">    (t_modified </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;2017-7-1&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> t_modified</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">&#39;2017-8-1&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    (t_modified </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;2018-7-1&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> t_modified</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">&#39;2018-8-1&#39;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="前缀索引与索引选择性" tabindex="-1">前缀索引与索引选择性 <a class="header-anchor" href="#前缀索引与索引选择性" aria-label="Permalink to &quot;前缀索引与索引选择性&quot;">​</a></h3><p>对于长字符串的字段（如 url），我们可以用伪哈希索引的形式来创建索引，以避免索引变得既大又慢，除此之外其实还可以用前缀索引（字符串的部分字符）的形式来达到我们的目的，那么这个前缀索引应该如何选取呢，这叫涉及到一个叫索引选择性的概念</p><blockquote><p>索引选择性：不重复的索引值（也称为基数，cardinality）和数据表的记录总数的比值，比值越高，代表索引的选择性越好，唯一索引的选择性是最好的，比值是 1。</p></blockquote><p>我们可以通过 <code>SHOW INDEXES FROM table</code> 来查看每个索引 <code>cardinality</code> 的值以评估索引设计的合理性。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://blog.csdn.net/weixin_41385912/article/details/120500237" target="_blank" rel="noreferrer">MySQL 索引连环 18 问！</a></li><li><a href="https://www.cnblogs.com/jiahongwu/p/bTree.html" target="_blank" rel="noreferrer">常见的二叉树</a></li><li><a href="https://zhuanlan.zhihu.com/p/512662526" target="_blank" rel="noreferrer">什么是 MySQL 的“回表”？</a></li></ul>`,125),e=[o];function c(r,t,E,y,i,d){return n(),a("div",null,e)}const u=s(p,[["render",c]]);export{b as __pageData,u as default};
