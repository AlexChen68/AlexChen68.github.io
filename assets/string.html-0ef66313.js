const t=JSON.parse(`{"key":"v-116bca93","path":"/java/basic/string.html","title":"Java String 详解","lang":"zh-CN","frontmatter":{"title":"Java String 详解","order":3,"date":"2022-09-15T00:00:00.000Z","category":"Java","tag":"String","description":"String 概述 String 内部使用字符数组实现，且 String 被声明为 final，不可以被继承，这意味着 value 数组初始化之后就不能再引用其它数组。并且 String 内部没有改变 value 数组的方法，因此可以保证 String 不可变。 当我们调用 String 类的任何方法（比如说 trim()、substring()、toLowerCase()）时，总会返回一个新的对象，而不影响之前的值。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/java/basic/string.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"Java String 详解"}],["meta",{"property":"og:description","content":"String 概述 String 内部使用字符数组实现，且 String 被声明为 final，不可以被继承，这意味着 value 数组初始化之后就不能再引用其它数组。并且 String 内部没有改变 value 数组的方法，因此可以保证 String 不可变。 当我们调用 String 类的任何方法（比如说 trim()、substring()、toLowerCase()）时，总会返回一个新的对象，而不影响之前的值。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-13T11:38:25.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:tag","content":"String"}],["meta",{"property":"article:published_time","content":"2022-09-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-13T11:38:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java String 详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-13T11:38:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"String 概述","slug":"string-概述","link":"#string-概述","children":[]},{"level":2,"title":"String 家族对比","slug":"string-家族对比","link":"#string-家族对比","children":[]},{"level":2,"title":"String.intern()","slug":"string-intern","link":"#string-intern","children":[]},{"level":2,"title":"String Pool 字符串常量池","slug":"string-pool-字符串常量池","link":"#string-pool-字符串常量池","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1680340044000,"updatedTime":1681385905000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1},{"name":"alexchen68","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":2.87,"words":862},"filePathRelative":"java/basic/string.md","localizedDate":"2022年9月15日","excerpt":"<h2> String 概述</h2>\\n<p>String 内部使用<strong>字符数组</strong>实现，且 String 被声明为 <code>final</code>，不可以被继承，这意味着 value 数组初始化之后就不能再引用其它数组。并且 String 内部没有改变 value 数组的方法，因此可以保证 String 不可变。</p>\\n<p>当我们调用 String 类的任何方法（比如说 <code>trim()</code>、<code>substring()</code>、<code>toLowerCase()</code>）时，总会返回一个新的对象，而不影响之前的值。</p>","autoDesc":true}`);export{t as data};
