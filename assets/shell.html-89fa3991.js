const e=JSON.parse(`{"key":"v-98d43e38","path":"/advance/algo/sort/shell.html","title":"希尔排序","lang":"zh-CN","frontmatter":{"title":"希尔排序","category":"算法","tag":["排序算法"],"date":"2023-04-03T00:00:00.000Z","description":"希尔排序 希尔排序是针对直接插入排序的优化。 希尔排序实质上是一种分组插入方法。其排序步骤： 对于 n 个待排序的数列，取一个小于 n 的整数 gap(gap 被称为步长) 将待排序元素分成若干个组子序列，所有距离为 gap 的倍数的记录放在同一个组中； 然后，对各组内的元素进行直接插入排序；这一趟排序完成之后，每一个组的元素都是有序的。 减小 gap 的值，并重复执行上述的分组和排序。 当 gap 的值减少到等于 1 时，整个数组就是有序的了。 演示动画","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/sort/shell.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"希尔排序"}],["meta",{"property":"og:description","content":"希尔排序 希尔排序是针对直接插入排序的优化。 希尔排序实质上是一种分组插入方法。其排序步骤： 对于 n 个待排序的数列，取一个小于 n 的整数 gap(gap 被称为步长) 将待排序元素分成若干个组子序列，所有距离为 gap 的倍数的记录放在同一个组中； 然后，对各组内的元素进行直接插入排序；这一趟排序完成之后，每一个组的元素都是有序的。 减小 gap 的值，并重复执行上述的分组和排序。 当 gap 的值减少到等于 1 时，整个数组就是有序的了。 演示动画"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-02T17:16:52.000Z"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2023-04-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-02T17:16:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"希尔排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-02T17:16:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"希尔排序","slug":"希尔排序","link":"#希尔排序","children":[]},{"level":2,"title":"演示动画","slug":"演示动画","link":"#演示动画","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"复杂度分析","slug":"复杂度分析","link":"#复杂度分析","children":[]}],"git":{"createdTime":1680455812000,"updatedTime":1680455812000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":1.19,"words":358},"filePathRelative":"advance/algo/sort/shell.md","localizedDate":"2023年4月3日","excerpt":"<h2> 希尔排序 </h2>\\n<p>希尔排序是针对直接插入排序的优化。</p>\\n<p>希尔排序实质上是一种分组插入方法。其排序步骤：</p>\\n<ol>\\n<li>对于 n 个待排序的数列，取一个小于 n 的整数 gap(gap 被称为步长) 将待排序元素分成若干个组子序列，所有距离为 gap 的倍数的记录放在同一个组中；</li>\\n<li>然后，对各组内的元素进行直接插入排序；这一趟排序完成之后，每一个组的元素都是有序的。</li>\\n<li>减小 gap 的值，并重复执行上述的分组和排序。</li>\\n<li>当 gap 的值减少到等于 1 时，整个数组就是有序的了。</li>\\n</ol>\\n<h2> 演示动画</h2>","autoDesc":true}`);export{e as data};
