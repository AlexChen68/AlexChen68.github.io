const e=JSON.parse(`{"key":"v-f22ce1c8","path":"/advance/ds/1.5-stack-queue.html","title":"线性表 - 栈和队列","lang":"zh-CN","frontmatter":{"title":"线性表 - 栈和队列","category":"数据结构","date":"2023-04-01T00:00:00.000Z","description":"栈和队列概述 栈：先入后出（LIFO） 队列：先入先出（FIFO） 栈和队列是以底层容器完成其所有的工作，对外提供统一的接口，底层容器是可插拔的（也就是说我们可以控制使用哪种容器来实现栈和队列的功能）。 Java 里有一个叫做 Stack 的类，却没有叫做 Queue 的类 (它是个接口名字)。当需要使用栈时，Java 已不推荐使用 Stack，而是推荐使用更高效的 ArrayDeque；既然 Queue 只是一个接口，当需要使用队列时也就首选 ArrayDeque 了 (次选是 LinkedList)。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/ds/1.5-stack-queue.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"线性表 - 栈和队列"}],["meta",{"property":"og:description","content":"栈和队列概述 栈：先入后出（LIFO） 队列：先入先出（FIFO） 栈和队列是以底层容器完成其所有的工作，对外提供统一的接口，底层容器是可插拔的（也就是说我们可以控制使用哪种容器来实现栈和队列的功能）。 Java 里有一个叫做 Stack 的类，却没有叫做 Queue 的类 (它是个接口名字)。当需要使用栈时，Java 已不推荐使用 Stack，而是推荐使用更高效的 ArrayDeque；既然 Queue 只是一个接口，当需要使用队列时也就首选 ArrayDeque 了 (次选是 LinkedList)。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-12T02:04:45.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-12T02:04:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线性表 - 栈和队列\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-12T02:04:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"栈和队列概述","slug":"栈和队列概述","link":"#栈和队列概述","children":[]},{"level":2,"title":"常用的栈和队列的实现","slug":"常用的栈和队列的实现","link":"#常用的栈和队列的实现","children":[{"level":3,"title":"Queue 接口","slug":"queue-接口","link":"#queue-接口","children":[]},{"level":3,"title":"Deque 接口","slug":"deque-接口","link":"#deque-接口","children":[]},{"level":3,"title":"Deque 与 Stack 和 Queue 对应方法","slug":"deque-与-stack-和-queue-对应方法","link":"#deque-与-stack-和-queue-对应方法","children":[]}]},{"level":2,"title":"相关算法题","slug":"相关算法题","link":"#相关算法题","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1683857085000,"updatedTime":1683857085000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":2.82,"words":847},"filePathRelative":"advance/ds/1.5-stack-queue.md","localizedDate":"2023年4月1日","excerpt":"<h2> 栈和队列概述</h2>\\n<ul>\\n<li><strong>栈</strong>：先入后出（LIFO）</li>\\n<li><strong>队列</strong>：先入先出（FIFO）</li>\\n</ul>\\n<p>栈和队列是以底层容器完成其所有的工作，对外提供统一的接口，底层容器是可插拔的（也就是说我们可以控制使用哪种容器来实现栈和队列的功能）。</p>\\n<p>Java 里有一个叫做 Stack 的类，却没有叫做 Queue 的类 (它是个接口名字)。当需要使用栈时，Java 已不推荐使用 Stack，而是推荐使用更高效的 ArrayDeque；既然 Queue 只是一个接口，当需要使用队列时也就首选 ArrayDeque 了 (次选是 LinkedList)。</p>","autoDesc":true}`);export{e as data};
