const e=JSON.parse(`{"key":"v-ea9b03a4","path":"/spring/springcloud/04-gateway.html","title":"微服务网关中心","lang":"zh-CN","frontmatter":{"title":"微服务网关中心","category":"SpringCloud","tag":"SpringGateway","date":"2023-02-12T00:00:00.000Z","description":"微服务网关中心","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/spring/springcloud/04-gateway.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"微服务网关中心"}],["meta",{"property":"og:description","content":"微服务网关中心"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-01T09:07:24.000Z"}],["meta",{"property":"article:tag","content":"SpringGateway"}],["meta",{"property":"article:published_time","content":"2023-02-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-01T09:07:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微服务网关中心\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-01T09:07:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什么是网关？","slug":"什么是网关","link":"#什么是网关","children":[]},{"level":2,"title":"SpringCloudGateway","slug":"springcloudgateway","link":"#springcloudgateway","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1680340044000,"updatedTime":1680340044000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":1.88,"words":563},"filePathRelative":"spring/springcloud/04-gateway.md","localizedDate":"2023年2月12日","excerpt":"<h2> 什么是网关？</h2>\\n<p>在微服务架构中，通常一个系统会被拆分为多个微服务，面对这么多微服务客户端应该如何去调用呢？如果没有其他更优方法，我们只能记录每个微服务对应的地址，分别去调用，但是这样会有很多的问题和潜在因素：</p>\\n<ol>\\n<li>客户端多次请求不同的微服务，会增加客户端代码和配置的复杂性，维护成本比价高。</li>\\n<li>认证复杂，每个微服务可能存在不同的认证方式，客户端去调用，要去适配不同的认证，</li>\\n<li>存在跨域的请求，调用链有一定的相对复杂性（防火墙 / 浏览器不友好的协议）。</li>\\n<li>难以重构，随着项目的迭代，可能需要重新划分微服务</li>\\n</ol>"}`);export{e as data};
