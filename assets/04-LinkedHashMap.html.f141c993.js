import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c,b as n,d as a,f as o,e,r as l}from"./app.fdaad276.js";const i={},u=o(`<h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p><code>HashMap</code> \u662F\u54C8\u5E0C\u8868\u7684\u65E0\u5E8F\u5B9E\u73B0\uFF0C<code>LinkedHashMap</code> \u5728 <code>HashMap</code> \u7684\u57FA\u7840\u4E4B\u4E0A\uFF0C\u63D0\u4F9B\u4E86\u987A\u5E8F\u8BBF\u95EE\u7684\u7279\u6027\u3002\u800C\u8FD9\u91CC\u7684\u987A\u5E8F\uFF0C\u5305\u62EC\u4E24\u79CD\uFF1A</p><ol><li>\u6309\u7167 key-value \u7684\u63D2\u5165\u987A\u5E8F\u8FDB\u884C\u8BBF\u95EE;</li><li>\u6309\u7167 key-value \u7684\u8BBF\u95EE\u987A\u5E8F\u8FDB\u884C\u8BBF\u95EE\uFF08LRU \u7B97\u6CD5\uFF09\u3002</li></ol><h2 id="\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u56FE" aria-hidden="true">#</a> \u7C7B\u56FE</h2><p><img src="https://cdn.jsdelivr.net/gh/alexchen68/images@master/blog/java/linkedhashmap_class.png" alt="LinkedHashMap \u7C7B\u56FE" title=":size=60%" loading="lazy"></p><p><code>LinkedHashMap</code> \u5B9E\u73B0 <code>java.util.Map</code> \u63A5\u53E3\uFF0C\u7EE7\u627F\u4E86 <code>java.util.HashMap</code> \u7C7B\u3002</p><h2 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h2><p>\u5B9E\u4F8B\u5C5E\u6027</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5934\u7ED3\u70B9\uFF08\u8D8A\u8001\u7684\u8282\u70B9\uFF0C\u653E\u5728\u8D8A\u524D\u9762\u3002\u6240\u4EE5\u5934\u8282\u70B9\uFF0C\u6307\u5411\u94FE\u8868\u7684\u5F00\u5934\uFF09</span>
<span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> head<span class="token punctuation">;</span>

<span class="token comment">// \u5C3E\u7ED3\u70B9\uFF08\u8D8A\u65B0\u7684\u8282\u70B9\uFF0C\u653E\u5728\u8D8A\u540E\u9762\u3002\u6240\u4EE5\u5C3E\u8282\u70B9\uFF0C\u6307\u5411\u94FE\u8868\u7684\u7ED3\u5C3E\uFF09</span>
<span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tail<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u662F\u5426\u6309\u8BBF\u95EE\u987A\u5E8F\u6392\u5E8F\uFF0C\u9ED8\u8BA4\u4E3A false
 * true \uFF1A\u6309\u7167 key-value \u7684\u8BBF\u95EE\u987A\u5E8F\u8FDB\u884C\u8BBF\u95EE
 * false \uFF1A\u6309\u7167 key-value \u7684\u63D2\u5165\u987A\u5E8F\u8FDB\u884C\u8BBF\u95EE
 */</span>
<span class="token keyword">final</span> <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u7C7B" aria-hidden="true">#</a> \u5185\u90E8\u7C7B</h2><p><code>LinkedHashMap</code> \u7684 <code>Entry&lt;K,V&gt;</code> \u7EE7\u627F\u81EA <code>HashMap</code> \u7684 <code>Node&lt;K,V&gt;</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// \u524D\u4E00\u4E2A\u7ED3\u70B9\uFF1B\u540E\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> before<span class="token punctuation">,</span> after<span class="token punctuation">;</span>
    <span class="token comment">// \u6784\u9020\u65B9\u6CD5</span>
    <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h2><p><code>LinkedHashMap</code> \u7684\u6784\u9020\u548C <code>HashMap</code> \u7684\u5DEE\u4E0D\u591A\uFF0C\u53EA\u662F\u5728 <code>HashMap</code> \u7684\u6784\u9020\u65B9\u6CD5\u4E0A\u591A\u52A0\u4E86 <code>accessOrder = false</code> \uFF0C\u8BF4\u660E\u9ED8\u8BA4\u4F7F\u7528\u6309\u63D2\u5165\u987A\u5E8F\u6392\u5E8F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    accessOrder <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    accessOrder <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    accessOrder <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    accessOrder <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token function">putMapEntries</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C<code>LinkedHashMap</code> \u589E\u52A0\u4E86\u4E00\u4E2A\u6784\u9020\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u6307\u5B9A <code>accessOrder</code> \u6765\u51B3\u5B9A\u4F7F\u7528\u54EA\u79CD\u6392\u5E8F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span>
                     <span class="token keyword">float</span> loadFactor<span class="token punctuation">,</span>
                     <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>accessOrder <span class="token operator">=</span> accessOrder<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6DFB\u52A0\u952E\u503C\u5BF9" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u952E\u503C\u5BF9" aria-hidden="true">#</a> \u6DFB\u52A0\u952E\u503C\u5BF9</h2><p><code>LinkedHashMap</code> \u6DFB\u52A0\u952E\u503C\u5BF9\u4F7F\u7528\u4ECE <code>HashMap</code> \u7EE7\u627F\u6765\u7684 <code>put(K key, V value)</code> \u65B9\u6CD5\uFF0C\u5728\u8BBE\u7F6E\u503C\u65F6\uFF0C\u5982\u679C\u5BF9\u5E94\u4F4D\u7F6E\u6CA1\u6709\u7ED3\u70B9\uFF0C\u5219\u4F1A\u8C03\u7528 <code>newNode(int hash, K key, V value, Node&lt;K,V&gt; e)</code> \u65B9\u6CD5\u53BB\u521B\u5EFA\u7ED3\u70B9\uFF1B\u7531\u4E8E <code>LinkedHashMap</code> \u4F7F\u7528\u4E86\u81EA\u5B9A\u4E49\u7684\u7ED3\u70B9 <code>Entry&lt;K, V&gt;</code>\uFF0C\u56E0\u6B64\u91CD\u5199\u4E86 <code>newNode</code> \u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">newNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u7ED3\u70B9</span>
    <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u7ED3\u70B9\u52A0\u5165\u672B\u5C3E</span>
    <span class="token function">linkNodeLast</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">linkNodeLast</span><span class="token punctuation">(</span><span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BB0\u5F55\u539F\u5C3E\u8282\u70B9\u5230 last \u4E2D</span>
    <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> last <span class="token operator">=</span> tail<span class="token punctuation">;</span>
    <span class="token comment">// \u8BBE\u7F6E tail \u6307\u5411 p \uFF0C\u53D8\u66F4\u65B0\u7684\u5C3E\u8282\u70B9</span>
    tail <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u539F\u5C3E\u8282\u70B9 last \u4E3A\u7A7A\uFF0C\u8BF4\u660E head \u4E5F\u4E3A\u7A7A\uFF0C\u6240\u4EE5 head \u4E5F\u6307\u5411 p</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>last <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        head <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token comment">// last &lt;=&gt; p \uFF0C\u76F8\u4E92\u6307\u5411</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        p<span class="token punctuation">.</span>before <span class="token operator">=</span> last<span class="token punctuation">;</span>
        last<span class="token punctuation">.</span>after <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u56DE\u8C03\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u56DE\u8C03\u64CD\u4F5C" aria-hidden="true">#</a> \u56DE\u8C03\u64CD\u4F5C</h2><p>\u5728 <code>HashMap</code> \u5185\u90E8\uFF0C\u5F53\u8BBF\u95EE\u3001\u6DFB\u52A0\u3001\u5220\u9664\u7ED3\u70B9\u540E\uFF0C\u4F1A\u6267\u884C\u5BF9\u5E94\u7684\u56DE\u8C03\u64CD\u4F5C\u65B9\u6CD5 <code>afterNodeAccess(Node&lt;K,V&gt; e)</code>\u3001<code>afterNodeInsertion(boolean evict)</code>\u3001<code>afterNodeRemoval(Node&lt;K,V&gt; e)</code>\uFF0C\u8FD9\u4E09\u4E2A\u65B9\u6CD5\u7684\u9ED8\u8BA4\u5B9E\u73B0\u4E3A\u7A7A\uFF0C<code>LinkedHashMap</code> \u901A\u8FC7\u91CD\u5199\u8FD9\u4E09\u4E2A\u65B9\u6CD5\uFF0C\u81EA\u5B9A\u4E49\u6269\u5C55\u9700\u8981\u903B\u8F91\u3002</p><h3 id="\u8BBF\u95EE\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE\u56DE\u8C03" aria-hidden="true">#</a> \u8BBF\u95EE\u56DE\u8C03</h3><p>\u8BBF\u95EE\u56DE\u8C03\u65B9\u6CD5 <code>afterNodeAccess(Node&lt;K,V&gt; e)</code> \u4E2D\uFF0C\u5FC5\u8981\u8981\u8BBE\u7F6E <code>accessOrder</code> \u4E3A true \u624D\u4F1A\u6267\u884C\u540E\u9762\u7684\u903B\u8F91\uFF0C\u5373\u8868\u793A\u8BE5 Map \u901A\u8FC7\u8BBF\u95EE\u987A\u5E8F\u6392\u5E8F\u3002\u5176\u4E3B\u8981\u6B65\u9AA4\u4E3A\uFF1A</p><ol><li>\u8BBF\u95EE\u4E00\u4E2A\u7ED3\u70B9\u540E\uFF0C\u5C06\u5176\u4ECE\u94FE\u8868\u79FB\u51FA\uFF1B</li><li>\u5C06\u8BE5\u7ED3\u70B9\u653E\u5165\u94FE\u8868\u7684\u672B\u5C3E\u3002</li></ol><p>\u8FD9\u6837\u505A\u7684\u76EE\u7684\u662F\u5C06\u6700\u5E38\u8BBF\u95EE\u7684\u5143\u7D20\uFF0C\u653E\u5728\u94FE\u8868\u7684\u672B\u5C3E\uFF08\u539F\u7406\u4E3A LRU \u7B97\u6CD5\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// move node to last</span>
    <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>
    <span class="token comment">// \u8981\u6C42 accessOrder \u4E3A true\uFF1Blast \u7F13\u5B58\u65E7\u5C3E\u7ED3\u70B9\uFF1B\u8981\u6C42 e \u4E0D\u662F\u5C3E\u7ED3\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>accessOrder <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>last <span class="token operator">=</span> tail<span class="token punctuation">)</span> <span class="token operator">!=</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// p \u6267\u884C\u5F53\u524D\u7ED3\u70B9 e</span>
        <span class="token comment">// b \u6307\u5411\u524D\u4E00\u4E2A\u7ED3\u70B9 </span>
        <span class="token comment">// a \u6307\u5411\u540E\u4E00\u4E2A\u7ED3\u70B9</span>
        <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span>
            <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">,</span> b <span class="token operator">=</span> p<span class="token punctuation">.</span>before<span class="token punctuation">,</span> a <span class="token operator">=</span> p<span class="token punctuation">.</span>after<span class="token punctuation">;</span>
        <span class="token comment">// \u79FB\u51FA p</span>
        p<span class="token punctuation">.</span>after <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            head <span class="token operator">=</span> a<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            b<span class="token punctuation">.</span>after <span class="token operator">=</span> a<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            a<span class="token punctuation">.</span>before <span class="token operator">=</span> b<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            last <span class="token operator">=</span> b<span class="token punctuation">;</span>
        <span class="token comment">// \u5C06 p \u6302\u5728\u94FE\u8868\u5C3E\u90E8</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>last <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            head <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>before <span class="token operator">=</span> last<span class="token punctuation">;</span>
            last<span class="token punctuation">.</span>after <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5C3E\u7ED3\u70B9\u6307\u5411 p</span>
        tail <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C\u5728 <code>HashMap</code> \u7684 <code>get</code> \u548C <code>getOrDefault</code> \u65B9\u6CD5\u4E2D\uFF0C\u6CA1\u6709\u8C03\u7528 <code>afterNodeAccess</code> \u65B9\u6CD5\uFF0C<code>LinkedHashMap</code> \u91CD\u5199\u4E86\u8FD9\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u5728\u67E5\u8BE2\u7ED3\u70B9\u540E\uFF0C\u589E\u52A0\u4E86\u6839\u636E <code>accessOrder</code> \u53C2\u6570\u51B3\u5B9A\u662F\u5426\u6267\u884C <code>afterNodeAccess</code> \u7684\u5224\u65AD\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
         <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
     <span class="token comment">// \u589E\u52A0\u7684\u5185\u5BB9</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>accessOrder<span class="token punctuation">)</span>
         <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">getOrDefault</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> defaultValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> defaultValue<span class="token punctuation">;</span>
     <span class="token comment">// \u589E\u52A0\u7684\u5185\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>accessOrder<span class="token punctuation">)</span>
        <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6DFB\u52A0\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u56DE\u8C03" aria-hidden="true">#</a> \u6DFB\u52A0\u56DE\u8C03</h3><p>\u6DFB\u52A0\u56DE\u8C03\u65B9\u6CD5 <code>afterNodeInsertion(boolean evict)</code> \u4E2D\uFF0C\u5982\u679C\u6EE1\u8DB3\u4E00\u4E0B\u6761\u4EF6\uFF0C\u4F1A\u4ECE\u94FE\u8868\u4E2D\u5220\u9664\u6700\u8001\u7684\u7ED3\u70B9\uFF08\u6700\u4E0D\u5E38\u8BBF\u95EE\uFF09\uFF1A</p><ol><li><code>evict</code> \u53C2\u6570\u4E3A true\uFF0C\u5728 HashMap \u4E2D\u8C03\u7528 <code>afterNodeInsertion</code> \u65F6\u4F20\u53C2\u90FD\u662F true\uFF1B</li><li>\u94FE\u8868\u4E0D\u4E3A\u7A7A\uFF1B</li><li><code>removeEldestEntry(Map.Entry&lt;K,V&gt; eldest)</code> \u7684\u7ED3\u679C\u4E3A true\uFF0C\u9ED8\u8BA4\u5B9E\u73B0\u8FD4\u56DE false\uFF0C\u8FD9\u610F\u5473\u7740\u60F3\u8981\u4F7F\u7528 LRU \u7F13\u5B58\u5FC5\u987B\u91CD\u5199\u8BE5\u65B9\u6CD5\uFF0C\u4F7F\u5F97\u4E00\u5B9A\u60C5\u51B5\u4E0B\u8FD4\u56DE true\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// evict \u53C2\u6570\u8868\u793A\u662F\u5426\u9700\u8981\u79FB\u9664\u6570\u636E</span>
<span class="token keyword">void</span> <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// possibly remove eldest</span>
    <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>
    <span class="token comment">// \u6EE1\u8DB3\u6761\u4EF6\u65F6\u5220\u9664\u6700\u8001\u7684\u7ED3\u70B9\uFF08\u6700\u4E0D\u5E38\u8BBF\u95EE\uFF09</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>evict <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>first <span class="token operator">=</span> head<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">removeEldestEntry</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">K</span> key <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
        <span class="token comment">// \u5220\u9664\u5934\u7ED3\u70B9</span>
        <span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// LinkedHashMap \u9ED8\u8BA4\u4E0D\u79FB\u9664\u6700\u8001\u7684\u6570\u636E</span>
<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">removeEldestEntry</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> eldest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u56DE\u8C03" aria-hidden="true">#</a> \u5220\u9664\u56DE\u8C03</h3><p>\u5220\u9664\u56DE\u8C03\u65B9\u6CD5 <code>afterNodeRemoval(Node&lt;K,V&gt; e)</code>\uFF0C\u7528\u4E8E\u5728 HashMap \u5220\u9664\u952E\u503C\u5BF9\u540E\uFF0C\u4ECE\u94FE\u8868\u4E2D\u5220\u9664\u5BF9\u5E94\u7684\u7ED3\u70B9</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">afterNodeRemoval</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span>
        <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">,</span> b <span class="token operator">=</span> p<span class="token punctuation">.</span>before<span class="token punctuation">,</span> a <span class="token operator">=</span> p<span class="token punctuation">.</span>after<span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>before <span class="token operator">=</span> p<span class="token punctuation">.</span>after <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        head <span class="token operator">=</span> a<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        b<span class="token punctuation">.</span>after <span class="token operator">=</span> a<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        tail <span class="token operator">=</span> b<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        a<span class="token punctuation">.</span>before <span class="token operator">=</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p><code>LinkedHashMap</code> \u5728 <code>HashMap</code> \u7684\u57FA\u7840\u4E0A\uFF0C\u5728\u5185\u90E8\u589E\u52A0\u4E86\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\uFF0C\u7528\u4E8E\u4FDD\u5B58\u63D2\u5165\u5143\u7D20\u7684\u987A\u5E8F\uFF0C\u89E3\u51B3\u4E86 <code>HashMap</code> \u4E0D\u80FD\u968F\u65F6\u4FDD\u6301\u904D\u5386\u987A\u5E8F\u548C\u63D2\u5165\u987A\u5E8F\u4E00\u81F4\u7684\u95EE\u9898\uFF1B\u540C\u65F6\u901A\u8FC7 <code>accessOrder</code> \u53C2\u6570\u548C\u56DE\u8C03\u51FD\u6570\uFF0C\u652F\u6301\u901A\u8FC7\u8BBF\u95EE\u987A\u5E8F\u6392\u5E8F\u3002</p><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,39),k={href:"https://www.iocoder.cn/",target:"_blank",rel:"noopener noreferrer"},d=e("\u828B\u9053\u6E90\u7801"),r={href:"https://blog.csdn.net/hequnwang10/article/details/124732318",target:"_blank",rel:"noopener noreferrer"},v=e("LinkedHashMap\u6E90\u7801\u89E3\u6790");function m(b,h){const s=l("ExternalLinkIcon");return t(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[d,a(s)])]),n("li",null,[n("a",r,[v,a(s)])])])])}const f=p(i,[["render",m],["__file","04-LinkedHashMap.html.vue"]]);export{f as default};
