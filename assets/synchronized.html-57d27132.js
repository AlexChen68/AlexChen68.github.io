const e=JSON.parse(`{"key":"v-53ce7082","path":"/java/concurrency/principle/synchronized.html","title":"synchronized 关键字","lang":"zh-CN","frontmatter":{"title":"synchronized 关键字","category":"Concurrency","date":"2023-03-17T00:00:00.000Z","description":"这篇文章我们来聊一聊 Java 多线程里面的“锁”。 首先需要明确的一点是：Java 多线程的锁都是基于对象的，Java 中的每一个对象都可以作为一个锁。 还有一点需要注意的是，我们常听到的类锁其实也是对象锁。 Java 类只有一个 Class 对象（可以有多个实例对象，多个实例共享这个 Class 对象），而 Class 对象也是特殊的 Java 对象。所以我们常说的类锁，其实就是 Class 对象的锁。 Synchronized 关键字","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/java/concurrency/principle/synchronized.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"synchronized 关键字"}],["meta",{"property":"og:description","content":"这篇文章我们来聊一聊 Java 多线程里面的“锁”。 首先需要明确的一点是：Java 多线程的锁都是基于对象的，Java 中的每一个对象都可以作为一个锁。 还有一点需要注意的是，我们常听到的类锁其实也是对象锁。 Java 类只有一个 Class 对象（可以有多个实例对象，多个实例共享这个 Class 对象），而 Class 对象也是特殊的 Java 对象。所以我们常说的类锁，其实就是 Class 对象的锁。 Synchronized 关键字"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T19:58:12.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-02T19:58:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"synchronized 关键字\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-02T19:58:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"Synchronized 关键字","slug":"synchronized-关键字","link":"#synchronized-关键字","children":[]},{"level":2,"title":"几种锁","slug":"几种锁","link":"#几种锁","children":[{"level":3,"title":"Java 对象头","slug":"java-对象头","link":"#java-对象头","children":[]},{"level":3,"title":"偏向锁","slug":"偏向锁","link":"#偏向锁","children":[]},{"level":3,"title":"轻量级锁","slug":"轻量级锁","link":"#轻量级锁","children":[]},{"level":3,"title":"重量级锁","slug":"重量级锁","link":"#重量级锁","children":[]},{"level":3,"title":"总结锁的升级流程","slug":"总结锁的升级流程","link":"#总结锁的升级流程","children":[]},{"level":3,"title":"各种锁的优缺点对比","slug":"各种锁的优缺点对比","link":"#各种锁的优缺点对比","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1680340044000,"updatedTime":1685735892000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":2}]},"readingTime":{"minutes":12.87,"words":3860},"filePathRelative":"java/concurrency/principle/synchronized.md","localizedDate":"2023年3月17日","excerpt":"<blockquote>\\n<p>这篇文章我们来聊一聊 Java 多线程里面的“锁”。</p>\\n<p>首先需要明确的一点是：<strong>Java 多线程的锁都是基于对象的</strong>，Java 中的每一个对象都可以作为一个锁。</p>\\n<p>还有一点需要注意的是，我们常听到的<strong>类锁</strong>其实也是对象锁。</p>\\n<p>Java 类只有一个 Class 对象（可以有多个实例对象，多个实例共享这个 Class 对象），而 Class 对象也是特殊的 Java 对象。所以我们常说的类锁，其实就是 Class 对象的锁。</p>\\n</blockquote>\\n<h2> Synchronized 关键字</h2>","autoDesc":true}`);export{e as data};
