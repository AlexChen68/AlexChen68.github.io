const e=JSON.parse(`{"key":"v-0e43f4b5","path":"/java/basic/annotation.html","title":"Java 注解机制","lang":"zh-CN","frontmatter":{"title":"Java 注解机制","date":"2022-09-30T00:00:00.000Z","category":"Java","tag":"annotaion","order":7,"description":"简介 注解是 JDK1.5 版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。 注解的优点： 通过使用注解，你可以将元数据保存在 Java 源代码中。 简单易读的代码。 编译器类型检查。 使用 annotation API 为自己的注解构造处理工具。 在 java.lang 包中，内置了一些注解：","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/java/basic/annotation.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"Java 注解机制"}],["meta",{"property":"og:description","content":"简介 注解是 JDK1.5 版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。 注解的优点： 通过使用注解，你可以将元数据保存在 Java 源代码中。 简单易读的代码。 编译器类型检查。 使用 annotation API 为自己的注解构造处理工具。 在 java.lang 包中，内置了一些注解："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-13T11:38:25.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:tag","content":"annotaion"}],["meta",{"property":"article:published_time","content":"2022-09-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-13T11:38:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 注解机制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-13T11:38:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"元注解","slug":"元注解","link":"#元注解","children":[]},{"level":2,"title":"自定义注解","slug":"自定义注解","link":"#自定义注解","children":[]},{"level":2,"title":"反射获取注解信息","slug":"反射获取注解信息","link":"#反射获取注解信息","children":[]},{"level":2,"title":"自定义注解结合 AOP","slug":"自定义注解结合-aop","link":"#自定义注解结合-aop","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1680340044000,"updatedTime":1681385905000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1},{"name":"alexchen68","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":4.53,"words":1358},"filePathRelative":"java/basic/annotation.md","localizedDate":"2022年9月30日","excerpt":"<h2> 简介</h2>\\n<p>注解是 JDK1.5 版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。</p>\\n<p><strong>注解的优点</strong>：</p>\\n<ol>\\n<li>通过使用注解，你可以将元数据保存在 Java 源代码中。</li>\\n<li>简单易读的代码。</li>\\n<li>编译器类型检查。</li>\\n<li>使用 annotation API 为自己的注解构造处理工具。</li>\\n</ol>\\n<p>在 <code>java.lang</code> 包中，<strong>内置</strong>了一些注解：</p>\\n","autoDesc":true}`);export{e as data};
