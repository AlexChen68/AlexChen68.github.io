const e=JSON.parse(`{"key":"v-1447901b","path":"/advance/algo/sort/2.2-shell.html","title":"2.2 希尔排序","lang":"zh-CN","frontmatter":{"title":"2.2 希尔排序","category":"算法","tag":["排序算法"],"date":"2023-04-03T00:00:00.000Z","description":"简介 希尔排序，也称递减增量排序算法，是直接插入排序的一种更高效的改进版本。但希尔排序是非稳定排序算法。 希尔排序是基于插入排序的以下两点性质而提出改进方法的： 插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率； 但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位； 希尔排序的基本思想是：先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录\\"基本有序\\"时，再对全体记录进行依次直接插入排序。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/sort/2.2-shell.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"2.2 希尔排序"}],["meta",{"property":"og:description","content":"简介 希尔排序，也称递减增量排序算法，是直接插入排序的一种更高效的改进版本。但希尔排序是非稳定排序算法。 希尔排序是基于插入排序的以下两点性质而提出改进方法的： 插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率； 但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位； 希尔排序的基本思想是：先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录\\"基本有序\\"时，再对全体记录进行依次直接插入排序。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-05T18:24:42.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2023-04-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-05T18:24:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.2 希尔排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-05T18:24:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"排序步骤","slug":"排序步骤","link":"#排序步骤","children":[]},{"level":2,"title":"演示动画","slug":"演示动画","link":"#演示动画","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"复杂度分析","slug":"复杂度分析","link":"#复杂度分析","children":[]}],"git":{"createdTime":1680719082000,"updatedTime":1680719082000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":1.81,"words":542},"filePathRelative":"advance/algo/sort/2.2-shell.md","localizedDate":"2023年4月3日","excerpt":"<h2> 简介</h2>\\n<p>希尔排序，也称递减增量排序算法，是<strong>直接插入排序</strong>的一种更高效的改进版本。但希尔排序是非稳定排序算法。</p>\\n<p>希尔排序是基于插入排序的以下两点性质而提出改进方法的：</p>\\n<ul>\\n<li>插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率；</li>\\n<li>但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位；</li>\\n</ul>\\n<p>希尔排序的基本思想是：先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录\\"基本有序\\"时，再对全体记录进行依次直接插入排序。</p>","autoDesc":true}`);export{e as data};
