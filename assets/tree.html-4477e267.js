const e=JSON.parse(`{"key":"v-2138993e","path":"/advance/ds/tree.html","title":"逻辑结构 - 树","lang":"zh-CN","frontmatter":{"title":"逻辑结构 - 树","date":"2022-09-27T00:00:00.000Z","category":"数据结构","description":"树简介 定义 树：n(n&gt;=0) 个节点构成的有限集合。 当 n=0 时，称为空树； 对于任一棵非空树 (n&gt;0)，它具备以下性质： 树中有一个称为“根”的特殊结点，用 r 表示； 其余结点可分为 m(m&gt;0) 个互不相交的有限集，其中每个集合本身又是一颗树，称为原来树的“子树”； 除了根结点外，每个节点有且仅有一个父结点； 一颗 N 个结点的树有 N-1 条边；","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/ds/tree.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"逻辑结构 - 树"}],["meta",{"property":"og:description","content":"树简介 定义 树：n(n&gt;=0) 个节点构成的有限集合。 当 n=0 时，称为空树； 对于任一棵非空树 (n&gt;0)，它具备以下性质： 树中有一个称为“根”的特殊结点，用 r 表示； 其余结点可分为 m(m&gt;0) 个互不相交的有限集，其中每个集合本身又是一颗树，称为原来树的“子树”； 除了根结点外，每个节点有且仅有一个父结点； 一颗 N 个结点的树有 N-1 条边；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-17T08:36:34.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2022-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-17T08:36:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"逻辑结构 - 树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-17T08:36:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"树简介","slug":"树简介","link":"#树简介","children":[]},{"level":2,"title":"二叉树","slug":"二叉树","link":"#二叉树","children":[{"level":3,"title":"二叉树的重要性质","slug":"二叉树的重要性质","link":"#二叉树的重要性质","children":[]},{"level":3,"title":"二叉树的存储结构","slug":"二叉树的存储结构","link":"#二叉树的存储结构","children":[]},{"level":3,"title":"二叉树的遍历","slug":"二叉树的遍历","link":"#二叉树的遍历","children":[]},{"level":3,"title":"代码实现方式","slug":"代码实现方式","link":"#代码实现方式","children":[]}]},{"level":2,"title":"二叉搜索树（BST）","slug":"二叉搜索树-bst","link":"#二叉搜索树-bst","children":[]},{"level":2,"title":"平衡二叉树-AVL","slug":"平衡二叉树-avl","link":"#平衡二叉树-avl","children":[]},{"level":2,"title":"哈夫曼树（Huffman Tree）","slug":"哈夫曼树-huffman-tree","link":"#哈夫曼树-huffman-tree","children":[]},{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[]}],"git":{"createdTime":1680340044000,"updatedTime":1681720594000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":2},{"name":"alexchen68","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":9.94,"words":2981},"filePathRelative":"advance/ds/tree.md","localizedDate":"2022年9月27日","excerpt":"<h2> 树简介</h2>\\n<p><strong>定义</strong></p>\\n<blockquote>\\n<p>树：n(n&gt;=0) 个节点构成的有限集合。\\n当 n=0 时，称为空树；</p>\\n</blockquote>\\n<p>对于任一棵非空树 (n&gt;0)，它具备以下性质：</p>\\n<ol>\\n<li>树中有一个称为“根”的特殊结点，用 r 表示；</li>\\n<li>其余结点可分为 m(m&gt;0) 个<strong>互不相交</strong>的有限集，其中每个集合本身又是一颗树，称为原来树的“子树”；</li>\\n<li>除了根结点外，每个节点有且仅有一个父结点；</li>\\n<li>一颗 N 个结点的树有 N-1 条边；</li>\\n</ol>","autoDesc":true}`);export{e as data};
