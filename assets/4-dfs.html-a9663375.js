const e=JSON.parse(`{"key":"v-95f2979c","path":"/advance/algo/search/4-dfs.html","title":"深度优先搜索","lang":"zh-CN","frontmatter":{"title":"深度优先搜索","category":"算法","date":"2023-06-07T00:00:00.000Z","description":"什么是深度优先搜索？ DFS：核心思想就是一条路找到底，然后回退一步换一个方向继续。有一个细节是，有时需要在出递归时把回退到的当前节点标为可访问。 深度优先遍历图的方法是： 从图中某顶点 v 出发： （1）访问顶点 v； （2）依次从 v 的未被访问的邻接点出发，对图进行深度优先遍历；直至图中和 v 有路径相通的顶点都被访问； （3）若此时图中尚有顶点未被访问，则从一个未被访问的顶点出发，重新进行深度优先遍历，直到图中所有顶点均被访问过为止。","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/advance/algo/search/4-dfs.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"深度优先搜索"}],["meta",{"property":"og:description","content":"什么是深度优先搜索？ DFS：核心思想就是一条路找到底，然后回退一步换一个方向继续。有一个细节是，有时需要在出递归时把回退到的当前节点标为可访问。 深度优先遍历图的方法是： 从图中某顶点 v 出发： （1）访问顶点 v； （2）依次从 v 的未被访问的邻接点出发，对图进行深度优先遍历；直至图中和 v 有路径相通的顶点都被访问； （3）若此时图中尚有顶点未被访问，则从一个未被访问的顶点出发，重新进行深度优先遍历，直到图中所有顶点均被访问过为止。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-07T09:31:54.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-06-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-07T09:31:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深度优先搜索\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-07T09:31:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"什么是深度优先搜索？","slug":"什么是深度优先搜索","link":"#什么是深度优先搜索","children":[]},{"level":2,"title":"代码框架","slug":"代码框架","link":"#代码框架","children":[]}],"git":{"createdTime":1686130314000,"updatedTime":1686130314000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":0.9,"words":269},"filePathRelative":"advance/algo/search/4-dfs.md","localizedDate":"2023年6月7日","excerpt":"<h2> 什么是深度优先搜索？</h2>\\n<blockquote>\\n<p>DFS：核心思想就是一条路找到底，然后回退一步换一个方向继续。有一个细节是，有时需要在出递归时把回退到的当前节点标为可访问。</p>\\n</blockquote>\\n<p>深度优先遍历图的方法是：</p>\\n<blockquote>\\n<p>从图中某顶点 v 出发：\\n（1）访问顶点 v；\\n（2）依次从 v 的未被访问的邻接点出发，对图进行深度优先遍历；直至图中和 v 有路径相通的顶点都被访问；\\n（3）若此时图中尚有顶点未被访问，则从一个未被访问的顶点出发，重新进行深度优先遍历，直到图中所有顶点均被访问过为止。</p>\\n</blockquote>","autoDesc":true}`);export{e as data};
