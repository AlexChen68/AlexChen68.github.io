import{_ as o,W as s,X as a,Y as e,a1 as n,Z as r,a0 as i,C as d}from"./framework-a443708f.js";const l={},h=i('<h2 id="redis-数据类型" tabindex="-1"><a class="header-anchor" href="#redis-数据类型" aria-hidden="true">#</a> Redis 数据类型</h2><p>Redis所有的key（键）都是字符串。我们在谈基础数据结构时，讨论的是存储值的数据类型，主要包括常见的5种数据类型，分别是：<strong>String</strong>、<strong>List</strong>、<strong>Set</strong>、<strong>Zset</strong>、<strong>Hash</strong>。</p><p>此外，还有三种特殊的数据类型，分别是 <strong>HyperLogLogs</strong>（基数统计）， <strong>Bitmaps</strong> (位图) 和 <strong>geospatial</strong> （地理位置）。</p><p>Redis5.0 中还增加了一个数据类型Stream，它借鉴了Kafka的设计，是一个新的强大的支持多播的可持久化的消息队列</p><h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h3><p>Redis 字符串存储字节序列，包括文本、序列化对象和二进制数组。</p><p>因此，字符串是最基本的 Redis 数据类型。</p><p>它们通常用于缓存，但它们支持额外的功能，也可以实现计数器并执行按位操作。</p><p>默认情况下，单个 Redis 字符串最大为 512 MB。</p><h4 id="获取和设置字符串" tabindex="-1"><a class="header-anchor" href="#获取和设置字符串" aria-hidden="true">#</a> 获取和设置字符串</h4>',10),c={href:"https://redis.io/commands/set",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"SET",-1),p={href:"https://redis.io/commands/setnx",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"SETNX",-1),g={href:"https://redis.io/commands/get",target:"_blank",rel:"noopener noreferrer"},u=e("code",null,"GET",-1),m={href:"https://redis.io/commands/mget",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"MGET",-1),k=e("h4",{id:"管理计数器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#管理计数器","aria-hidden":"true"},"#"),r(" 管理计数器")],-1),x={href:"https://redis.io/commands/incrby",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"INCRBY",-1),y={href:"https://redis.io/commands/incrbyfloat",target:"_blank",rel:"noopener noreferrer"},B=e("h4",{id:"位运算",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#位运算","aria-hidden":"true"},"#"),r(" 位运算")],-1),E={href:"https://redis.io/docs/data-types/bitmaps",target:"_blank",rel:"noopener noreferrer"},N=e("h2",{id:"参考资料",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),r(" 参考资料")],-1),L={href:"https://redis.io/docs/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.runoob.com/redis/redis-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function T(C,I){const t=d("ExternalLinkIcon");return s(),a("div",null,[h,e("ul",null,[e("li",null,[e("a",c,[_,n(t)]),r("存储一个字符串值。")]),e("li",null,[e("a",p,[f,n(t)]),r("仅当键不存在时才存储字符串值。用于实现锁。")]),e("li",null,[e("a",g,[u,n(t)]),r("检索字符串值。")]),e("li",null,[e("a",m,[b,n(t)]),r("在单个操作中检索多个字符串值。")])]),k,e("ul",null,[e("li",null,[e("a",x,[R,n(t)]),r("以原子方式递增（并在传递负数时递减）存储在给定键处的计数器。")]),e("li",null,[r("浮点计数器存在另一个命令："),e("a",y,[r("INCRBYFLOAT"),n(t)]),r("。")])]),B,e("p",null,[r("要对字符串执行按位运算，请参阅"),e("a",E,[r("位图数据类型"),n(t)]),r("文档。")]),N,e("p",null,[e("a",L,[r("Redis官方文档"),n(t)]),e("a",S,[r("Redis教程｜菜鸟教程"),n(t)])])])}const v=o(l,[["render",T],["__file","02-datatype.html.vue"]]);export{v as default};
