import{_ as o,W as t,X as c,Z as n,$ as a,a0 as e,a1 as p,C as l}from"./framework-ea95e8eb.js";const i={},r=n("h2",{id:"什么是-npm-包管理器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是-npm-包管理器","aria-hidden":"true"},"#"),a(" 什么是 npm 包管理器？")],-1),d=n("p",null,"NPM 全称 Node Package Manager，是 Node.js 包管理工具，是全球最大的模块生态系统，里面所有的模块都是开源免费的；也是 Node.js 的包管理工具，相当于后端开发中的 Maven。",-1),u={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},k=p(`<p>NPM 有两个主要的功能：</p><ol><li>快速构建 nodejs 工程；</li><li>快速安装和依赖第三方模块。</li></ol><h2 id="npm-的使用" tabindex="-1"><a class="header-anchor" href="#npm-的使用" aria-hidden="true">#</a> npm 的使用</h2><h3 id="npm-init-初始化命令" tabindex="-1"><a class="header-anchor" href="#npm-init-初始化命令" aria-hidden="true">#</a> npm init 初始化命令</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token punctuation">[</span>--force<span class="token operator">|</span>-f<span class="token operator">|</span>--yes<span class="token operator">|</span>-y<span class="token operator">|</span>--scope<span class="token punctuation">]</span>
<span class="token function">npm</span> init <span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span> <span class="token punctuation">(</span>same as <span class="token variable"><span class="token variable">\`</span>npx <span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/create<span class="token variable">\`</span></span><span class="token punctuation">)</span>
<span class="token function">npm</span> init <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token punctuation">(</span>same as <span class="token variable"><span class="token variable">\`</span>npx <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span>create-<span class="token operator">&lt;</span>name<span class="token operator">&gt;</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>
</code></pre></div><p>使用上述命令，可以初始化前端工程，并创建一个名为 <code>package.json</code> 的文件，这个文件包含了工程的描述信息和依赖信息等等。</p><p>例如，初始化一个空工程：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre></div><p>上面的命令会在执行命令的文件夹下，直接一个创建 <code>package.json</code> 文件。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>npm init</code> 还要一个别名：<code>npm create</code>，也就是说 <code>npm create</code> 等效于 <code>npm init</code></p></div><h3 id="cli-脚手架" tabindex="-1"><a class="header-anchor" href="#cli-脚手架" aria-hidden="true">#</a> cli 脚手架</h3><p>使用 <code>npm init -y</code> 可以初始化一个前端工程，但是仅仅包含了一个基本 <code>package.json</code> 文件，没有其他的目录结构，<code>package.json</code> 中也没有其他的依赖，这对于我们正常开发而言，需要自己一个个都添加需要的依赖。</p><p>因此，一些框架提供了创建相应技术栈的脚手架工程，可以作为参数在 <code>npm init</code> 命令中使用，来创建符合实际应用开发的前端工程结构，并将相关的依赖都添加到工程中。</p><p>这些脚手架工程常常被命名为 <code>create-xxx</code>，或者 <code>xxx-cli</code>。</p><p>例如，使用 Vite 提供的模板来创建一个 Vue 工程：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> create vite@latest
</code></pre></div><p>上述命令会做如下的事情：</p><ol><li>如果你本地没有安装 <code>create-vite</code>，它会先提示你安装它，输入 y 即可安装。</li><li>使用 <code>create-vite</code> 模板创建一个工程，期间会通过命令行询问你一些参数，比如工程名、JS 框架等等；</li></ol><p>创建后的工程目录如下：</p><p><img src="https://cdn.staticaly.com/gh/AlexChen68/image-hosting@master/blog/frontend/npm创建vite工程-工程结构.png" alt="工程结构.png" loading="lazy"></p><h3 id="npm-install-安装依赖" tabindex="-1"><a class="header-anchor" href="#npm-install-安装依赖" aria-hidden="true">#</a> npm install 安装依赖</h3><p>完整的命令列表：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">(</span>with no args, <span class="token keyword">in</span> package <span class="token function">dir</span><span class="token punctuation">)</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>@<span class="token operator">&lt;</span>tag<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>@<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>@<span class="token operator">&lt;</span>version range<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>git-host<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>git-user<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>repo-name<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>git repo url<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>tarball file<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>tarball url<span class="token operator">&gt;</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>folder<span class="token operator">&gt;</span>

alias: <span class="token function">npm</span> i
common options: <span class="token punctuation">[</span>-P<span class="token operator">|</span>--save-prod<span class="token operator">|</span>-D<span class="token operator">|</span>--save-dev<span class="token operator">|</span>-O<span class="token operator">|</span>--save-optional<span class="token punctuation">]</span> <span class="token punctuation">[</span>-E<span class="token operator">|</span>--save-exact<span class="token punctuation">]</span> <span class="token punctuation">[</span>-B<span class="token operator">|</span>--save-bundle<span class="token punctuation">]</span> <span class="token punctuation">[</span>--no-save<span class="token punctuation">]</span> <span class="token punctuation">[</span>--dry-run<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面介绍几种常用用法和参数。</p><h4 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h4><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>@<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre></div><p><code>npm install &lt;name&gt;@&lt;version&gt;</code> 命令用来从 npm 仓库下载依赖包到项目的 <code>\\node_modules</code> 文件夹下；如果使用 <code>-g</code> 参数表示全局下载，会下载到 node 安装目录的 <code>\\node_modules</code> 文件夹下。</p><p>常用的使用情况有三种：</p><ol><li>直接使用 <code>npm install &lt;name&gt;@&lt;version&gt;</code> 命令安装依赖会自动在项目目录下添加 <code>package-lock.json</code> 文件，这个文件帮助锁定安装包的版本。同时 <code>package.json</code> 文件中，依赖包会被添加到 <code>dependencies</code> 节点下，类似 maven 中的 <code>&lt;dependencies&gt;</code>。</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> mysql@1.0.0
</code></pre></div><ol start="2"><li>如果不添加 <code>version</code> 参数，默认安装最新版本。</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> mysql
</code></pre></div><ol start="3"><li>如果不指定依赖名称，则会读取 <code>package.json</code> 文件的依赖项，安装整个项目的依赖。</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
</code></pre></div>`,34),m={href:"https://www.npmjs.cn/cli/install/",target:"_blank",rel:"noopener noreferrer"},g=p(`<h4 id="常用参数" tabindex="-1"><a class="header-anchor" href="#常用参数" aria-hidden="true">#</a> 常用参数</h4><p><code>npm install</code> 命令还有几个常用的参数：</p><ul><li><code>--save-prod/-P</code></li></ul><p>使用该命令后，会在 <code>package.json</code> 的 <code>dependencies</code> 中出现，是生产环境依赖；该命令是默认命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> react
// 等同于
<span class="token function">npm</span> <span class="token function">install</span> --save-prod react
// 等同于
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-P</span> react
// 等同于
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> react
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>--save-dev/-D</code></li></ul><p>使用该命令后，依赖包会出现在 <code>package.json</code> 的 <code>devDependencies</code> 中；</p><p>表示开发环境依赖。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack
// 等同于
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> webpack
</code></pre></div><ul><li><code>-g/--global</code></li></ul><p>全局安装依赖；可以直接在命令行中使用。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> vue <span class="token parameter variable">-g</span>
</code></pre></div><ul><li><code>--no-save</code></li></ul><p>防止保存到 <code>dependencies</code>。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> mysql --no-save
</code></pre></div><h3 id="npm-update-更新依赖" tabindex="-1"><a class="header-anchor" href="#npm-update-更新依赖" aria-hidden="true">#</a> npm update 更新依赖</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> update <span class="token punctuation">[</span>-g<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span>
</code></pre></div><p>此命令会将列出的所有包更新为最新版本（由 <code>tag</code> 配置指定）;它还将安装缺少的软件包。</p><p><code>dependencies</code> 的依赖项版本号前面，常常会有 <code>^</code> 或 <code>~</code> 修饰，在使用 <code>npm udpate</code> 命令更新时，这两者是有区别的：</p><ul><li><code>^</code> 修饰的依赖会更新到最新的大版本，例如：<code>^1.1.1</code> 可以更新到 <code>^2.0.0</code>；</li><li><code>~</code> 修饰的依赖只能更新到该大版本下的最新版本，例如：<code>~1.2.3</code> 只能更新到 <code>~1.4.0</code>，而不能更新到 <code>~2.0.0</code>，最前面的大版本 <code>1</code> 不能变更。</li></ul><h3 id="npm-uninstall-卸载依赖" tabindex="-1"><a class="header-anchor" href="#npm-uninstall-卸载依赖" aria-hidden="true">#</a> npm uninstall 卸载依赖</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> uninstall <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span><span class="token punctuation">[</span>@<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>-S<span class="token operator">|</span>--save<span class="token operator">|</span>-D<span class="token operator">|</span>--save-dev<span class="token operator">|</span>-O<span class="token operator">|</span>--save-optional<span class="token operator">|</span>--no-save<span class="token punctuation">]</span>
</code></pre></div><p><code>npm uninstall</code> 与 <code>npm install</code> 相对应，参数也与其一致。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,24),h={href:"https://www.npmjs.cn/",target:"_blank",rel:"noopener noreferrer"};function v(b,f){const s=l("ExternalLinkIcon");return t(),c("div",null,[r,d,n("p",null,[a("官方网站："),n("a",u,[a("https://www.npmjs.com/"),e(s)])]),k,n("p",null,[a("更多命令使用情况可以参见 "),n("a",m,[a("官方文档 - 中文版"),e(s)])]),g,n("ul",null,[n("li",null,[n("a",h,[a("npm 中文文档"),e(s)])])])])}const _=o(i,[["render",v],["__file","2.1-npm.html.vue"]]);export{_ as default};
