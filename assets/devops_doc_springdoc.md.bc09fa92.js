import{_ as l,C as o,o as r,c,k as s,a as n,H as p,Q as e}from"./chunks/framework.01af844e.js";const B=JSON.parse('{"title":"OpenApi3 和 Springdoc","description":"","frontmatter":{"title":"OpenApi3 和 Springdoc","date":"2023-07-17T00:00:00.000Z","order":2},"headers":[],"relativePath":"devops/doc/springdoc.md","filePath":"devops/doc/springdoc.md","lastUpdated":1701689478000}'),t={name:"devops/doc/springdoc.md"},i=e('<h1 id="openapi3-规范与-springdoc-工具" tabindex="-1">OpenApi3 规范与 Springdoc 工具 <a class="header-anchor" href="#openapi3-规范与-springdoc-工具" aria-label="Permalink to &quot;OpenApi3 规范与 Springdoc 工具&quot;">​</a></h1><h2 id="相关概念" tabindex="-1">相关概念 <a class="header-anchor" href="#相关概念" aria-label="Permalink to &quot;相关概念&quot;">​</a></h2><p>说到接口文档，常常会听到 OpenAPI、Swagger、Knife4j 等等词汇，它们都是什么？它们之间有什么关系呢？</p><h3 id="openapi-和-swagger" tabindex="-1">OpenAPI 和 Swagger <a class="header-anchor" href="#openapi-和-swagger" aria-label="Permalink to &quot;OpenAPI 和 Swagger&quot;">​</a></h3><p><code>OpenAPI</code> 是一种用于描述和定义 RESTful API 的规范，它定义了 API 的结构、端点、参数、响应等信息。 Swagger 它是 SmartBear 这个公司的一个开源项目，里面提供了一系列工具，包括著名的 <code>swagger-ui</code>。</p><p>目前 <code>OpenApi</code> 的版本：</p><ul><li><code>OpenApi2</code> 对应 Swagger 的实现版 Swagger2，Swagger2 已经于 17 年停止维护，对应的包名：<code>io.swagger </code></li><li><code>OpenApi3</code> 对应 Swagger 的实现版 Swagger3，Swagger3 于 17 年开始开发，对应的包名：<code>io.swagger.core.v3</code></li></ul><p>相关资料：</p><ul><li><a href="https://openapi.apifox.cn/" target="_blank" rel="noreferrer">OpenAPI 规范 (中文版)</a></li><li><a href="https://swagger.io/specification/" target="_blank" rel="noreferrer">OpenApi3 规范 - 官网</a></li></ul>',9),d={id:"springfox",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#springfox","aria-label":'Permalink to "Springfox <Badge text="不推荐" type="danger"/>"'},"​",-1),E=s("p",null,"Springfox 是 Spring 生态的一个开源库，是 Swagger 与 OpenApi 规范的具体实现。",-1),y=s("p",null,"由于目前已经不再更新，Spring 官方推出了另一个库：Springdoc。",-1),u={id:"springdoc",tabindex:"-1"},h=s("a",{class:"header-anchor",href:"#springdoc","aria-label":'Permalink to "SpringDoc <Badge text="推荐" type="tip"/>"'},"​",-1),b=s("p",null,"SpringDoc 基于 OpenAPI 3 规范，用于 SpringBoot 项目中 API 文档的生成和维护的工具类，支持 Springboot3，推荐直接使用它。",-1),_=s("p",null,"相关资料：",-1),m=s("ul",null,[s("li",null,[s("a",{href:"https://springdoc.org/",target:"_blank",rel:"noreferrer"},"SpringDoc 官网")])],-1),S={id:"knife4j",tabindex:"-1"},A=s("a",{class:"header-anchor",href:"#knife4j","aria-label":'Permalink to "Knife4j <Badge text="增强方案" type="tip"/>"'},"​",-1),f=e(`<p>Knife4j 是一个集 Swagger2 和 OpenAPI3 为一体的增强解决方案。</p><ul><li>基于 SpringFox2.x 版本提供 Swagger2 规范的增强扩展</li><li>基于 Springdoc-openapi 项目提供 OAS3 规范的增强扩展</li></ul><p>相关资料：</p><ul><li><a href="https://doc.xiaominfo.com/" target="_blank" rel="noreferrer">Knife4j 官网</a></li></ul><div class="tip custom-block"><p class="custom-block-title">小结</p><p>推荐使用 Springdoc 或者 Knife4j。</p></div><h2 id="springboot-springdoc-实践" tabindex="-1">SpringBoot - Springdoc 实践 <a class="header-anchor" href="#springboot-springdoc-实践" aria-label="Permalink to &quot;SpringBoot - Springdoc 实践&quot;">​</a></h2><p>看这一篇：<a href="http://lihuaxi.xjx100.cn/news/1267782.html?action=onClick" target="_blank" rel="noreferrer">秒懂 SpringBoot 之如何集成 SpringDoc</a></p><h2 id="springcloud-springdoc-实践" tabindex="-1">SpringCloud - Springdoc 实践 <a class="header-anchor" href="#springcloud-springdoc-实践" aria-label="Permalink to &quot;SpringCloud - Springdoc 实践&quot;">​</a></h2><p>在 SpringCloud 中，由于存在网关进行路由转发，我们可以这样搭建接口平台：</p><ul><li>在各个微服务中引入 springdoc，仅开启 springdoc 的接口，关闭 swagger-ui 界面；</li><li>网关模块开启 swagger-ui 和 springdoc 接口，通过 <code>springdoc.swagger-ui.urls</code> 进行分组</li></ul><p>微服务示例：</p><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># springdoc 配置，关闭 swagger-ui，仅提供接口，统一由网关提供界面</span></span>
<span class="line"><span style="color:#85E89D;">springdoc</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">api-docs</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">enabled</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/springdoc</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 自定义接口路径，请求这个接口会响应符合 openapi 规范的接口信息数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">swagger-ui</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">enabled</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># springdoc 配置，关闭 swagger-ui，仅提供接口，统一由网关提供界面</span></span>
<span class="line"><span style="color:#22863A;">springdoc</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">api-docs</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">enabled</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/springdoc</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 自定义接口路径，请求这个接口会响应符合 openapi 规范的接口信息数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">swagger-ui</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">enabled</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>网关示例：</p><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">springdoc</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">api-docs</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">enabled</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/springdoc</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 自定义接口路径，请求这个接口会响应符合 openapi 规范的接口信息数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">swagger-ui</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/swagger-ui</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 自定义 swagger-ui 界面路径</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 接口分组，通常一个服务一组，url 为获取 openapi 数据的接口，path 第一部分为前缀，与路由保持一致；后面为子服务配置的 openapi 接口地址</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">urls</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">your-service-name</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/admin/springdoc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">springdoc</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">api-docs</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">enabled</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/springdoc</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 自定义接口路径，请求这个接口会响应符合 openapi 规范的接口信息数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">swagger-ui</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/swagger-ui</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 自定义 swagger-ui 界面路径</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 接口分组，通常一个服务一组，url 为获取 openapi 数据的接口，path 第一部分为前缀，与路由保持一致；后面为子服务配置的 openapi 接口地址</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">urls</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">your-service-name</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/admin/springdoc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,14);function w(D,x,k,v,C,P){const a=o("Badge");return r(),c("div",null,[i,s("h3",d,[n("Springfox "),p(a,{text:"不推荐",type:"danger"}),n(),g]),E,y,s("h3",u,[n("SpringDoc "),p(a,{text:"推荐",type:"tip"}),n(),h]),b,_,m,s("h3",S,[n("Knife4j "),p(a,{text:"增强方案",type:"tip"}),n(),A]),f])}const O=l(t,[["render",w]]);export{B as __pageData,O as default};
