import{_ as e,o as a,c as r,Q as i}from"./chunks/framework.419948d5.js";const w=JSON.parse('{"title":"Java 虚拟机概述","description":"Java 虚拟机概述","frontmatter":{"title":"Java 虚拟机概述","article":true,"date":"2022-09-30T00:00:00.000Z","tag":"JVM","description":"Java 虚拟机概述"},"headers":[],"relativePath":"java/jvm/index.md","filePath":"java/jvm/index.md","lastUpdated":1697360573000}'),t={name:"java/jvm/index.md"},h=i('<h2 id="jvm-简介" tabindex="-1">JVM 简介 <a class="header-anchor" href="#jvm-简介" aria-label="Permalink to &quot;JVM 简介&quot;">​</a></h2><p><strong>Java 虚拟机</strong>（英语：Java Virtual Machine，缩写为 JVM），一种能够执行 <a href="https://zh.wikipedia.org/wiki/Java_bytecode" target="_blank" rel="noreferrer">Java bytecode</a> 的 <a href="https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E6%A9%9F%E5%99%A8" target="_blank" rel="noreferrer">虚拟机</a>，以<a href="https://zh.wikipedia.org/wiki/%E5%A0%86%E7%96%8A%E7%B5%90%E6%A7%8B%E6%A9%9F%E5%99%A8" target="_blank" rel="noreferrer">堆栈结构机器</a>来进行实做。最早由 <a href="https://zh.wikipedia.org/wiki/%E6%98%87%E9%99%BD%E9%9B%BB%E8%85%A6" target="_blank" rel="noreferrer">Sun 微系统</a>所研发并实现第一个实现版本，是 <a href="https://zh.wikipedia.org/wiki/Java%E5%B9%B3%E8%87%BA" target="_blank" rel="noreferrer">Java 平台</a>的一部分，能够执行以 <a href="https://zh.wikipedia.org/wiki/Java" target="_blank" rel="noreferrer">Java</a> 语言写作的 <a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94" target="_blank" rel="noreferrer">软件</a><a href="https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BC%8F" target="_blank" rel="noreferrer">程序</a>。</p><p>Java 虚拟机有自己完善的<a href="https://zh.wikipedia.org/wiki/%E7%A1%AC%E9%AB%94" target="_blank" rel="noreferrer">硬体</a>架构，如<a href="https://zh.wikipedia.org/wiki/%E5%A4%84%E7%90%86%E5%99%A8" target="_blank" rel="noreferrer">处理器</a>、<a href="https://zh.wikipedia.org/wiki/%E5%A0%86%E6%A0%88" target="_blank" rel="noreferrer">堆栈</a>、<a href="https://zh.wikipedia.org/wiki/%E5%AF%84%E5%AD%98%E5%99%A8" target="_blank" rel="noreferrer">寄存器</a>等，还具有相应的<a href="https://zh.wikipedia.org/wiki/%E6%8C%87%E4%BB%A4" target="_blank" rel="noreferrer">指令</a>系统。JVM 屏蔽了与具体<a href="https://zh.wikipedia.org/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" target="_blank" rel="noreferrer">操作系统</a>平台相关的信息，使得 Java <a href="https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BA%8F" target="_blank" rel="noreferrer">程序</a>只需生成在 Java 虚拟机上运行的目标代码（<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E7%A0%81" target="_blank" rel="noreferrer">字节码</a>），就可以在多种平台上不加修改地运行。通过对中央处理器（ <a href="https://zh.wikipedia.org/wiki/CPU" target="_blank" rel="noreferrer">CPU</a>）所执行的软件实现，实现能执行 <a href="https://zh.wikipedia.org/wiki/%E7%BC%96%E8%AF%91" target="_blank" rel="noreferrer">编译</a>过的 Java 程序码（ <a href="https://zh.wikipedia.org/wiki/Applet" target="_blank" rel="noreferrer">Applet</a> 与应用程序）。</p><p>作为一种编程语言的虚拟机，实际上不只是专用于 Java 语言，只要生成的编译文件符合 JVM 对加载编译文件格式要求，任何语言都可以由 JVM 编译运行。此外，除了<a href="https://zh.wikipedia.org/wiki/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8" target="_blank" rel="noreferrer">甲骨文</a>，也有其他开源或闭源的实现。</p><p>据技术规范所述，Java 虚拟机是一部抽象（虚拟）的计算机。但技术规范未定义使用的垃圾回收算法及优化 Java 虚拟机指令的内部算法，这主要是为了不给实现者带来过多困扰与限制。所有的 Java 程序仅可在对 Java 虚拟机的抽象技术规范的具体实现环境中才可运行。</p><p>自 <a href="https://zh.wikipedia.org/wiki/Java_SE" target="_blank" rel="noreferrer">Java 平台标准版</a>（J2SE）5.0 起，Java 虚拟机的技术规范改为由 <a href="https://zh.wikipedia.org/wiki/JCP" target="_blank" rel="noreferrer">Java 社区流程</a>开发制定（JSR 924）。[[2]](<a href="https://zh.wikipedia.org/wiki/Java" target="_blank" rel="noreferrer">https://zh.wikipedia.org/wiki/Java</a> 虚拟机#cite_note-2)2006 年，JSR 924 对技术规范进行了变更，支持更改<a href="https://zh.wikipedia.org/w/index.php?title=Class_(%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F)&amp;action=edit&amp;redlink=1" target="_blank" rel="noreferrer">类文件格式</a>的提议（JSR 202）[[3]](<a href="https://zh.wikipedia.org/wiki/Java" target="_blank" rel="noreferrer">https://zh.wikipedia.org/wiki/Java</a> 虚拟机#cite_note-3)。Java 虚拟机的技术细节以蓝皮书 [[4]](<a href="https://zh.wikipedia.org/wiki/Java" target="_blank" rel="noreferrer">https://zh.wikipedia.org/wiki/Java</a> 虚拟机#cite_note-4) 的形式发布，其前言称：</p><blockquote><p>我们希望这份文档中的技术规范足以打造出相兼容的净室版 Java 虚拟机实现。甲骨文公司提供用于验证 Java 虚拟机实现是否正常运作的测试项目。[[注 1]](<a href="https://zh.wikipedia.org/wiki/Java" target="_blank" rel="noreferrer">https://zh.wikipedia.org/wiki/Java</a> 虚拟机#cite_note-5)</p></blockquote><p>甲骨文公司的一款 Java 虚拟机名为 <a href="https://zh.wikipedia.org/wiki/HotSpot" target="_blank" rel="noreferrer">HotSpot</a>；另一款自 <a href="https://zh.wikipedia.org/wiki/BEA_Systems" target="_blank" rel="noreferrer">BEA Systems</a> 继承而来的名为 <a href="https://zh.wikipedia.org/wiki/JRockit" target="_blank" rel="noreferrer">JRockit</a>。 <a href="https://zh.wikipedia.org/wiki/%E5%87%80%E5%AE%A4%E8%AE%BE%E8%AE%A1" target="_blank" rel="noreferrer">净室设计</a>版 Java 实现有 <a href="https://zh.wikipedia.org/w/index.php?title=Kaffe&amp;action=edit&amp;redlink=1" target="_blank" rel="noreferrer">Kaffe</a>、<a href="https://zh.wikipedia.org/w/index.php?title=IBM_J9&amp;action=edit&amp;redlink=1" target="_blank" rel="noreferrer">IBM J9</a>及 Skelmir&#39;s CEE-J。甲骨文公司拥有 Java 商标权，且可能将其用于认证其他实现是否能完全匹配甲骨文的技术规范。</p><h2 id="jvm-结构" tabindex="-1">JVM 结构 <a class="header-anchor" href="#jvm-结构" aria-label="Permalink to &quot;JVM 结构&quot;">​</a></h2><p><img src="https://cdn.staticaly.com/gh/AlexChen68/OSS@master/blog/java/jvm.png" alt="jvm 结构"></p>',10),o=[h];function p(k,n,l,f,g,s){return a(),r("div",null,o)}const _=e(t,[["render",p]]);export{w as __pageData,_ as default};
