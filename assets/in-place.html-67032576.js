import{_ as t,W as o,X as a,Y as e,a0 as c}from"./framework-35f74cfc.js";const l={},n=e("h2",{id:"原地算法-in-place-algorithm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#原地算法-in-place-algorithm","aria-hidden":"true"},"#"),c(" 原地算法（In-Place Algorithm）")],-1),r=e("p",null,"原地算法：在计算机科学中，一个原地算法（in-place algorithm）是一种使用小的，固定数量的额外之空间来转换资料的算法。当算法执行时，输入的资料通常会被要输出的部分覆盖掉。不是原地算法有时候称为非原地（not-in-place）或不得其所（out-of-place）。",-1),s=e("p",null,"通俗的说法：就是一个算法，除了可以运用输入数据本身已开辟的空间外，就只可以用极小的辅助空间来进行运算了，一般 额外空间复杂度为 O (1)，也就是一个变量。(特殊情况除外)",-1),i=e("p",null,"示例：LeetCode 26题 https://leetcode.cn/problems/remove-duplicates-from-sorted-array/",-1),_=[n,r,s,i];function d(h,p){return o(),a("div",null,_)}const u=t(l,[["render",d],["__file","in-place.html.vue"]]);export{u as default};
