const e=JSON.parse(`{"key":"v-d5a31b58","path":"/md/advance/ds/array.html","title":"线性表 - 数组","lang":"zh-CN","frontmatter":{"title":"线性表 - 数组","date":"2022-09-27T00:00:00.000Z","category":"数据结构","description":"数组概述 数组是一种连续存储线性结构，元素类型相同，大小相等，数组是多维的，通过使用整型索引值来访问他们的元素，数组尺寸不能改变。 数组具有一下的特点： 数组下标都是从 0 开始的。 数组内存空间的地址是连续的。 数组的元素是不能删的，只能覆盖。 正是因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。 数组的优点: 存取速度快","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/md/advance/ds/array.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"线性表 - 数组"}],["meta",{"property":"og:description","content":"数组概述 数组是一种连续存储线性结构，元素类型相同，大小相等，数组是多维的，通过使用整型索引值来访问他们的元素，数组尺寸不能改变。 数组具有一下的特点： 数组下标都是从 0 开始的。 数组内存空间的地址是连续的。 数组的元素是不能删的，只能覆盖。 正是因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。 数组的优点: 存取速度快"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-01T08:01:50.000Z"}],["meta",{"property":"article:published_time","content":"2022-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-01T08:01:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线性表 - 数组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-01T08:01:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"数组概述","slug":"数组概述","link":"#数组概述","children":[]},{"level":2,"title":"相关算法题","slug":"相关算法题","link":"#相关算法题","children":[]}],"git":{"createdTime":1680173749000,"updatedTime":1680336110000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":2}]},"readingTime":{"minutes":1.6,"words":481},"filePathRelative":"md/advance/ds/array.md","localizedDate":"2022年9月27日","excerpt":"<h2> 数组概述</h2>\\n<p>数组是一种连续存储线性结构，元素类型相同，大小相等，数组是多维的，通过使用整型索引值来访问他们的元素，数组尺寸不能改变。</p>\\n<p>数组具有一下的特点：</p>\\n<ul>\\n<li>数组下标都是从 0 开始的。</li>\\n<li>数组内存空间的地址是连续的。</li>\\n<li>数组的元素是不能删的，只能覆盖。</li>\\n</ul>\\n<p>正是因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。</p>\\n<p>数组的<strong>优点</strong>:</p>\\n<ul>\\n<li>存取速度快</li>\\n</ul>","autoDesc":true}`);export{e as data};
