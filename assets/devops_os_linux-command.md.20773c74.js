import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.01af844e.js";const b=JSON.parse('{"title":"Linux 常用命令","description":"","frontmatter":{"title":"Linux 常用命令","date":"2023-10-26T00:00:00.000Z","order":1},"headers":[],"relativePath":"devops/os/linux-command.md","filePath":"devops/os/linux-command.md","lastUpdated":1700567703000}'),l={name:"devops/os/linux-command.md"},p=o('<h1 id="linux-常用命令" tabindex="-1">Linux 常用命令 <a class="header-anchor" href="#linux-常用命令" aria-label="Permalink to &quot;Linux 常用命令&quot;">​</a></h1><h2 id="linux-命令查询" tabindex="-1">Linux 命令查询 <a class="header-anchor" href="#linux-命令查询" aria-label="Permalink to &quot;Linux 命令查询&quot;">​</a></h2><ul><li><a href="https://git.io/linux" target="_blank" rel="noreferrer">Linux 命令搜索</a></li><li><a href="https://wangchujiang.com/reference/docs/linux-command.html" target="_blank" rel="noreferrer">Linux 命令速查表</a></li></ul><h2 id="ssh-命令" tabindex="-1">ssh 命令 <a class="header-anchor" href="#ssh-命令" aria-label="Permalink to &quot;ssh 命令&quot;">​</a></h2><h3 id="连接远程主机" tabindex="-1">连接远程主机 <a class="header-anchor" href="#连接远程主机" aria-label="Permalink to &quot;连接远程主机&quot;">​</a></h3><p>SSH（Secure Shell）是一种通过网络远程登录和执行命令的安全协议和工具。SSH 提供了加密的通信和身份验证机制，可以安全地远程管理和操作远程主机。</p><p>SSH 命令的基本语法如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;"> [选项] [用户名@]主机</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;"> [选项] [用户名@]主机</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，<code>[选项]</code> 是可选的，用于指定一些特定的行为。<code>[用户名@]主机</code> 是要连接的远程主机的用户名和主机名或 IP 地址。</p><p>下面是一些常用的选项：</p><ul><li><code>-p &lt;port&gt;</code>：指定远程主机上的 SSH 端口，默认为 22。</li><li><code>-i &lt;identity_file&gt;</code>：指定用于身份验证的私钥文件。</li><li><code>-L &lt;local_port&gt;:&lt;remote_host&gt;:&lt;remote_port&gt;</code>：在本地主机上创建端口转发。</li><li><code>-R &lt;remote_port&gt;:&lt;local_host&gt;:&lt;local_port&gt;</code>：在远程主机上创建端口转发。</li><li><code>-X</code>：启用 X11 转发，允许远程显示图形界面。</li><li><code>-C</code>：压缩传输的数据。</li><li><code>-v</code>：详细显示 SSH 连接的调试信息。</li></ul><p>下面是一些示例用法：</p><ol><li>连接到远程主机：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@remote</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@remote</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这将使用用户名 <code>user</code> 连接到远程主机 <code>remote</code>。</p><ol start="2"><li>指定远程主机上的 SSH 端口：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2222</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@remote</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2222</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@remote</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这将使用用户名 <code>user</code> 连接到远程主机 <code>remote</code> 的 SSH 端口 2222。</p><ol start="3"><li>使用私钥文件进行身份验证：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/private_key</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@remote</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/private_key</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@remote</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这将使用 <code>~/.ssh/private_key</code> 文件中的私钥进行身份验证，并连接到远程主机 <code>remote</code>。</p><h3 id="生成-ssh-密钥" tabindex="-1">生成 ssh 密钥 <a class="header-anchor" href="#生成-ssh-密钥" aria-label="Permalink to &quot;生成 ssh 密钥&quot;">​</a></h3><p>要生成 SSH 密钥，可以按照以下步骤进行操作：</p><ol><li><p>打开终端或命令提示符窗口。</p></li><li><p>输入以下命令来生成 SSH 密钥对：</p></li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4096</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;your_email@example.com&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4096</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;your_email@example.com&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这里的 <code>-t rsa</code> 指定生成 RSA 密钥，<code>-b 4096</code> 指定密钥长度为 4096 位，<code>-C</code> 后面的内容是你的电子邮件地址，可以替换为你自己的邮件地址。</p><ol start="3"><li><p>系统会提示你选择密钥的保存位置，默认是在 <code>~/.ssh/id_rsa</code>。按回车键接受默认位置，或者输入你想要的自定义位置。</p></li><li><p>接下来，系统会要求你输入一个密码短语（passphrase）。密码短语是用于保护你的私钥的密码，可以为空，但建议设置一个强密码来增加安全性。输入密码短语后，按回车键确认。请注意，当你输入密码短语时，终端不会显示任何字符。</p></li><li><p>系统将生成公钥和私钥文件。公钥文件的默认路径是 <code>~/.ssh/id_rsa.pub</code>，私钥文件的默认路径是 <code>~/.ssh/id_rsa</code>。</p></li><li><p>生成的公钥文件（<code>.pub</code> 后缀）是你要分享给其他人或上传到远程服务器的文件。你可以使用文本编辑器打开公钥文件，复制其中的内容。</p></li></ol><p>现在，你已经成功生成了 SSH 密钥对。私钥文件应该妥善保管，不要泄露给其他人。公钥文件可以分享给需要的人或上传到需要使用你的密钥的远程服务器上。</p><h3 id="ssh-copy-id-复制公钥" tabindex="-1">ssh-copy-id 复制公钥 <a class="header-anchor" href="#ssh-copy-id-复制公钥" aria-label="Permalink to &quot;ssh-copy-id 复制公钥&quot;">​</a></h3><p><code>ssh-copy-id</code> 是一个用于将本地主机的公钥复制到远程主机上的实用工具。它简化了将 SSH 公钥添加到远程主机的过程，让你可以轻松地进行无密码登录。</p><p>使用 <code>ssh-copy-id</code> 命令，你可以将本地主机上的公钥复制到远程主机的授权文件中，这样你就可以使用私钥进行无密码登录到远程主机。</p><p><code>ssh-copy-id</code> 命令的基本语法如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh-copy-id</span><span style="color:#E1E4E8;"> [-i [identity_file]] [user@]host</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh-copy-id</span><span style="color:#24292E;"> [-i [identity_file]] [user@]host</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，<code>-i [identity_file]</code> 是可选的，用于指定要使用的公钥文件，默认为 <code>~/.ssh/id_rsa.pub</code>。<code>[user@]host</code> 是远程主机的用户名和主机名或 IP 地址。</p><p>使用 <code>ssh-copy-id</code> 的步骤如下：</p><ol><li><p>打开终端或命令提示符窗口。</p></li><li><p>输入以下命令来复制公钥到远程主机：</p></li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh-copy-id</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@remote</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh-copy-id</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@remote</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将 <code>user</code> 替换为远程主机的用户名，<code>remote</code> 替换为远程主机的主机名或 IP 地址。</p><ol start="3"><li><p>系统会提示你输入远程主机的密码。输入密码后，按回车键确认。</p></li><li><p><code>ssh-copy-id</code> 命令会将本地主机的公钥复制到远程主机的 <code>~/.ssh/authorized_keys</code> 文件中。如果该文件不存在，命令会自动创建。</p></li></ol><p>完成上述步骤后，你就可以使用私钥进行无密码登录到远程主机了。下次连接远程主机时，SSH 将使用私钥进行身份验证，而无需输入密码。</p><p>请注意，如果远程主机的 <code>~/.ssh</code> 目录权限不正确，或者 <code>~/.ssh/authorized_keys</code> 文件权限不正确，<code>ssh-copy-id</code> 命令可能会失败。在这种情况下，你可以手动调整权限并再次尝试。</p><p>总结起来，<code>ssh-copy-id</code> 命令是一个方便的工具，可以帮助你将本地主机的公钥复制到远程主机上，实现无密码登录。</p><h2 id="scp-命令" tabindex="-1">scp 命令 <a class="header-anchor" href="#scp-命令" aria-label="Permalink to &quot;scp 命令&quot;">​</a></h2><p>SCP（Secure Copy）是一种在本地主机和远程主机之间进行文件传输的命令。它使用 SSH 协议进行安全的文件传输，可以在不同的操作系统之间复制文件和目录。</p><p>SCP 命令的基本语法如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">scp</span><span style="color:#E1E4E8;"> [选项] [源文件路径] [目标文件路径]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">scp</span><span style="color:#24292E;"> [选项] [源文件路径] [目标文件路径]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，<code>[选项]</code> 是可选的，用于指定一些特定的行为。<code>[源文件路径]</code> 是要传输的文件或目录在本地主机上的路径，<code>[目标文件路径]</code> 是传输的目标位置在远程主机上的路径。</p><p>下面是一些常用的选项：</p><ul><li><code>-r</code>：递归复制整个目录。</li><li><code>-P &lt;port&gt;</code>：指定远程主机上的 SSH 端口，默认为 22。</li><li><code>-p</code>：保留文件的权限和时间戳。</li><li><code>-q</code>：安静模式，不显示传输过程。</li><li><code>-C</code>：压缩传输的数据。</li></ul><p>下面是一些示例用法：</p><ol><li>从本地主机复制文件到远程主机：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">scp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file.txt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@remote:/path/to/destination</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">scp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file.txt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@remote:/path/to/destination</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这将把本地的 <code>file.txt</code> 文件复制到远程主机的 <code>/path/to/destination</code> 目录下。</p><ol start="2"><li>从远程主机复制文件到本地主机：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">scp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@remote:/path/to/file.txt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/local/path</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">scp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@remote:/path/to/file.txt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/local/path</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这将把远程主机上的 <code>/path/to/file.txt</code> 文件复制到本地主机的 <code>/local/path</code> 目录下。</p><ol start="3"><li>递归复制整个目录：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">scp</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">directory</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@remote:/path/to/destination</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">scp</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-r</span><span style="color:#24292E;"> </span><span style="color:#032F62;">directory</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@remote:/path/to/destination</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这将递归地复制本地的 <code>directory</code> 目录及其内容到远程主机的 <code>/path/to/destination</code> 目录下。</p><p>请注意，上述示例中的 <code>user</code> 和 <code>remote</code> 需要替换为实际的用户名和远程主机的 IP 地址或主机名。</p><p>这是 SCP 命令的基本用法介绍，你可以根据自己的需求使用不同的选项来满足特定的文件传输需求。</p><h2 id="chmod-命令" tabindex="-1">chmod 命令 <a class="header-anchor" href="#chmod-命令" aria-label="Permalink to &quot;chmod 命令&quot;">​</a></h2><p><code>chmod</code> 是一个用于修改文件或目录权限的命令。它可以控制文件或目录的读、写和执行权限，以及文件的所有者、所属组等属性。</p><p><code>chmod</code> 命令的基本语法如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">chmod</span><span style="color:#E1E4E8;"> [options] mode file</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">chmod</span><span style="color:#24292E;"> [options] mode file</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，<code>options</code> 是可选的，用于指定一些额外的选项。<code>mode</code> 是权限模式，用于指定要设置的权限。<code>file</code> 是要修改权限的文件或目录。</p><p><code>mode</code> 可以使用以下形式之一：</p><ul><li><p>符号模式（Symbolic Mode）：使用符号来表示权限的增加或减少。常用的符号包括：</p><ul><li><code>u</code>：表示文件所有者（user）的权限。</li><li><code>g</code>：表示文件所属组（group）的权限。</li><li><code>o</code>：表示其他用户（others）的权限。</li><li><code>a</code>：表示所有用户的权限，相当于 <code>ugo</code> 的组合。</li><li><code>+</code>：增加权限。</li><li><code>-</code>：减少权限。</li><li><code>=</code>：设置权限。</li></ul><p>例如，<code>u+x</code> 表示给文件所有者添加执行权限，<code>g-rw</code> 表示从文件所属组移除读写权限。</p></li><li><p>数字模式（Numeric Mode）：使用数字来表示权限的组合。每个权限对应一个数字：</p><ul><li>读权限（r）：4</li><li>写权限（w）：2</li><li>执行权限（x）：1</li></ul><p>通过将这些数字相加，可以得到要设置的权限的组合。例如，<code>chmod 755 file</code> 表示给文件所有者赋予读、写和执行权限，给文件所属组和其他用户赋予读和执行权限。</p></li></ul><p><code>chmod</code> 命令的一些常用选项包括：</p><ul><li><code>-R</code>：递归地修改目录及其子目录中的文件权限。</li><li><code>-v</code>：显示详细的操作信息。</li><li><code>-c</code>：只显示发生更改的文件信息。</li></ul><p>下面是一些示例用法：</p><ol><li>将文件设置为可读写执行权限：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">chmod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">777</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">chmod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">777</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>给文件所有者添加执行权限，移除文件所属组的写权限，给其他用户添加读权限：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">chmod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">u+x,g-w,o+r</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">chmod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">u+x,g-w,o+r</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>递归地将目录及其子目录中的文件设置为只读权限：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">chmod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-R</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">444</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">directory</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">chmod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-R</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">444</span><span style="color:#24292E;"> </span><span style="color:#032F62;">directory</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li>给文件添加可执行权限，通常用于脚本</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">chmod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install.sh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">chmod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>请注意，修改文件或目录的权限可能需要管理员权限或文件所有者的权限。确保你有足够的权限来执行 <code>chmod</code> 命令。</p><p>总结起来，<code>chmod</code> 命令是一个用于修改文件或目录权限的命令，可以通过符号模式或数字模式来设置权限。它是管理文件和目录访问权限的重要工具。</p>',81),n=[p];function c(t,i,r,d,h,u){return e(),a("div",null,n)}const m=s(l,[["render",c]]);export{b as __pageData,m as default};
