import{_ as p,V as o,W as c,X as l,Y as n,Z as s,$ as t,a0 as e,D as i}from"./framework-e50407a6.js";const u={},r=n("p",null,"Swagger 是一个用于生成、描述和调用 RESTful 接口的 Web 服务。通俗的来讲，Swagger 就是将项目中所有（想要暴露的）接口展现在页面上，并且可以进行接口调用和测试的服务。",-1),k=n("h2",{id:"openapi-规范",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#openapi-规范","aria-hidden":"true"},"#"),s(" OpenAPI 规范")],-1),d={href:"https://swagger.io/resources/open-api",target:"_blank",rel:"noopener noreferrer"},v={href:"https://smartbear.com/blog/develop/what-is-the-difference-between-swagger-and-openapi/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/OAI/OpenAPI-Specification",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"什么是-swagger",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是-swagger","aria-hidden":"true"},"#"),s(" 什么是 Swagger")],-1),b=n("p",null,"Swagger 是一个用于生成、描述和调用 RESTful 接口的 Web 服务。通俗的来讲，Swagger 就是将项目中所有（想要暴露的）接口展现在页面上，并且可以进行接口调用和测试的服务。",-1),h=n("p",null,"Swagger 有以下 3 个重要的作用：",-1),f=n("ul",null,[n("li",null,"将项目中所有的接口展现在页面上，这样后端程序员就不需要专门为前端使用者编写专门的接口文档；"),n("li",null,"当接口更新之后，只需要修改代码中的 Swagger 描述就可以实时生成新的接口文档了，从而规避了接口文档老旧不能使用的问题；"),n("li",null,"通过 Swagger 页面，我们可以直接进行接口调用，降低了项目开发阶段的调试成本。")],-1),y={href:"https://swagger.io/",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"SpringFox",-1),_={href:"https://github.com/springfox/springfox",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"什么是-knife4j",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是-knife4j","aria-hidden":"true"},"#"),s(" 什么是 Knife4J？")],-1),A=n("code",null,"Knife4j",-1),S=n("code",null,"swagger-bootstrap-ui",-1),q=n("code",null,"Knife4j",-1),I={href:"https://doc.xiaominfo.com/docs/quick-start",target:"_blank",rel:"noopener noreferrer"},j=e(`<h2 id="springboot-使用-swagger" tabindex="-1"><a class="header-anchor" href="#springboot-使用-swagger" aria-hidden="true">#</a> SpringBoot 使用 Swagger</h2><h3 id="引入依赖" tabindex="-1"><a class="header-anchor" href="#引入依赖" aria-hidden="true">#</a> 引入依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义-swagger-配置" tabindex="-1"><a class="header-anchor" href="#自定义-swagger-配置" aria-hidden="true">#</a> 自定义 Swagger 配置</h3><ul><li><p>使用 <code>@EnableOpenApi</code> 开启 Swagger</p></li><li><p>通过 <code>@Bean</code> 配置一个<code></code>Docket\` 对象，来配置 Swagger；</p></li><li><p>其中有一个重点配置是，使用 <code>enable(boolean flag)</code> 来控制 Swagger 是否开启；具体通过 <code>environment.acceptsProfiles()</code> 方法判断当前环境是否符合 <code>Profiles</code> 中定义，将结果传入 <code>enable()</code> 方法。</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableOpenApi</span>
<span class="token annotation punctuation">@ConditionalOnWebApplication</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">ConditionalOnWebApplication<span class="token punctuation">.</span>Type</span><span class="token punctuation">.</span><span class="token constant">SERVLET</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfiguration</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 不生成文档的接口路径
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token constant">DEFAULT_EXCLUDE_PATH</span> <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/actuator/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">openApi</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 不在生产中使用</span>
        <span class="token class-name">Profiles</span> profiles <span class="token operator">=</span> <span class="token class-name">Profiles</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;dev&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> enabled <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">acceptsProfiles</span><span class="token punctuation">(</span>profiles<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// openapi 规范 3.0</span>
        <span class="token class-name">Docket</span> docket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">OAS_30</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span>enabled<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">&quot;ZeusBoot&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置全局请求参数</span>
                <span class="token punctuation">.</span><span class="token function">globalRequestParameters</span><span class="token punctuation">(</span><span class="token function">getGlobalRequestParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 更细粒度的构造器</span>
        <span class="token class-name">ApiSelectorBuilder</span> selectorBuilder <span class="token operator">=</span> docket<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置为添加了 @ApiOperation 注解的接口生成文档</span>
        selectorBuilder<span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">withMethodAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ApiOperation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 配置不生成文档的路径</span>
        <span class="token constant">DEFAULT_EXCLUDE_PATH</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>path <span class="token operator">-&gt;</span> selectorBuilder<span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">negate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 如果需要使用 knife4j 增强的话，需要使用 extensions() 方法</span>
        <span class="token keyword">return</span> docket<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestParameter</span><span class="token punctuation">&gt;</span></span> <span class="token function">getGlobalRequestParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestParameter</span><span class="token punctuation">&gt;</span></span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parameters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestParameterBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;用户 token&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">ParameterType</span><span class="token punctuation">.</span><span class="token constant">HEADER</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>q <span class="token operator">-&gt;</span> q<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> m<span class="token punctuation">.</span><span class="token function">scalarModel</span><span class="token punctuation">(</span><span class="token class-name">ScalarType</span><span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> parameters<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;ZeusBoot Api Documentation&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;ZeusBoot Api Documentation&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">&quot;AlexChen&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://blog.alexchen.tech&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;alexchen.tech@gmail.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接口层面添加-swagger-注解" tabindex="-1"><a class="header-anchor" href="#接口层面添加-swagger-注解" aria-hidden="true">#</a> 接口层面添加 Swagger 注解</h3>`,7),E={href:"https://github.com/swagger-api/swagger-core/wiki/Annotations",target:"_blank",rel:"noopener noreferrer"},P=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;添加用户&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;userParam&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> dataTypeClass <span class="token operator">=</span> <span class="token class-name">UserParam</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserParam</span> userParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="访问-swagger-页面" tabindex="-1"><a class="header-anchor" href="#访问-swagger-页面" aria-hidden="true">#</a> 访问 Swagger 页面</h3><p>使用以下链接打开 Swagger，域名和端口视情况修改：</p>`,3),O={href:"http://localhost:8080/swagger-ui/index.html",target:"_blank",rel:"noopener noreferrer"},R=e(`<h2 id="springboot-使用-knife4j" tabindex="-1"><a class="header-anchor" href="#springboot-使用-knife4j" aria-hidden="true">#</a> SpringBoot 使用 knife4j</h2><h3 id="单纯使用其-ui" tabindex="-1"><a class="header-anchor" href="#单纯使用其-ui" aria-hidden="true">#</a> 单纯使用其 UI</h3><h4 id="引入-pom-依赖" tabindex="-1"><a class="header-anchor" href="#引入-pom-依赖" aria-hidden="true">#</a> 引入 <code>Pom</code> 依赖</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.xiaoymin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>knife4j-spring-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="打开-knife4j-页面" tabindex="-1"><a class="header-anchor" href="#打开-knife4j-页面" aria-hidden="true">#</a> 打开 knife4j 页面</h4>`,5),C={href:"http://localhost:8080/doc.html",target:"_blank",rel:"noopener noreferrer"},B=e(`<h3 id="使用-knife4j-的增强功能" tabindex="-1"><a class="header-anchor" href="#使用-knife4j-的增强功能" aria-hidden="true">#</a> 使用 knife4j 的增强功能</h3><h4 id="引入-pom-依赖-1" tabindex="-1"><a class="header-anchor" href="#引入-pom-依赖-1" aria-hidden="true">#</a> 引入 <code>Pom</code> 依赖</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.xiaoymin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>knife4j-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果开发者使用的是Knife4j 2.x版本，并且Spring Boot版本高于2.4,那么需要在Spring Boot的yml文件中做如下配置：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
    <span class="token key atrule">mvc</span><span class="token punctuation">:</span>
        <span class="token key atrule">pathmatch</span><span class="token punctuation">:</span>
            <span class="token comment"># 配置策略</span>
            <span class="token key atrule">matching-strategy</span><span class="token punctuation">:</span> ant<span class="token punctuation">-</span>path<span class="token punctuation">-</span>matcher
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="springboot-yaml-配置示例" tabindex="-1"><a class="header-anchor" href="#springboot-yaml-配置示例" aria-hidden="true">#</a> SpringBoot yaml 配置示例</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">knife4j</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">documents</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> 
      <span class="token key atrule">group</span><span class="token punctuation">:</span> 2.X版本
      <span class="token key atrule">name</span><span class="token punctuation">:</span> 接口签名
      <span class="token key atrule">locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>sign/*
  <span class="token key atrule">setting</span><span class="token punctuation">:</span>
    <span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN
    <span class="token key atrule">enableSwaggerModels</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">enableDocumentManage</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">swaggerModelName</span><span class="token punctuation">:</span> 实体类列表
    <span class="token key atrule">enableVersion</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableReloadCacheParameter</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableAfterScript</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">enableFilterMultipartApiMethodType</span><span class="token punctuation">:</span> POST
    <span class="token key atrule">enableFilterMultipartApis</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableRequestCache</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">enableHost</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableHostText</span><span class="token punctuation">:</span> 192.168.0.193<span class="token punctuation">:</span><span class="token number">8000</span>
    <span class="token key atrule">enableHomeCustom</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">homeCustomLocation</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>markdown/home.md
    <span class="token key atrule">enableSearch</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableFooter</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableFooterCustom</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">footerCustomContent</span><span class="token punctuation">:</span> Apache License 2.0 <span class="token punctuation">|</span> Copyright  2019<span class="token punctuation">-</span><span class="token punctuation">[</span>浙江八一菜刀股份有限公司<span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//gitee.com/xiaoym/knife4j)
    <span class="token key atrule">enableDynamicParameter</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableDebug</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">enableOpenApi</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enableGroup</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">cors</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">production</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">basic</span><span class="token punctuation">:</span>
    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> test
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">12313</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自定义-swagger-配置-1" tabindex="-1"><a class="header-anchor" href="#自定义-swagger-配置-1" aria-hidden="true">#</a> 自定义 Swagger 配置</h4><p>在 Swagger 配置的基础上，需要多注入 <code>OpenApiExtensionResolver</code>，并通过 <code>docket.extensions()</code> 方法注入扩展，扩展由 knife4j 自动配置类提供。</p><p>如果提示无法注入 <code>OpenApiExtensionResolver</code>，可以通过增加 <code>@EnableKnife4j</code> 引入，在 2.0.6 版本后,只需要在配置文件中配置<code>knife4j.enable=true</code>即可不在使用注解。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableKnife4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableOpenApi</span>
<span class="token annotation punctuation">@ConditionalOnWebApplication</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">ConditionalOnWebApplication<span class="token punctuation">.</span>Type</span><span class="token punctuation">.</span><span class="token constant">SERVLET</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OpenApiConfig</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * open api extension by knife4j.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">OpenApiExtensionResolver</span> openApiExtensionResolver<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">OpenApiConfig</span><span class="token punctuation">(</span><span class="token class-name">OpenApiExtensionResolver</span> openApiExtensionResolver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>openApiExtensionResolver <span class="token operator">=</span> openApiExtensionResolver<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">openApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">OAS_30</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">&quot;defaultGroup&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">withMethodAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ApiOperation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">extensions</span><span class="token punctuation">(</span>openApiExtensionResolver<span class="token punctuation">.</span><span class="token function">buildExtensions</span><span class="token punctuation">(</span>groupName<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">extensions</span><span class="token punctuation">(</span>openApiExtensionResolver<span class="token punctuation">.</span><span class="token function">buildSettingExtensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment">// .other()</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="打开-knife4j-页面-1" tabindex="-1"><a class="header-anchor" href="#打开-knife4j-页面-1" aria-hidden="true">#</a> 打开 knife4j 页面</h4><p>在接口中使用 Swagger 注解，添加文档注释后，使用下面链接打开 knife4j，域名和端口视情况修改：</p>`,13),T={href:"http://localhost:8080/doc.html",target:"_blank",rel:"noopener noreferrer"},D=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),s(" 参考资料")],-1),L={href:"https://github.com/springfox/springfox",target:"_blank",rel:"noopener noreferrer"},N={href:"https://doc.xiaominfo.com/docs/quick-start",target:"_blank",rel:"noopener noreferrer"},M={href:"https://pdai.tech/md/spring/springboot/springboot-x-interface-doc.html",target:"_blank",rel:"noopener noreferrer"};function H(V,U){const a=i("ExternalLinkIcon");return o(),c("div",null,[r,l(" more "),k,n("p",null,[n("a",d,[s("OpenAPI"),t(a)]),s(" 规范（OAS）是一种通用的、和编程语言无关的 API 描述规范，使人类和计算机都可以发现和理解服务的功能，而无需访问源代码、文档或针对接口进行嗅探。正确定义后，使用者可以使用最少的实现逻辑来理解远程服务并与之交互。")]),n("p",null,[s("OpenAPI 始于 Swagger 规范，Swagger 规范已于 "),n("a",v,[s("2015 年捐赠给 Linux 基金会后改名为 OpenAPI"),t(a)]),s("，并定义最新的规范为 OpenAPI 3.0。")]),n("p",null,[s("官方GitHub地址： "),n("a",m,[s("OpenAPI-Specification"),t(a)])]),g,b,h,f,n("p",null,[s("Swagger3完全遵循了 OpenAPI 规范。Swagger 官网地址："),n("a",y,[s("https://swagger.io/ (opens new window)"),t(a)])]),n("p",null,[s("在 Spring 中，"),w,s(" 是 Swagger 规范的实现，其 "),n("a",_,[s("Github 地址"),t(a)]),s("。")]),x,n("p",null,[A,s(" 的前身是 "),S,s("，这是一个 Swagger 的 UI 增强方案，随着不断改进，更名为 "),q,s("，其"),n("a",I,[s("官网地址"),t(a)]),s("。")]),j,n("p",null,[s("Swagger 注解见"),n("a",E,[s("官方文档"),t(a)])]),P,n("p",null,[n("a",O,[s("http://localhost:8080/swagger-ui/index.html"),t(a)])]),R,n("p",null,[n("a",C,[s("http://localhost:8080/doc.html"),t(a)])]),B,n("p",null,[n("a",T,[s("http://localhost:8080/doc.html"),t(a)])]),D,n("ul",null,[n("li",null,[n("p",null,[n("a",L,[s("Springfox"),t(a)])])]),n("li",null,[n("p",null,[n("a",N,[s("knife4j"),t(a)])])]),n("li",null,[n("p",null,[n("a",M,[s("Java 全栈知识体系"),t(a)])])])])])}const G=p(u,[["render",H],["__file","11-swagger.html.vue"]]);export{G as default};
