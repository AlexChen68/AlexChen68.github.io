import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,b as n,d as p,f as t,e as s,r as l}from"./app.fdaad276.js";const i={},u=t(`<h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p><code>HashMap</code> \u662F java \u4E2D Map \u63A5\u53E3\u57FA\u4E8E\u54C8\u5E0C\u8868\u7684\u5B9E\u73B0\uFF0C\u7528\u4E8E\u5B58\u50A8 key-value \u952E\u503C\u5BF9\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u63D0\u4F9B\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1) \u7684\u3001\u57FA\u4E8E key \u7EA7\u522B\u7684 get/put \u7B49\u64CD\u4F5C\u3002</p><p><strong>\u54C8\u5E0C\u8868</strong>\uFF08\u53C8\u6210\u6563\u5217\u8868\uFF09\u662F\u4E00\u79CD\u6839\u636E\u5173\u952E\u7801\u503C(Key-value)\u800C\u76F4\u63A5\u8FDB\u884C\u8BBF\u95EE\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5B83\u901A\u8FC7\u628A\u5173\u952E\u7801\u503C\u6620\u5C04\u5230\u8868\u4E2D\u4E00\u4E2A\u4F4D\u7F6E\u6765\u8BBF\u95EE\u8BB0\u5F55\uFF0C\u4EE5\u52A0\u5FEB\u67E5\u627E\u7684\u901F\u5EA6\u3002\u8FD9\u4E2A\u6620\u5C04\u51FD\u6570\u53EB\u505A<strong>\u6563\u5217\u51FD\u6570</strong>\uFF0C\u5B58\u653E\u8BB0\u5F55\u7684\u6570\u7EC4\u53EB\u505A\u6563\u5217\u8868\u3002</p><p>\u4E0D\u540C\u7684 key\uFF0C\u7ECF\u8FC7\u54C8\u5E0C\u51FD\u6570\u8F6C\u6362\u540E\uFF0C\u53EF\u80FD\u5F97\u5230\u540C\u4E00\u4E2A\u5730\u5740\uFF0C\u8FD9\u79CD\u60C5\u51B5\u79F0\u4E3A<strong>\u54C8\u5E0C\u51B2\u7A81</strong>\u3002\u5728 Java \u7684 HashMap \u4E2D\uFF0C\u89E3\u51B3\u51B2\u7A81\u7684\u65B9\u5F0F\u662F\u4F7F\u7528<strong>\u94FE\u8868\u6CD5</strong>\uFF1A\u901A\u8FC7\u5C06\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\u5BF9\u5E94\u4E00\u4E2A\u94FE\u8868\uFF0C\u6211\u4EEC\u5C06\u76F8\u540C\u7684 <code>hash(key) % size</code> \u653E\u5230\u5BF9\u5E94\u4E0B\u6807\u7684\u94FE\u8868\u4E2D\u5373\u53EF\u3002</p><p>\u5F53\u8FDB\u884C\u67E5\u8BE2\u65F6\uFF0C\u9700\u8981\u8FDB\u884C\u4E24\u6B65\uFF1A</p><ol><li>\u5BF9 key \u8FDB\u884C\u6563\u5217\u51FD\u6570\u8BA1\u7B97 <code>hash(key) % size</code>\uFF0C\u5F97\u5230\u6570\u7EC4\u4E2D\u7684\u7D22\u5F15 index\uFF0C\u8FD9\u4E00\u6B65\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\uFF1B</li><li>\u901A\u8FC7 index \u67E5\u8BE2\u5230\u7684\u94FE\u8868\u4E2D\uFF0C\u901A\u8FC7\u5339\u914D key \u503C\uFF0C\u5F97\u5230\u5BF9\u5E94\u7684 value\uFF0C\u8FD9\u4E00\u6B65\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F O(N);</li></ol><p>\u53EF\u4EE5\u4F18\u5316\u7684\u5730\u65B9\u5728\u7B2C\u4E8C\u6B65\uFF0C\u901A\u8FC7\u4F7F\u7528\u6BD4\u666E\u901A\u94FE\u8868\u66F4\u4F18\u7684\u6570\u636E\u7ED3\u6784\uFF08\u6BD4\u5982\uFF1A\u8DF3\u8868\u3001\u7EA2\u9ED1\u6811\u7B49\uFF09\uFF0C\u53EF\u4EE5\u8FDB\u4E00\u6B65\u63D0\u9AD8 HashMap \u7684\u6027\u80FD\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u4ECE JDK 1.8 \u5F00\u59CB\uFF0C\u5C31\u4F7F\u7528\u4E86\u201D\u6570\u7EC4 + \u94FE\u8868 + \u7EA2\u9ED1\u6811\u201C\u7684\u6570\u636E\u7ED3\u6784\u3002</p><h2 id="\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u56FE" aria-hidden="true">#</a> \u7C7B\u56FE</h2><p><img src="https://cdn.jsdelivr.net/gh/alexchen68/images@master/blog/java/hashmap_class.png" alt="HashMap \u7C7B\u56FE" title=":size=60%" loading="lazy"></p><p><code>HashMap</code> \u5B9E\u73B0\u4E86\u4E09\u4E2A\u63A5\u53E3\uFF1A</p><ul><li><code>java.io.Serializable</code> \u5E8F\u5217\u5316\u63A5\u53E3</li><li><code>java.lang.Cloneable</code> \u53EF\u514B\u9686\u63A5\u53E3</li><li><code>java.util.Map</code> \u952E\u503C\u5BF9\u63A5\u53E3</li></ul><p>\u7EE7\u627F\u4E86\u62BD\u8C61\u7684 Map \u63A5\u53E3 <code>AbstracMap</code>\uFF0C\u8FD9\u4E2A\u62BD\u8C61\u7C7B\u63D0\u4F9B\u4E86 Map \u7684\u4E00\u4E9B\u57FA\u672C\u5B9E\u73B0\u3002</p><h2 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h2><p>\u7C7B\u5C5E\u6027</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u9ED8\u8BA4\u521D\u59CB\u5BB9\u91CF - \u5FC5\u987B\u662F 2 \u7684\u5E42</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span>

<span class="token comment">// \u6700\u5927\u5BB9\u91CF\uFF0C\u5FC5\u987B\u662F 2 \u7684\u5E42\uFF0C\u4E14\u5C0F\u4E8E 1 &lt;&lt; 30</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>

<span class="token comment">// \u9ED8\u8BA4\u8D1F\u8F7D\u56E0\u5B50</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">DEFAULT_LOAD_FACTOR</span> <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>

<span class="token comment">// \u94FE\u8868\u6811\u5316\u6210\u7EA2\u9ED1\u6811\u7684\u9608\u503C\u957F\u5EA6\uFF08\u5FC5\u987B\u5927\u4E8E 2 \u5E76\u4E14\u5E94\u8BE5\u81F3\u5C11\u4E3A 8\uFF09</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TREEIFY_THRESHOLD</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>

<span class="token comment">//\u7EA2\u9ED1\u6811\u8F6C\u6362\u4E3A\u94FE\u8868\u7684\u9608\u503C\u957F\u5EA6\u3002\u5E94\u5C0F\u4E8E TREEIFY_THRESHOLD\uFF0C\u5E76\u4E14\u6700\u591A 6 \u4EE5\u5728\u79FB\u9664\u65F6\u8FDB\u884C\u6536\u7F29\u68C0\u6D4B</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">UNTREEIFY_THRESHOLD</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

<span class="token comment">// HashMap \u5141\u8BB8\u6811\u5316\u7684\u6700\u5C0F key-value \u952E\u503C\u5BF9\u6570\uFF0C\u5E94\u81F3\u5C11\u4E3A 4 * TREEIFY_THRESHOLD \u4EE5\u907F\u514D\u8C03\u6574\u5927\u5C0F\u548C\u6811\u5316\u9608\u503C\u4E4B\u95F4\u7684\u51B2\u7A81</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MIN_TREEIFY_CAPACITY</span> <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u4F8B\u5C5E\u6027</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5E95\u5C42\u5B58\u50A8\u7684\u6570\u7EC4\uFF0C\u8BE5\u8868\u5728\u9996\u6B21\u4F7F\u7528\u65F6\u521D\u59CB\u5316\uFF0C\u5E76\u6839\u636E\u9700\u8981\u8C03\u6574\u5927\u5C0F\u3002\u5206\u914D\u65F6\uFF0C\u957F\u5EA6\u59CB\u7EC8\u662F 2 \u7684\u5E42</span>
<span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

<span class="token comment">// \u8C03\u7528 \`#entrySet()\` \u65B9\u6CD5\u540E\u7684\u7F13\u5B58</span>
<span class="token keyword">transient</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entrySet<span class="token punctuation">;</span>

<span class="token comment">// \u952E\u503C\u5BF9\u6570\u91CF</span>
<span class="token keyword">transient</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

<span class="token comment">// \u6B64 HashMap \u5DF2\u5728\u7ED3\u6784\u4E0A\u4FEE\u6539\u7684\u6B21\u6570</span>
<span class="token keyword">transient</span> <span class="token keyword">int</span> modCount<span class="token punctuation">;</span>

<span class="token comment">// \u9600\u503C\uFF0C\u5F53 size \u8D85\u8FC7 threshold \u65F6\uFF0C\u4F1A\u8FDB\u884C\u6269\u5BB9\uFF08\u5BB9\u91CF * \u8D1F\u8F7D\u56E0\u5B50\uFF09</span>
<span class="token keyword">int</span> threshold<span class="token punctuation">;</span>

<span class="token comment">// \u54C8\u5E0C\u8868\u7684\u8D1F\u8F7D\u56E0\u5B50</span>
<span class="token keyword">final</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8D1F\u8F7D = \u6570\u7EC4\u5BB9\u91CF / \u952E\u503C\u5BF9\u6570\u91CF\uFF08\u7531\u4E8E\u6709\u54C8\u5E0C\u51B2\u7A81\uFF0C\u6570\u7EC4\u7684\u4E00\u4E2A\u4F4D\u7F6E\u53EF\u80FD\u5B58\u5728\u591A\u4E2A\u5143\u7D20\uFF0C\u56E0\u6B64\u952E\u503C\u5BF9\u6570\u91CF\u4F1A\u5927\u4E8E\u6570\u7EC4\u5BB9\u91CF\uFF09\uFF0C\u5F53\u8D1F\u8F7D\u56E0\u5B50\u5927\u4E8E\u8BBE\u5B9A\u7684\u8D1F\u8F7D\u56E0\u5B50\uFF08\u9ED8\u8BA4\u4E3A 0.75\uFF09\u65F6\uFF0C\u5C31\u9700\u8981\u8FDB\u884C\u6269\u5BB9\u3002</p><h2 id="\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u7C7B" aria-hidden="true">#</a> \u5185\u90E8\u7C7B</h2><h3 id="node-k-v" tabindex="-1"><a class="header-anchor" href="#node-k-v" aria-hidden="true">#</a> Node&lt;K, V&gt;</h3><p>\u5B9E\u73B0\u4E86 Map.Entry \u63A5\u53E3\uFF0C\u8BE5\u63A5\u53E3\u5B9A\u4E49\u5728 <code>java.util.Map</code> \u63A5\u53E3\u4E2D\uFF0CMap \u4E2D\u6709\u4E2A <code>Set&lt;Map.Entry&lt;K, V&gt;&gt; entrySet()</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u8FD4\u56DE\u6620\u5C04\u7684 Set \u96C6\u5408\uFF0CEntry \u8868\u793A Map \u4E2D\u7684\u4E00\u4E2A\u5B9E\u4F53(key-value)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// \u54C8\u5E0C\u503C</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
    <span class="token comment">// \u952E</span>
    <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
    <span class="token comment">// \u503C</span>
    <span class="token class-name">V</span> value<span class="token punctuation">;</span>
    <span class="token comment">// \u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>

    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hash <span class="token operator">=</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span> <span class="token keyword">return</span> key<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">V</span> oldValue <span class="token operator">=</span> value<span class="token punctuation">;</span>
        value <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
        <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>o<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treenode-k-v" tabindex="-1"><a class="header-anchor" href="#treenode-k-v" aria-hidden="true">#</a> TreeNode&lt;K, V&gt;</h3><p>\u7EA2\u9ED1\u6811\u7ED3\u70B9 <code>TreeNode&lt;K, V&gt;</code>\uFF0C\u5B83\u7EE7\u627F\u4E86 <code>LinkedHashMap.Entry&lt;K,V&gt;</code>\uFF0C\u800C <code>LinkedHashMap.Entry&lt;K,V&gt;</code> \u53C8\u7EE7\u627F\u4E86 <code>HashMap.Node&lt;K,V&gt;</code>\u3002\u56E0\u6B64\uFF0C <code>table</code> \u6570\u7EC4\u4E2D\u7684 <code>Node&lt;K, V&gt;</code> \u5143\u7D20\u53EF\u4EE5\u4F7F\u7528\u7EA2\u9ED1\u6811\u66FF\u6362\uFF0C\u6765\u8868\u73B0\u66F4\u4F18\u79C0\u7684\u67E5\u8BE2\u6027\u80FD\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// HashMap.java</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">;</span>  <span class="token comment">// red-black tree links</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> left<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>    <span class="token comment">// needed to unlink next upon deletion</span>
    <span class="token keyword">boolean</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// LinkedHashMap.java</span>
<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> before<span class="token punctuation">,</span> after<span class="token punctuation">;</span>
    <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h2><h3 id="\u6307\u5B9A\u5BB9\u91CF\u548C\u8D1F\u8F7D\u56E0\u5B50" tabindex="-1"><a class="header-anchor" href="#\u6307\u5B9A\u5BB9\u91CF\u548C\u8D1F\u8F7D\u56E0\u5B50" aria-hidden="true">#</a> \u6307\u5B9A\u5BB9\u91CF\u548C\u8D1F\u8F7D\u56E0\u5B50</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BB9\u91CF\u4E0D\u80FD\u5C0F\u4E8E 0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal initial capacity: &quot;</span> <span class="token operator">+</span>
                                           initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6307\u5B9A\u5BB9\u91CF\u9650\u5B9A\u4E0D\u80FD\u8D85\u8FC7\u6700\u5927\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span>
        initialCapacity <span class="token operator">=</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">;</span>
    <span class="token comment">// \u68C0\u67E5\u8D1F\u8F7D\u56E0\u5B50\u6709\u6548\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">Float</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal load factor: &quot;</span> <span class="token operator">+</span>
                                           loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BBE\u7F6E loadFactor \u5C5E\u6027</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> loadFactor<span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97 threshold \u9600\u503C\uFF0C\u9608\u503C\u4E3A\u5927\u4E8E\u5BB9\u91CF\u7684\u6700\u5C0F 2 \u7684 N \u6B21\u65B9</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>threshold <span class="token operator">=</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DE\u5927\u4E8E cap \u7684\u6700\u5C0F 2 \u7684 N \u6B21\u65B9\uFF0C\u8BE5\u7B97\u6CD5\u8BA9\u6700\u9AD8\u4F4D\u76841\u540E\u9762\u7684\u4F4D\u5168\u53D8\u4E3A1\uFF0C\u6700\u540E\u518D\u52A01</span>
<span class="token comment">// &gt;&gt;&gt; \u8868\u793A\u65E0\u7B26\u53F7\u53F3\u79FB</span>
<span class="token comment">// a |= b \u7B49\u6548\u4E8E a = a | b</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> cap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> cap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">:</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u5B9A\u5BB9\u91CF" tabindex="-1"><a class="header-anchor" href="#\u6307\u5B9A\u5BB9\u91CF" aria-hidden="true">#</a> \u6307\u5B9A\u5BB9\u91CF</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6307\u5B9A\u5BB9\u91CF\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u8D1F\u8F7D\u56E0\u5B50</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> <span class="token constant">DEFAULT_LOAD_FACTOR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65E0\u53C2\u6784\u9020" tabindex="-1"><a class="header-anchor" href="#\u65E0\u53C2\u6784\u9020" aria-hidden="true">#</a> \u65E0\u53C2\u6784\u9020</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BBE\u7F6E\u4E3A\u521D\u59CB\u8D1F\u8F7D\u56E0\u5B50 0.75\uFF0C\u5176\u4ED6\u7684\u4E3A\u9ED8\u8BA4</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> <span class="token constant">DEFAULT_LOAD_FACTOR</span><span class="token punctuation">;</span> <span class="token comment">// all other fields defaulted</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u5B9A-map" tabindex="-1"><a class="header-anchor" href="#\u6307\u5B9A-map" aria-hidden="true">#</a> \u6307\u5B9A Map</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> <span class="token constant">DEFAULT_LOAD_FACTOR</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6279\u91CF\u5C06 map \u952E\u503C\u5BF9\u653E\u5165 table \u4E2D</span>
    <span class="token function">putMapEntries</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">putMapEntries</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">,</span> <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u5F85\u6DFB\u52A0\u6570\u91CF</span>
    <span class="token keyword">int</span> s <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// table \u4E3A null\uFF0C\u5EF6\u8FDF\u521D\u59CB\u5316\u7684\u8BC1\u660E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// pre-size</span>
            <span class="token comment">// \u8BA1\u7B97\u9700\u8981\u521D\u59CB\u5316\u7684 table \u6570\u7EC4\u5927\u5C0F</span>
            <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>s <span class="token operator">/</span> loadFactor<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1.0F</span><span class="token punctuation">;</span>
            <span class="token comment">// \u9650\u5B9A\u4E0D\u8D85\u8FC7\u6700\u5927\u5BB9\u91CF</span>
            <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                     <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u5927\u4E8E\u9608\u503C\uFF0C\u8BBE\u5B9A\u65B0\u7684\u9608\u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
                threshold <span class="token operator">=</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C table \u975E\u7A7A</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
            <span class="token comment">// \u5982\u679C\u8D85\u8FC7\u9608\u503C\uFF0C\u9700\u8981\u6269\u5BB9</span>
            <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386 m\uFF0C\u6328\u4E2A\u63D2\u5165\u5230 HashMap \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> m<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">K</span> key <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">V</span> value <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u8FD9\u4E9B\u6784\u9020\u65B9\u6CD5\u7684 <code>table</code> \u6570\u7EC4\u5C5E\u6027\u90FD\u6CA1\u6709\u521D\u59CB\u5316\uFF0C\u91C7\u7528\u4E86\u5EF6\u8FDF\u521D\u59CB\u5316\u7684\u7B56\u7565</p></li><li><p>\u4E3A\u4EC0\u4E48\u8981\u6C42\u5BB9\u91CF\u662F 2 \u7684\u5E42\u6B21\uFF1F</p><p>HashMap\u5BB9\u91CF\u53D62\u7684n\u6B21\u65B9\uFF0C\u4E3B\u8981\u4E0Ehash\u5BFB\u5740\u6709\u5173\u3002\u5728put(key,value)\u65F6\uFF0CputVal()\u65B9\u6CD5\u4E2D\u901A\u8FC7i = (n - 1) &amp; hash\u6765\u8BA1\u7B97key\u7684\u6563\u5217\u5730\u5740\u3002\u5176\u5B9E\uFF0Ci = (n - 1) &amp; hash\u662F\u4E00\u4E2A%\u64CD\u4F5C\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0CHashMap\u662F\u901A\u8FC7%\u8FD0\u7B97\u6765\u83B7\u5F97key\u7684\u6563\u5217\u5730\u5740\u7684\u3002\u4F46\u662F\uFF0C%\u8FD0\u7B97\u7684\u901F\u5EA6\u5E76\u6CA1\u6709&amp;\u7684\u64CD\u4F5C\u901F\u5EA6\u5FEB\u3002\u800C&amp;\u64CD\u4F5C\u80FD\u4EE3\u66FF%\u8FD0\u7B97\uFF0C\u5FC5\u987B\u6EE1\u8DB3\u4E00\u5B9A\u7684\u6761\u4EF6\uFF0C\u4E5F\u5C31\u662Fa%b=a&amp;(b-1)\u4EC5\u5F53b\u662F2\u7684n\u6B21\u65B9\u7684\u65F6\u5019\u65B9\u80FD\u6210\u7ACB\u3002\u8FD9\u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48HashMap\u7684\u5BB9\u91CF\u9700\u8981\u4FDD\u6301\u57282\u7684n\u6B21\u65B9\u4E86\u3002</p></li></ul><h2 id="\u54C8\u5E0C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u51FD\u6570" aria-hidden="true">#</a> \u54C8\u5E0C\u51FD\u6570</h2><p>\u5BF9\u4E8E\u54C8\u5E0C\u51FD\u6570\u6765\u8BF4\uFF0C\u6709\u4E24\u4E2A\u65B9\u9762\u7279\u522B\u91CD\u8981\uFF1A</p><ul><li>\u6027\u80FD\u8DB3\u591F\u9AD8\u3002\u56E0\u4E3A\u57FA\u672C HashMap \u6240\u6709\u7684\u64CD\u4F5C\uFF0C\u90FD\u9700\u8981\u7528\u5230\u54C8\u5E0C\u51FD\u6570\u3002</li><li>\u5BF9\u4E8E\u8BA1\u7B97\u51FA\u6765\u7684\u54C8\u5E0C\u503C\u8DB3\u591F\u79BB\u6563\uFF0C\u4FDD\u8BC1\u54C8\u5E0C\u51B2\u7A81\u7684\u6982\u7387\u66F4\u5C0F\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5177\u4F53\u6B65\u9AA4\u4E3A\uFF1A</p><ol><li>\u5B9A\u4E49 int \u53D8\u91CF h\uFF0C\u5F53 key \u4E3A null \u65F6\uFF0C \u8FD4\u56DE\u7684\u54C8\u5E0C\u503C\u5C31\u4E3A 0\uFF1B</li><li>key \u4E0D\u4E3A null \u65F6\uFF0C\u8C03\u7528 key \u7684 hashCode \u51FD\u6570\uFF0C\u5E76\u8D4B\u503C\u7ED9 h\uFF1B</li><li>h \u548C h \u7684\u65E0\u7B26\u53F7\u53F3\u79FB16\u4F4D\u7684\u503C\u8FDB\u884C\u5F02\u6216\u8FD0\u7B97\uFF0C\u5F97\u5230\u6700\u7EC8\u7684\u54C8\u5E0C\u503C\u3002</li></ol><p><img src="https://cdn.jsdelivr.net/gh/AlexChen68/images@master/blog/java/hashmap_hash.png" alt="HashMap \u7684 hash \u51FD\u6570" loading="lazy"></p><h2 id="\u6570\u7EC4\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6269\u5BB9" aria-hidden="true">#</a> \u6570\u7EC4\u6269\u5BB9</h2><p>HashMap \u5185\u90E8\u7684\u6570\u7EC4 <code>table</code> \uFF0C\u5728\u521D\u59CB\u5316\u7684\u65F6\u5019\u662F\u4E0D\u521B\u5EFA\u7684\uFF0C\u800C\u662F\u5728\u9996\u6B21\u6DFB\u52A0\u952E\u503C\u5BF9\u65F6\uFF0C\u901A\u8FC7 <code>resize()</code> \u521D\u59CB\u5316\u3002\u5728 <code>resize()</code> \u65B9\u6CD5\u4E2D\uFF0C\u5982\u679C\u6570\u7EC4\u5DF2\u7ECF\u521B\u5EFA\uFF0C\u5219\u4F1A\u5BF9\u5176\u8FDB\u884C 2 \u500D\u5BB9\u91CF\u7684\u6269\u5C55\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// 1. \u8BA1\u7B97\u65B0\u7684\u5BB9\u91CF\u548C\u6269\u5BB9\u9600\u503C\uFF0C\u5E76\u521B\u5EFA\u65B0\u7684 table \u6570\u7EC4</span>
    <span class="token comment">// 1.1 \u5982\u679C\u6570\u7EC4\u4E0D\u4E3A\u7A7A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8D85\u8FC7\u6700\u5927\u5BB9\u91CF\uFF0C\u5219\u76F4\u63A5\u8BBE\u7F6E threshold \u9600\u503C\u4E3A Integer.MAX_VALUE \uFF0C\u4E0D\u518D\u5141\u8BB8\u6269\u5BB9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// newCap = oldCap &lt;&lt; 1 \uFF0C\u76EE\u7684\u662F\u4E24\u500D\u6269\u5BB9\uFF1B\u5F53\u524D\u5BB9\u91CF\u5927\u4E8E\u9ED8\u8BA4\u5BB9\u91CF</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">&amp;&amp;</span>
                 oldCap <span class="token operator">&gt;=</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">)</span>
            <span class="token comment">// newThr \u8BBE\u7F6E\u4E3A oldThr \u7684 2 \u500D</span>
            newThr <span class="token operator">=</span> oldThr <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 1.2 \u6570\u7EC4\u4E3A\u7A7A\uFF0C\u9700\u8981\u521D\u59CB\u5316\uFF1B\u3010\u975E\u9ED8\u8BA4\u6784\u9020\u65B9\u6CD5\u3011oldThr \u5927\u4E8E 0 \uFF0C\u5219\u4F7F\u7528 oldThr \u4F5C\u4E3A\u65B0\u7684\u5BB9\u91CF</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// initial capacity was placed in threshold</span>
        <span class="token comment">// \u65B0\u7684\u5BB9\u91CF\u8BBE\u7F6E\u4E3A\u65E7\u7684\u9608\u503C\uFF08\u521D\u59CB\u5316\u65F6\u4E3A\u5927\u4E8E\u5BB9\u91CF\u7684\u6700\u5C0F 2 \u7684 N \u6B21\u65B9\uFF09</span>
        newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//1.3\u3010\u9ED8\u8BA4\u6784\u9020\u65B9\u6CD5\u3011oldThr \u7B49\u4E8E 0 \uFF0C\u5219\u4F7F\u7528 DEFAULT_INITIAL_CAPACITY \u4F5C\u4E3A\u65B0\u7684\u5BB9\u91CF\uFF0C</span>
        <span class="token comment">// \u4F7F\u7528 DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY \u4F5C\u4E3A\u65B0\u7684\u5BB9\u91CF</span>
        newCap <span class="token operator">=</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">;</span><span class="token comment">// 16</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_LOAD_FACTOR</span> <span class="token operator">*</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 0.75 * 16 = 12</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 1.4 \u5982\u679C\u4E0A\u8FF0\u7684\u903B\u8F91\uFF0C\u672A\u8BA1\u7B97\u65B0\u7684\u9600\u503C\uFF0C\u5219\u4F7F\u7528 newCap * loadFactor \u4F5C\u4E3A\u65B0\u7684\u9600\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">?</span>
                  <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8D4B\u503C\u65B0\u9608\u503C</span>
    threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>
    <span class="token comment">// 2. \u6269\u5BB9\u6570\u7EC4\uFF1A</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 2.1 \u521B\u5EFA newCap \u5927\u5C0F\u7684\u7ED3\u70B9\u6570\u7EC4\uFF0C\u5E76\u8D4B\u503C\u7ED9 table</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
    table <span class="token operator">=</span> newTab<span class="token punctuation">;</span>
    <span class="token comment">// 2.2 \u5982\u679C\u65E7 table \u4E0D\u4E3A\u7A7A\uFF0C\u5219\u9700\u8981\u590D\u5236\u6570\u636E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldTab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u904D\u5386\u65E7\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldCap<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7F13\u5B58\u7ED3\u70B9</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 2.2.1 \u65E7\u6570\u7EC4\u6570\u636E\u7F6E\u4E3A null</span>
                oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token comment">// 2.2.2 \u5982\u679C\u7ED3\u70B9\u94FE\u8868\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u76F4\u63A5\u8D4B\u503C\u7ED9\u65B0\u6570\u7EC4\u5373\u53EF</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token comment">// 2.2.3 \u5982\u679C\u7ED3\u70B9\u662F\u7EA2\u9ED1\u6811\uFF0C\u8C03\u7528\u7EA2\u9ED1\u6811\u7684 split \u65B9\u6CD5\uFF0C\u5C06\u6570\u636E\u8D4B\u503C\u5230\u65B0\u6570\u7EC4\u4E2D</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newTab<span class="token punctuation">,</span> j<span class="token punctuation">,</span> oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 2.2.4 \u5982\u679C\u7ED3\u70B9\u662F\u94FE\u8868</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// preserve order</span>
                    <span class="token comment">// HashMap \u662F\u6210\u500D\u6269\u5BB9\uFF0C\u8FD9\u6837\u539F\u6765\u4F4D\u7F6E\u7684\u94FE\u8868\u7684\u8282\u70B9\u4EEC\uFF0C\u4F1A\u88AB\u5206\u6563\u5230\u65B0\u7684 table \u7684\u4E24\u4E2A\u4F4D\u7F6E\u4E2D\u53BB</span>
                    <span class="token comment">// \u901A\u8FC7 e.hash &amp; oldCap \u8BA1\u7B97\uFF0C\u6839\u636E\u7ED3\u679C\u5206\u5230\u9AD8\u4F4D\u3001\u548C\u4F4E\u4F4D\u7684\u4F4D\u7F6E\u4E2D\u3002</span>
                    <span class="token comment">// 1. \u5982\u679C\u7ED3\u679C\u4E3A 0 \u65F6\uFF0C\u5219\u653E\u7F6E\u5230\u4F4E\u4F4D</span>
                    <span class="token comment">// 2. \u5982\u679C\u7ED3\u679C\u975E 1 \u65F6\uFF0C\u5219\u653E\u7F6E\u5230\u9AD8\u4F4D</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
                    <span class="token keyword">do</span> <span class="token punctuation">{</span>
                        <span class="token comment">// next \u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
                        next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                        <span class="token comment">// \u6EE1\u8DB3\u4F4E\u4F4D</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> oldCap<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token comment">// \u6EE1\u8DB3\u9AD8\u4F4D</span>
                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u8BBE\u7F6E\u4F4E\u4F4D\u5230\u65B0\u7684 newTab \u7684 j \u4F4D\u7F6E\u4E0A</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u8BBE\u7F6E\u9AD8\u4F4D\u5230\u65B0\u7684 newTab \u7684 j + oldCap \u4F4D\u7F6E\u4E0A</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        newTab<span class="token punctuation">[</span>j <span class="token operator">+</span> oldCap<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newTab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46),k=s("\u5728 2.2.4 \u4E2D\uFF0C\u5982\u4F55\u786E\u5B9A\u94FE\u8868\u6269\u5BB9\u540E\u7684\u4F4D\u7F6E\uFF0C\u53EF\u4EE5\u53C2\u8003\u8FD9\u7BC7\u6587\u7AE0 "),r={href:"https://www.cnblogs.com/liaozhiwei/p/15644325.html",target:"_blank",rel:"noopener noreferrer"},d=s("HashMap\u6269\u5BB9\u673A\u5236"),v=t(`<h2 id="map\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#map\u64CD\u4F5C" aria-hidden="true">#</a> Map\u64CD\u4F5C</h2><h3 id="\u6DFB\u52A0\u952E\u503C\u5BF9" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u952E\u503C\u5BF9" aria-hidden="true">#</a> \u6DFB\u52A0\u952E\u503C\u5BF9</h3><p><strong>1. \u6DFB\u52A0\u5355\u4E2A\u952E\u503C\u5BF9</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u952E\u4E0D\u5B58\u5728\u65F6\uFF0C\u6DFB\u52A0\u952E\u503C\u5BF9\uFF1B\u952E\u5B58\u5728\u65F6\uFF0C\u66F4\u65B0 key \u5BF9\u5E94\u7684 value</span>
<span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4EC5\u5728\u952E\u5B58\u5728\u65F6\uFF0C\u6DFB\u52A0\u952E\u503C\u5BF9</span>
<span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">putIfAbsent</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span> <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// table \u6570\u7EC4</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span>
    <span class="token comment">// \u5BF9\u5E94\u4F4D\u7F6E\u7684 node \u7ED3\u70B9</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> 
    <span class="token comment">// n \u4E3A\u6570\u7EC4\u957F\u5EA6\uFF0Ci \u4E3A\u952E\u503C\u5BF9\u5728\u6570\u7EC4\u4E2D\u7684\u7D22\u5F15</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5982\u679C table \u672A\u521D\u59CB\u5316\uFF0C\u6216\u8005\u5BB9\u91CF\u4E3A 0 \uFF0C\u5219\u8FDB\u884C\u6269\u5BB9</span>
        n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u7D22\u5F15 i = (n - 1) &amp; hash\uFF0C\u8D4B\u503C p \u4E3A i \u4F4D\u7F6E\u7684\u7ED3\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5982\u679C\u7ED3\u70B9\u4E3A\u7A7A\uFF0C\u5219\u65B0\u5EFA\u4E00\u4E2A\uFF0C\u5E76\u5199\u5165\u6570\u7EC4\u4E2D</span>
        tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u5BF9\u5E94\u4F4D\u7F6E\u7684 Node \u8282\u70B9\u975E\u7A7A\uFF0C\u5219\u53EF\u80FD\u5B58\u5728\u54C8\u5E0C\u51B2\u7A81</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7528\u4E8E\u5B58\u50A8 key \u5BF9\u5E94\u7684\u65E7\u7ED3\u70B9</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> 
        <span class="token comment">// \u7F13\u5B58 key</span>
        <span class="token class-name">K</span> k<span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u7ED3\u70B9\u7684\u54C8\u5E0C\u503C\u7B49\u4E8E hash \u53C2\u6570\uFF0C\u4E14\u5F53\u524D\u7ED3\u70B9\u7684 key \u7B49\u4E8E\u53C2\u6570\u7684 key\uFF0C\u5219\u8868\u660E\u5F53\u524D\u7ED3\u70B9 p \u5C31\u662F\u8981\u627E\u7684\u7ED3\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            e <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u7ED3\u70B9 p \u662F\u7EA2\u9ED1\u6811\u7ED3\u70B9</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
            <span class="token comment">// \u8C03\u7528\u7EA2\u9ED1\u6811\u7684 putTreeVal </span>
            e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u627E\u5230\u7684 p \u662F Node \u8282\u70B9\uFF0C\u5219\u8BF4\u660E\u662F\u94FE\u8868\uFF0C\u9700\u8981\u904D\u5386\u67E5\u627E</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
             <span class="token comment">// \u4ECE\u94FE\u8868\u7B2C\u4E00\u4E2A\u7ED3\u70B9\u5F80\u4E0B\u627E</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               	<span class="token comment">// \u5982\u679C\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u662F null \u4E86\u8FD8\u6CA1\u627E\u5230\uFF0C\u8BF4\u660E key \u4E0D\u5728 HashMap \u4E2D\uFF0C\u65B0\u589E\u7ED3\u70B9\u5373\u53EF</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u521B\u5EFA\u65B0\u7684 Node \u8282\u70B9</span>
                    p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u94FE\u8868\u7684\u957F\u5EA6\u5982\u679C\u6570\u91CF\u8FBE\u5230 TREEIFY_THRESHOLD\uFF088\uFF09\u65F6\uFF0C\u5219\u5C06\u94FE\u8868\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> <span class="token constant">TREEIFY_THRESHOLD</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
                        <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5982\u679C e \u5339\u914D\u952E\u503C\u5BF9\uFF0C\u9000\u51FA\u5FAA\u73AF</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token comment">// p \u6307\u5411\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
                p <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C e \u4E0D\u4E3A null\uFF0C\u8868\u793A\u5B58\u5728\u65E7\u7684\u952E\u503C\u5BF9\u4E86\uFF0C\u5219\u9700\u8981\u66F4\u65B0 value \u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token comment">// onlyIfAbsent \u4E3A true \u65F6\uFF0C\u4E0D\u9700\u8981\u66F4\u65B0\u503C\uFF0C\u53CD\u4E4B\uFF0C\u9700\u8981\u66F4\u65B0\u65E7\u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token comment">// \u8282\u70B9\u88AB\u8BBF\u95EE\u7684\u56DE\u8C03</span>
            <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8FD4\u56DE\u65E7\u503C</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4FEE\u6539\u6B21\u6570\u52A0 1</span>
    <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u6570\u7EC4 size \u8D85\u8FC7\u6269\u5BB9\u9608\u503C\uFF0C\u5219\u9700\u8981\u6269\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6DFB\u52A0\u8282\u70B9\u540E\u7684\u56DE\u8C03</span>
    <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD4\u56DE null</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u6DFB\u52A0\u591A\u4E2A\u952E\u503C\u5BF9</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putAll</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">putMapEntries</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">putMapEntries</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">,</span> <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u5F85\u6DFB\u52A0\u6570\u91CF</span>
    <span class="token keyword">int</span> s <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// table \u4E3A null\uFF0C\u5EF6\u8FDF\u521D\u59CB\u5316\u7684\u8BC1\u660E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// pre-size</span>
            <span class="token comment">// \u8BA1\u7B97\u9700\u8981\u521D\u59CB\u5316\u7684 table \u6570\u7EC4\u5927\u5C0F</span>
            <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>s <span class="token operator">/</span> loadFactor<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1.0F</span><span class="token punctuation">;</span>
            <span class="token comment">// \u9650\u5B9A\u4E0D\u8D85\u8FC7\u6700\u5927\u5BB9\u91CF</span>
            <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                     <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u5927\u4E8E\u9608\u503C\uFF0C\u8BBE\u5B9A\u65B0\u7684\u9608\u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
                threshold <span class="token operator">=</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C table \u975E\u7A7A</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
            <span class="token comment">// \u5982\u679C\u8D85\u8FC7\u9608\u503C\uFF0C\u9700\u8981\u6269\u5BB9</span>
            <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386 m\uFF0C\u6328\u4E2A\u63D2\u5165\u5230 HashMap \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> m<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">K</span> key <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">V</span> value <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u627E\u952E\u503C\u5BF9" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u952E\u503C\u5BF9" aria-hidden="true">#</a> \u67E5\u627E\u952E\u503C\u5BF9</h3><ol><li><strong>\u6839\u636E key \u67E5\u8BE2 value</strong></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token comment">// hash(key) \u54C8\u5E0C\u503C</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
    <span class="token comment">// \u67E5\u627E hash \u5BF9\u5E94 table \u4F4D\u7F6E\u7684 p \u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u627E\u5230\u7684 first \u8282\u70B9\uFF0C\u5C31\u662F\u8981\u627E\u7684\uFF0C\u5219\u5219\u76F4\u63A5\u4F7F\u7528\u5373\u53EF</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token comment">// always check first node</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> first<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u627E\u5230\u7684 first \u8282\u70B9\uFF0C\u662F\u7EA2\u9ED1\u6811 Node \u8282\u70B9\uFF0C\u5219\u76F4\u63A5\u5728\u7EA2\u9ED1\u6811\u4E2D\u67E5\u627E</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u627E\u5230\u7684 e \u662F Node \u8282\u70B9\uFF0C\u5219\u8BF4\u660E\u662F\u94FE\u8868\uFF0C\u9700\u8981\u904D\u5386\u67E5\u627E</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>\u5224\u65AD\u662F\u5426\u5305\u542B key</strong></li></ol><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li><strong>\u5224\u65AD\u662F\u5426\u5305\u542B value</strong></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">containsValue</span><span class="token punctuation">(</span><span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">V</span> v<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u904D\u5386 table \u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5904\u7406\u94FE\u8868\u6216\u8005\u7EA2\u9ED1\u6811\u8282\u70B9</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u503C\u76F8\u7B49\uFF0C\u5219\u8FD4\u56DE true</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">==</span> value <span class="token operator">||</span>
                    <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u627E\u4E0D\u5230\uFF0C\u8FD4\u56DE false</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>\u83B7\u5F97 key \u5BF9\u5E94\u7684 value \uFF0C\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE <code>defaultValue</code> \u9ED8\u8BA4\u503C</strong></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">getOrDefault</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> defaultValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> defaultValue <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u94FE\u8868\u8F6C\u4E3A\u6811" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u8F6C\u4E3A\u6811" aria-hidden="true">#</a> \u94FE\u8868\u8F6C\u4E3A\u6811</h3><p>\u5927\u90E8\u5206\u60C5\u51B5\u4E0B\uFF0C\u94FE\u8868\u7684\u957F\u5EA6\u4E0D\u4F1A\u5927\u4E8E 8\uFF0C\u4E5F\u5C31\u4E0D\u4F1A\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u5230\u8FBE 8 \u7684\u6982\u7387\u4E0D\u5230\u5343\u4E07\u5206\u4E4B\u4E00\uFF1B\u53E6\u4E00\u65B9\u9762\uFF0C\u5728\u6811\u5316\u7684\u65B9\u6CD5\u4E2D\uFF0C\u5F53 table \u5BB9\u91CF\u5C0F\u4E8E MIN_TREEIFY_CAPACITY(64) \u65F6\uFF0C\u4F1A\u5148\u8FDB\u884C\u6269\u5BB9\uFF0C\u6269\u5BB9\u540E\u94FE\u8868\u7684\u4F4D\u7F6E\u4F1A\u5206\u88C2\u8FDB\u800C\u540C\u4E00\u4E2A\u4F4D\u7F6E\u7684\u6570\u91CF\u4F1A\u51CF\u5C0F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeifyBin</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> index<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token comment">// &lt;1&gt; \u5982\u679C table \u5BB9\u91CF\u5C0F\u4E8E MIN_TREEIFY_CAPACITY(64) \uFF0C\u5219\u9009\u62E9\u6269\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">MIN_TREEIFY_CAPACITY</span><span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// &lt;2&gt; \u5C06 hash \u5BF9\u5E94\u4F4D\u7F6E\u8FDB\u884C\u6811\u5316</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> tab<span class="token punctuation">[</span>index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u987A\u5E8F\u904D\u5386\u94FE\u8868\uFF0C\u9010\u4E2A\u8F6C\u6362\u6210 TreeNode \u8282\u70B9</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token function">replacementTreeNode</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                p<span class="token punctuation">.</span>prev <span class="token operator">=</span> tl<span class="token punctuation">;</span>
                tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6811\u5316</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> hd<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            hd<span class="token punctuation">.</span><span class="token function">treeify</span><span class="token punctuation">(</span>tab<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6E05\u7A7A-map" tabindex="-1"><a class="header-anchor" href="#\u6E05\u7A7A-map" aria-hidden="true">#</a> \u6E05\u7A7A Map</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span>
    <span class="token comment">// \u589E\u52A0\u4FEE\u6539\u6B21\u6570</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BBE\u7F6E\u5927\u5C0F\u4E3A 0</span>
        size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u6BCF\u4E2A\u4F4D\u7F6E\u4E3A null</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
            tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#\u5E8F\u5217\u5316" aria-hidden="true">#</a> \u5E8F\u5217\u5316</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u5F97 HashMap table \u6570\u7EC4\u5927\u5C0F</span>
    <span class="token keyword">int</span> buckets <span class="token operator">=</span> <span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Write out the threshold, loadfactor, and any hidden stuff</span>
    <span class="token comment">// \u5199\u5165\u975E\u9759\u6001\u5C5E\u6027\u3001\u975E transient \u5C5E\u6027</span>
    s<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u5165 table \u6570\u7EC4\u5927\u5C0F</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>buckets<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u5165 key-value \u952E\u503C\u5BF9\u6570\u91CF</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u5165\u5177\u4F53\u7684 key-value \u952E\u503C\u5BF9</span>
    <span class="token function">internalWriteEntries</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u83B7\u53D6 table \u6570\u7EC4\u5927\u5C0F</span>
<span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>table <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> table<span class="token punctuation">.</span>length <span class="token operator">:</span>
        <span class="token punctuation">(</span>threshold <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> threshold <span class="token operator">:</span>
        <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5199\u5165\u5177\u4F53\u7684 key-value \u952E\u503C\u5BF9</span>
<span class="token keyword">void</span> <span class="token function">internalWriteEntries</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u904D\u5386 table \u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u904D\u5386\u94FE\u8868\u6216\u7EA2\u9ED1\u6811</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5199\u5165 key</span>
                s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5199\u5165 value</span>
                s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CD\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a> \u53CD\u5E8F\u5217\u5316</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectInputStream</span> s<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u975E\u9759\u6001\u5C5E\u6027\u3001\u975E transient \u5C5E\u6027</span>
    s<span class="token punctuation">.</span><span class="token function">defaultReadObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u91CD\u65B0\u521D\u59CB\u5316</span>
    <span class="token function">reinitialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6821\u9A8C loadFactor \u53C2\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">Float</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidObjectException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal load factor: &quot;</span> <span class="token operator">+</span>
                                         loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BFB\u53D6 HashMap table \u6570\u7EC4\u5927\u5C0F</span>
    s<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">// \u8BFB\u53D6 key-value \u952E\u503C\u5BF9\u6570\u91CF size</span>
    <span class="token keyword">int</span> mappings <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">// \u6821\u9A8C size \u53C2\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mappings <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidObjectException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal mappings count: &quot;</span> <span class="token operator">+</span>
                                         mappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mappings <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment">// range of 0.25...4.0</span>
        <span class="token keyword">float</span> lf <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0.25f</span><span class="token punctuation">,</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> fc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>mappings <span class="token operator">/</span> lf <span class="token operator">+</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BA1\u7B97\u5BB9\u91CF</span>
        <span class="token keyword">int</span> cap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fc <span class="token operator">&lt;</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                   <span class="token constant">DEFAULT_INITIAL_CAPACITY</span> <span class="token operator">:</span>
                   <span class="token punctuation">(</span>fc <span class="token operator">&gt;=</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                   <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">:</span>
                   <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>fc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BA1\u7B97 threshold \u9600\u503C</span>
        <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>cap <span class="token operator">*</span> lf<span class="token punctuation">;</span>
        threshold <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cap <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                     <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SharedSecrets</span><span class="token punctuation">.</span><span class="token function">getJavaObjectInputStreamAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">checkArray</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> cap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521B\u5EFA table \u6570\u7EC4</span>
        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>cap<span class="token punctuation">]</span><span class="token punctuation">;</span>
        table <span class="token operator">=</span> tab<span class="token punctuation">;</span>

        <span class="token comment">// \u904D\u5386\u8BFB\u53D6 key-value \u952E\u503C\u5BF9</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> mappings<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BFB\u53D6 key</span>
            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
            <span class="token class-name">K</span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">K</span><span class="token punctuation">)</span> s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8BFB\u53D6 value</span>
            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
            <span class="token class-name">V</span> value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span> s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u6DFB\u52A0 key-value \u952E\u503C\u5BF9</span>
            <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u91CD\u7F6E\u4E3A\u521D\u59CB\u9ED8\u8BA4\u72B6\u6001\u3002\u7531 clone \u548C readObject \u8C03\u7528</span>
<span class="token keyword">void</span> <span class="token function">reinitialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    table <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    entrySet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    keySet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    values <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    modCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    threshold <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p><code>HashMap</code> \u662F\u4E00\u79CD\u6563\u5217\u8868\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5E95\u5C42\u91C7\u7528\u6570\u7EC4 + \u94FE\u8868 + \u7EA2\u9ED1\u6811\u6765\u5B9E\u73B0\uFF0C\u4F7F\u7528 Node \u6570\u7EC4\uFF08Node&lt;K,V&gt;[] table\uFF09\u5B58\u50A8\u6570\u636E\uFF0C\u5728\u6570\u7EC4\u7684\u5177\u4F53\u7D22\u5F15\u4F4D\u7F6E\uFF0C\u5982\u679C\u5B58\u5728\u591A\u4E2A\u8282\u70B9\uFF0C\u5219\u53EF\u80FD\u662F\u4EE5\u94FE\u8868\u6216\u7EA2\u9ED1\u6811\u7684\u5F62\u5F0F\u5B58\u5728\u3002</p><p><code>HashMap</code> \u9ED8\u8BA4\u5BB9\u91CF\u4E3A 16(<code>1 &lt;&lt; 4</code>)\uFF0C\u6BCF\u6B21\u8D85\u8FC7\u9600\u503C\u65F6\uFF0C\u6309\u7167\u4E24\u500D\u5927\u5C0F\u8FDB\u884C\u81EA\u52A8\u6269\u5BB9\uFF0C\u6240\u4EE5\u5BB9\u91CF\u603B\u662F 2^N \u6B21\u65B9\u3002\u5E76\u4E14\uFF0C\u5E95\u5C42\u7684 <code>table</code> \u6570\u7EC4\u662F\u5EF6\u8FDF\u521D\u59CB\u5316\uFF0C\u5728\u9996\u6B21\u6DFB\u52A0 key-value \u952E\u503C\u5BF9\u624D\u8FDB\u884C\u521D\u59CB\u5316\u3002</p><p><code>HashMap</code> \u6839\u636E key \u8BA1\u7B97\u54C8\u5E0C\u503C\u5F97\u5230\u6570\u7EC4\u4E2D\u4F4D\u7F6E\u7684\u8FC7\u7A0B\uFF1A</p><ul><li>\u8C03\u7528 key \u7684 <code>hashCode()</code> \u65B9\u6CD5\uFF0C\u5F97\u5230\u54C8\u5E0C\u503C h\uFF1B</li><li>\u5C06 h \u4E0E h &gt;&gt;&gt; 16 \u8FDB\u884C<strong>\u5F02\u6216</strong>\u8FD0\u7B97\u5F97\u5230\u65B0\u54C8\u5E0C\u503C h\uFF1B</li><li>\u5728 h \u548C (length-1) \u8FDB\u884C<strong>\u4E0E</strong>\u8FD0\u7B97\uFF0C\u5F97\u5230 key \u5728\u54C8\u5E0C\u6876\u6570\u7EC4\u4E2D\u4F4D\u7F6E\u3002</li></ul><p><code>HashMap</code> \u6BCF\u4E2A\u69FD\u4F4D\u5728\u6EE1\u8DB3\u5982\u4E0B\u4E24\u4E2A\u6761\u4EF6\u65F6\uFF0C\u53EF\u4EE5\u8FDB\u884C\u6811\u5316\u6210\u7EA2\u9ED1\u6811\uFF0C\u907F\u514D\u69FD\u4F4D\u662F\u94FE\u8868\u6570\u636E\u7ED3\u6784\u65F6\uFF0C\u94FE\u8868\u8FC7\u957F\uFF0C\u5BFC\u81F4\u67E5\u627E\u6027\u80FD\u8FC7\u6162\uFF1A</p>`,30),m=n("li",null,[s("\u6761\u4EF6\u4E00\uFF0CHashMap \u7684 "),n("code",null,"table"),s(" \u6570\u7EC4\u5927\u4E8E\u7B49\u4E8E 64 \u3002")],-1),b=s("\u6761\u4EF6\u4E8C\uFF0C\u69FD\u4F4D\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u7B49\u4E8E 8 \u65F6\u3002\u9009\u62E9 8 \u4F5C\u4E3A\u9600\u503C\u7684\u539F\u56E0\u662F\uFF0C\u53C2\u8003 "),y={href:"http://en.wikipedia.org/wiki/Poisson_distribution",target:"_blank",rel:"noopener noreferrer"},h=s("\u6CCA\u677E\u6982\u7387\u51FD\u6570(Poisson distribution)"),w=s(" \uFF0C\u6982\u7387\u4E0D\u8DB3\u5343\u4E07\u5206\u4E4B\u4E00\u3002"),g=n("li",null,"\u5728\u69FD\u4F4D\u7684\u7EA2\u9ED1\u6811\u7684\u8282\u70B9\u6570\u91CF\u5C0F\u4E8E\u7B49\u4E8E 6 \u65F6\uFF0C\u4F1A\u9000\u5316\u56DE\u94FE\u8868\u3002",-1),f=n("h2",{id:"\u53C2\u8003\u8D44\u6599",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u8003\u8D44\u6599","aria-hidden":"true"},"#"),s(" \u53C2\u8003\u8D44\u6599")],-1),T={href:"https://www.iocoder.cn/",target:"_blank",rel:"noopener noreferrer"},A=s("\u828B\u9053\u6E90\u7801"),M={href:"https://www.jianshu.com/p/cbe3f22793be?u_atoken=389c0186-45bc-4ba6-97f1-8bbb7a3e4341&u_asession=015cDlaaOXLfbDL5uptAIcb3E81XckrpHezfGiGtqOUvuVi96ixk9Q4F0fhWtg7-mSX0KNBwm7Lovlpxjd_P_q4JsKWYrT3W_NKPr8w6oU7K-yznd_ThP1xiul9bL2S04InHmbkqVcEgdObpAroqY1_GBkFo3NEHBv0PZUm6pbxQU&u_asig=05Lp3qL_cCDfZcsRdAuiHlpEiDTnR6JoXH6mpQhKQT9rEhLlu7YRt05038ORm4miM2Pmxw4NvfxEd3eh7Nhq8OIbKP3iiCG_RJoEFESGSjFZ_KXXoNMnGnGmEIOIsGgBnOvGdZS_04ClqxMbGyxdBEegM9iatjONN7hXA86TwyPBX9JS7q8ZD7Xtz2Ly-b0kmuyAKRFSVJkkdwVUnyHAIJzbOZ5aj1FYacQjaymGdaRP1_XmSZ1WpEB5T6z6oX2yCY6xbSxAaWh9ph0bRUFW-6vO3h9VXwMyh6PgyDIVSG1W_kkdfGvHZi4IzMzfbBrJC2nWtBrWI9OIMXDMZFVpvEDkhKEvUTiPAwMFaRQHosGdHlI13pYgjOazBqUFWsMvbYmWspDxyAEEo4kbsryBKb9Q&u_aref=%2BtDWq%2FOl84O3riXs%2BFgR3Q2khd4%3D",target:"_blank",rel:"noopener noreferrer"},_=s("Java8\u2014HashMap\u4E4BtableSizeFor()"),I={href:"https://www.zhihu.com/question/20733617/answer/111577937",target:"_blank",rel:"noopener noreferrer"},V=s("\u80D6\u541B-hash\u65B9\u6CD5\u539F\u7406");function j(C,x){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[k,n("a",r,[d,p(a)])]),v,n("ul",null,[m,n("li",null,[b,n("a",y,[h,p(a)]),w]),g]),f,n("ul",null,[n("li",null,[n("a",T,[A,p(a)])]),n("li",null,[n("a",M,[_,p(a)])]),n("li",null,[n("a",I,[V,p(a)])])])])}const K=e(i,[["render",j],["__file","03-HashMap.html.vue"]]);export{K as default};
