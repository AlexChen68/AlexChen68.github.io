const e=JSON.parse(`{"key":"v-79ade7c7","path":"/java/basic/grammar.html","title":"Java 基础语法","lang":"zh-CN","frontmatter":{"title":"Java 基础语法","order":1,"category":"Java","date":"2023-04-12T00:00:00.000Z","description":"Java 三大特性 Java 具有三大特性，分别是封装、继承和多态。 封装 利用抽象数据类型将数据和基于数据的操作封装在一起，使其构成一个不可分割的独立实体。数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系。用户无需知道对象内部的细节，但可以通过对象对外提供的接口来访问该对象。 优点： 减少耦合：可以独立地开发、测试、优化、使用、理解和修改 减轻维护的负担：可以更容易被程序员理解，并且在调试的时候可以不影响其他模块 有效地调节性能：可以通过剖析确定哪些模块影响了系统的性能 提高软件的可重用性 降低了构建大型系统的风险：即使整个系统不可用，但是这些独立的模块却有可能是可用的","head":[["meta",{"property":"og:url","content":"https://github.com/AlexChen68/AlexChen68.github.io/java/basic/grammar.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:title","content":"Java 基础语法"}],["meta",{"property":"og:description","content":"Java 三大特性 Java 具有三大特性，分别是封装、继承和多态。 封装 利用抽象数据类型将数据和基于数据的操作封装在一起，使其构成一个不可分割的独立实体。数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系。用户无需知道对象内部的细节，但可以通过对象对外提供的接口来访问该对象。 优点： 减少耦合：可以独立地开发、测试、优化、使用、理解和修改 减轻维护的负担：可以更容易被程序员理解，并且在调试的时候可以不影响其他模块 有效地调节性能：可以通过剖析确定哪些模块影响了系统的性能 提高软件的可重用性 降低了构建大型系统的风险：即使整个系统不可用，但是这些独立的模块却有可能是可用的"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-13T11:38:25.000Z"}],["meta",{"property":"article:author","content":"AlexChen"}],["meta",{"property":"article:published_time","content":"2023-04-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-13T11:38:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 基础语法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-13T11:38:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlexChen\\",\\"url\\":\\"https://github.com/AlexChen68\\"}]}"]]},"headers":[{"level":2,"title":"Java 三大特性","slug":"java-三大特性","link":"#java-三大特性","children":[]},{"level":2,"title":"Java 数据类型","slug":"java-数据类型","link":"#java-数据类型","children":[{"level":3,"title":"八种基本数据类型","slug":"八种基本数据类型","link":"#八种基本数据类型","children":[]},{"level":3,"title":"引用数据类型","slug":"引用数据类型","link":"#引用数据类型","children":[]},{"level":3,"title":"两种类型的区别","slug":"两种类型的区别","link":"#两种类型的区别","children":[]}]},{"level":2,"title":"数据类型转换","slug":"数据类型转换","link":"#数据类型转换","children":[{"level":3,"title":"自动类型转换","slug":"自动类型转换","link":"#自动类型转换","children":[]},{"level":3,"title":"强制类型转换","slug":"强制类型转换","link":"#强制类型转换","children":[]},{"level":3,"title":"int 和 char 类型互转","slug":"int-和-char-类型互转","link":"#int-和-char-类型互转","children":[]},{"level":3,"title":"int[] 和 List<Integer> 转换","slug":"int-和-list-integer-转换","link":"#int-和-list-integer-转换","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1681385905000,"updatedTime":1681385905000,"contributors":[{"name":"alexchen68","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":5.9,"words":1770},"filePathRelative":"java/basic/grammar.md","localizedDate":"2023年4月12日","excerpt":"<h2> Java 三大特性</h2>\\n<p>Java 具有三大特性，分别是<strong>封装</strong>、<strong>继承</strong>和<strong>多态</strong>。</p>\\n<p><strong>封装</strong></p>\\n<p>利用抽象数据类型将数据和基于数据的操作封装在一起，使其构成一个不可分割的独立实体。数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系。用户无需知道对象内部的细节，但可以通过对象对外提供的接口来访问该对象。</p>\\n<p>优点：</p>\\n<ul>\\n<li>减少耦合：可以独立地开发、测试、优化、使用、理解和修改</li>\\n<li>减轻维护的负担：可以更容易被程序员理解，并且在调试的时候可以不影响其他模块</li>\\n<li>有效地调节性能：可以通过剖析确定哪些模块影响了系统的性能</li>\\n<li>提高软件的可重用性</li>\\n<li>降低了构建大型系统的风险：即使整个系统不可用，但是这些独立的模块却有可能是可用的</li>\\n</ul>","autoDesc":true}`);export{e as data};
