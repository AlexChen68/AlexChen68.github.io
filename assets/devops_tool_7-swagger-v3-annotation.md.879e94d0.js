import{_ as e,o as a,c as n,Q as t}from"./chunks/framework.419948d5.js";const P=JSON.parse('{"title":"OpenApi3 规范的接口文档","description":"","frontmatter":{"title":"OpenApi3 规范的接口文档","date":"2023-07-17T00:00:00.000Z"},"headers":[],"relativePath":"devops/tool/7-swagger-v3-annotation.md","filePath":"devops/tool/7-swagger-v3-annotation.md","lastUpdated":1697504454000}'),o={name:"devops/tool/7-swagger-v3-annotation.md"},p=t('<h2 id="openapi-规范" tabindex="-1">OpenAPI 规范 <a class="header-anchor" href="#openapi-规范" aria-label="Permalink to &quot;OpenAPI 规范&quot;">​</a></h2><p>OpenAPI 3.0.0 是 OpenAPI 规范的第一个正式版本，因为它是由 SmartBear Software 捐赠给 OpenAPI Initiative，并在 2015 年从 Swagger 规范重命名为 OpenAPI 规范。</p><p><a href="https://openapi.apifox.cn/" target="_blank" rel="noreferrer">OpenAPI 规范 (中文版)</a></p><h2 id="springdoc-openapi3" tabindex="-1">SpringDoc + OpenApi3 <a class="header-anchor" href="#springdoc-openapi3" aria-label="Permalink to &quot;SpringDoc + OpenApi3&quot;">​</a></h2><p>SpringDoc 基于 OpenAPI 3 规范，用于 SpringBoot 项目中 API 文档的生成和维护的工具类。</p><p>Swagger 一个开源的工具集，其中包括 Swagger Editor、Swagger UI 和 Swagger Codegen 等组件。Swagger 工具集使用 OpenAPI 规范，可以生成、展示和测试基于 OpenAPI 规范的 API 文档，并提供了生成客户端代码的功能。</p><p>Knife4j 完全遵循了 Swagger2 的使用方式，同时还使用了 OpenAPI 3 规范，所以直接使用 Knife4j 就行。</p>',7),r=[p];function i(s,g,c,d,_,l){return a(),n("div",null,r)}const S=e(o,[["render",i]]);export{P as __pageData,S as default};
