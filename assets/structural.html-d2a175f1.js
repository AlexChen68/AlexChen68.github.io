const n=JSON.parse(`{"key":"v-185bdc8f","path":"/md/advance/design/structural/structural.html","title":"","lang":"zh-CN","frontmatter":{"description":"外观(Facade) 它提供了一个统一的接口，用来访问子系统中的一群接口，从而让子系统更容易使用。 这种模式涉及到一个单一的类，该类提供了客户端请求的简化方法和对现有系统类方法的委托调用。 public interface Shape { void draw(); } class Rectangle implements Shape { @Override public void draw() { System.out.println(\\"Rectangle::draw()\\"); } } class Square implements Shape { @Override public void draw() { System.out.println(\\"Square::draw()\\"); } } class Circle implements Shape { @Override public void draw() { System.out.println(\\"Circle::draw()\\"); } }","head":[["meta",{"property":"og:url","content":"https://AlexChen68.github.com/blog/blog/md/advance/design/structural/structural.html"}],["meta",{"property":"og:site_name","content":"AlexChen's Blog"}],["meta",{"property":"og:description","content":"外观(Facade) 它提供了一个统一的接口，用来访问子系统中的一群接口，从而让子系统更容易使用。 这种模式涉及到一个单一的类，该类提供了客户端请求的简化方法和对现有系统类方法的委托调用。 public interface Shape { void draw(); } class Rectangle implements Shape { @Override public void draw() { System.out.println(\\"Rectangle::draw()\\"); } } class Square implements Shape { @Override public void draw() { System.out.println(\\"Square::draw()\\"); } } class Circle implements Shape { @Override public void draw() { System.out.println(\\"Circle::draw()\\"); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-29T15:15:23.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-29T15:15:23.000Z"}]]},"headers":[{"level":3,"title":"外观(Facade)","slug":"外观-facade","link":"#外观-facade","children":[]},{"level":3,"title":"适配器(Adapter)","slug":"适配器-adapter","link":"#适配器-adapter","children":[]}],"git":{"createdTime":1672326923000,"updatedTime":1672326923000,"contributors":[{"name":"alexchen","email":"1274812218@qq.com","commits":1}]},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"md/advance/design/structural/structural.md","localizedDate":"2022年12月29日","excerpt":"<h3> 外观(Facade)</h3>\\n<blockquote>\\n<p>它提供了一个统一的接口，用来访问子系统中的一群接口，从而让子系统更容易使用。</p>\\n<p>这种模式涉及到一个单一的类，该类提供了客户端请求的简化方法和对现有系统类方法的委托调用。</p>\\n</blockquote>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Shape</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">draw</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Rectangle</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Shape</span> <span class=\\"token punctuation\\">{</span>\\n \\n   <span class=\\"token annotation punctuation\\">@Override</span>\\n   <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">draw</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Rectangle::draw()\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n   <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Square</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Shape</span> <span class=\\"token punctuation\\">{</span>\\n \\n   <span class=\\"token annotation punctuation\\">@Override</span>\\n   <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">draw</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Square::draw()\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n   <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Circle</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Shape</span> <span class=\\"token punctuation\\">{</span>\\n \\n   <span class=\\"token annotation punctuation\\">@Override</span>\\n   <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">draw</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Circle::draw()\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n   <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
