import{_ as n,V as s,W as a,$ as p,X as t,a0 as o}from"./framework-82df2182.js";const e={},c=t("p",null,"设计模式之简单工厂",-1),l=o(`<h3 id="简单工厂-simple-factory" tabindex="-1"><a class="header-anchor" href="#简单工厂-simple-factory" aria-hidden="true">#</a> 简单工厂(Simple Factory)</h3><p><strong>定义</strong></p><blockquote><p>定义一个工厂类，可以根据传入的参数不同创建不同类实例，被创建的实例通常都有相同的父类。 简单工厂模式在java中得到了大量的使用，它属于创建型的设计模式，但是它不属于GOF23设计模式中的一种。</p><p>工厂模式提供公共的接口，客户端直接使用公共接口来创建对象，客户端这边不关心对象是怎么创建的，其中包含3个角色：工厂角色，抽象产品角色，具体产品角色。 工厂角色是简单工厂模式的核心，负责产品实例的内部逻辑； 抽象产品角色是所有具体产品角色的父类，封装了公共的方法； 具体产品角色是工厂角色创建的目标对象。</p><p>因为简单工厂模式将对象的创建和使用分离，使得系统更加符合单一职责原则。</p></blockquote><p><strong>适用场景</strong></p><ol><li>工厂类创建的对象比较少；</li><li>客户端只需要传入某个参数，对如何创建对象不关心。</li></ol><p><strong>优点</strong></p><ol><li>只需要传入参数就可以获取到需要的对象，客户端使用简单；</li><li>通过反射或者配置文件，可以在不修改任何代码的情况下更换或者新增产品类，提供系统的灵活性；</li><li>让创建和使用进行分离。</li></ol><p><strong>缺点</strong></p><ol><li>工厂类的职责比较重，如果新增一些类，需要修改工厂类判断逻辑，违背了开闭原则；</li><li>增加类的个数，增加系统的复杂性和理解难度。</li></ol><p><strong>代码示例</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Mobile</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">produce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IphoneMobile</span> <span class="token keyword">implements</span> <span class="token class-name">Mobile</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">produce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;生产苹果手机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HuaweiMobile</span> <span class="token keyword">implements</span> <span class="token class-name">Mobile</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">produce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;生产华为手机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FoxconnFactory</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Mobile</span> <span class="token function">getMobile</span><span class="token punctuation">(</span><span class="token class-name">String</span> mobileType<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;iphone&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>mobileType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IphoneMobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;huawei&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>mobileType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HuaweiMobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleFactoryTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FoxconnFactory</span> foxconnFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FoxconnFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Mobile</span> mobile <span class="token operator">=</span> foxconnFactory<span class="token punctuation">.</span><span class="token function">getMobile</span><span class="token punctuation">(</span><span class="token string">&quot;iphone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mobile<span class="token punctuation">.</span><span class="token function">produce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Mobile</span> huawei <span class="token operator">=</span> foxconnFactory<span class="token punctuation">.</span><span class="token function">getMobile</span><span class="token punctuation">(</span><span class="token string">&quot;huawei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        huawei<span class="token punctuation">.</span><span class="token function">produce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function i(u,k){return s(),a("div",null,[c,p(" more "),l])}const d=n(e,[["render",i],["__file","SimpleFactory.html.vue"]]);export{d as default};
